{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Nocalhost"},{"location":"zh/","text":"","title":"Nocalhost"},{"location":"eng/core-concept/","text":"In this documentation, we will explain the core idea of Nocalhost and clarify some technical terms that are widely used in the project. Cluster Cluster is a concept of Nocalhost. It usually corresponds to a Kubernetes cluster. Nocalhost supports to connect to multi-clusters, which can be GKE, minikube and microK8s. In the actual development process, users do not need to know the concept of Cluster, and user's operation under DevSpace actually rely on the capabilities of Cluster. Cluster Management Cluster is generally used with DevSpace, if you need to manage Cluster, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server \u3002 Manage Cluster If you want to manage a Cluster\uff0cthen need to maintain a kubeConfig with the cluster's Cluster-Admin role. DevSpace DevSpace is a concept of Nocalhost, which represents a pre-allocated cloud development space managed by Nocalhost. Developers can deploy, uninstall, develop, and debug applications in DevSpace at any time. DevSpaces are isolated from each other. Nocalhost also allow developers to share their DevSpaces with other developers for collaborative development. Because of the isolation of DevSpace, it can also be used as a test environment. DevSpace Management If you need to manage DevSpace, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server \u3002 Application Application is a concept of Nocalhost, it is mainly used to manage a set of manifest files you want to apply for local development, it supports both Kubernetes manifest and helm chart. In other words, these manifests usually contain all the k8s resources that your own application depends on. If possible, we should try to keep it to a minimum. Nocalhost supports three types of applications: Manifest Helm Kustomize Application can be used to create a DevSpace , we recommend using IDE plug-in directly to deploy your application, IDE plugin is worked on the DevSpace created by Application. In other words, after being assigned a DevSpace, the developer can easily develop on the IDE. After being assigned a DevSpace, you will get a kubeconfig to access this DevSpace, nhctl or plug-in can deploy the application based on the application's manifest file and kubeconfig. So DevSpace can actually be approximated as Application + kubeconfig : Application Management If you need to manage Applicationace, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server . Application Configuration Read Best Practice of Application \u3002 Service Service is completely different from svc of Kubernetes. Service can be considered as an enhancement of Deployment, corresponding to a specify service in your application. Service currently supports: Configure the Nocalhost Dev-Mode, such as which directory after entering the DevContainer, which files are synchronized to the development container, etc. Supports deployment startup sequence control based on dependencies Service Congiguration Read Best Practice of Service \u3002 Note Service configurations are not necessary, only needs to be configured when you need it. User User belongs to the independent concept of Nocalhost, it's different with Kubernetes's user. When you use Nocalhost Server and Nocalhost Plugins, User is used to identify your identity and access control to resources. There are two types of User in Nocalhost: Standard User and System Admin Standard User Can only log in IDE Plugin, users can develop under their own DevSpace. these DevSpace are all created by Administrator. User can only see their own DevSpace, and have all the permissions under these DevSpace, such as install, uninstall (deploy and destroy), enter DevMode and port-forwarding. Cannot log in to Nocalhost-Web, nor can they delete the DevSpace, or disassociate it from the DevSpace, which is very similar to the admin permission under a certain namespace of Kubernetes. System Admin Has the permission to access Nocalhost Server, and with all the permissions in Nocalhost Web, such as create and manage Application, Cluster, User, DevSpace, etc Have all the permissions of User , such as logging in at IDE plugins, develop in their own DevSpace list User Management If you need to manage User, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server . DevMode DevMode refers to a state corresponding to the microservice workload when the developer uses Nocalhost for microservice development. In this state, the workload will be converted into a mode that can easily support developers to develop debugging programs. In the existing Nocalhost development environment that based on Kubernetes, the main changes in DevMode are as follows: The number of copies of the workload will be adjusted to 1 The Pod's health check will be disabled (it is convenient to keep trying to restart the process for debugging during the development) Pod container will be replaced with DevContainer SecurityContext will be disabled A Nocalhost-Sidecar container will be injected into Pod, in order to support remote file synchronization Pod will be added with a Volume to support file sharing between DevContainer and Nocalhost-Sidecar DevContainer DevContainer is a basic environment for users to support the development and debugging of a specify microservice component. This environment is packaged into a container, which often contains a full set of SDKs , development and debugging tools, and other tools for developing this microservice component. When the service workload is switched to DevMode , Nocalhost will use DevContainer to replace the original workload container. DevContainer's life cycle runs through the entire development and debugging process, it created when DevMode starts. During the life cycle, local source code changes will be automatically synchronized to DevContainer , and can be directly compiled and deployed in the container. DevContainer Configuration Read Best Practice of DevContainer \u3002","title":"How it works"},{"location":"eng/core-concept/#cluster","text":"Cluster is a concept of Nocalhost. It usually corresponds to a Kubernetes cluster. Nocalhost supports to connect to multi-clusters, which can be GKE, minikube and microK8s. In the actual development process, users do not need to know the concept of Cluster, and user's operation under DevSpace actually rely on the capabilities of Cluster.","title":"Cluster"},{"location":"eng/core-concept/#cluster-management","text":"Cluster is generally used with DevSpace, if you need to manage Cluster, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server \u3002 Manage Cluster If you want to manage a Cluster\uff0cthen need to maintain a kubeConfig with the cluster's Cluster-Admin role.","title":"Cluster Management"},{"location":"eng/core-concept/#devspace","text":"DevSpace is a concept of Nocalhost, which represents a pre-allocated cloud development space managed by Nocalhost. Developers can deploy, uninstall, develop, and debug applications in DevSpace at any time. DevSpaces are isolated from each other. Nocalhost also allow developers to share their DevSpaces with other developers for collaborative development. Because of the isolation of DevSpace, it can also be used as a test environment.","title":"DevSpace"},{"location":"eng/core-concept/#devspace-management","text":"If you need to manage DevSpace, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server \u3002","title":"DevSpace Management"},{"location":"eng/core-concept/#application","text":"Application is a concept of Nocalhost, it is mainly used to manage a set of manifest files you want to apply for local development, it supports both Kubernetes manifest and helm chart. In other words, these manifests usually contain all the k8s resources that your own application depends on. If possible, we should try to keep it to a minimum. Nocalhost supports three types of applications: Manifest Helm Kustomize Application can be used to create a DevSpace , we recommend using IDE plug-in directly to deploy your application, IDE plugin is worked on the DevSpace created by Application. In other words, after being assigned a DevSpace, the developer can easily develop on the IDE. After being assigned a DevSpace, you will get a kubeconfig to access this DevSpace, nhctl or plug-in can deploy the application based on the application's manifest file and kubeconfig. So DevSpace can actually be approximated as Application + kubeconfig :","title":"Application"},{"location":"eng/core-concept/#application-management","text":"If you need to manage Applicationace, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server .","title":"Application Management"},{"location":"eng/core-concept/#application-configuration","text":"Read Best Practice of Application \u3002","title":"Application Configuration"},{"location":"eng/core-concept/#service","text":"Service is completely different from svc of Kubernetes. Service can be considered as an enhancement of Deployment, corresponding to a specify service in your application. Service currently supports: Configure the Nocalhost Dev-Mode, such as which directory after entering the DevContainer, which files are synchronized to the development container, etc. Supports deployment startup sequence control based on dependencies","title":"Service"},{"location":"eng/core-concept/#service-congiguration","text":"Read Best Practice of Service \u3002 Note Service configurations are not necessary, only needs to be configured when you need it.","title":"Service Congiguration"},{"location":"eng/core-concept/#user","text":"User belongs to the independent concept of Nocalhost, it's different with Kubernetes's user. When you use Nocalhost Server and Nocalhost Plugins, User is used to identify your identity and access control to resources. There are two types of User in Nocalhost: Standard User and System Admin","title":"User"},{"location":"eng/core-concept/#standard-user","text":"Can only log in IDE Plugin, users can develop under their own DevSpace. these DevSpace are all created by Administrator. User can only see their own DevSpace, and have all the permissions under these DevSpace, such as install, uninstall (deploy and destroy), enter DevMode and port-forwarding. Cannot log in to Nocalhost-Web, nor can they delete the DevSpace, or disassociate it from the DevSpace, which is very similar to the admin permission under a certain namespace of Kubernetes.","title":"Standard User"},{"location":"eng/core-concept/#system-admin","text":"Has the permission to access Nocalhost Server, and with all the permissions in Nocalhost Web, such as create and manage Application, Cluster, User, DevSpace, etc Have all the permissions of User , such as logging in at IDE plugins, develop in their own DevSpace list","title":"System Admin"},{"location":"eng/core-concept/#user-management","text":"If you need to manage User, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server .","title":"User Management"},{"location":"eng/core-concept/#devmode","text":"DevMode refers to a state corresponding to the microservice workload when the developer uses Nocalhost for microservice development. In this state, the workload will be converted into a mode that can easily support developers to develop debugging programs. In the existing Nocalhost development environment that based on Kubernetes, the main changes in DevMode are as follows: The number of copies of the workload will be adjusted to 1 The Pod's health check will be disabled (it is convenient to keep trying to restart the process for debugging during the development) Pod container will be replaced with DevContainer SecurityContext will be disabled A Nocalhost-Sidecar container will be injected into Pod, in order to support remote file synchronization Pod will be added with a Volume to support file sharing between DevContainer and Nocalhost-Sidecar","title":"DevMode"},{"location":"eng/core-concept/#devcontainer","text":"DevContainer is a basic environment for users to support the development and debugging of a specify microservice component. This environment is packaged into a container, which often contains a full set of SDKs , development and debugging tools, and other tools for developing this microservice component. When the service workload is switched to DevMode , Nocalhost will use DevContainer to replace the original workload container. DevContainer's life cycle runs through the entire development and debugging process, it created when DevMode starts. During the life cycle, local source code changes will be automatically synchronized to DevContainer , and can be directly compiled and deployed in the container.","title":"DevContainer"},{"location":"eng/core-concept/#devcontainer-configuration","text":"Read Best Practice of DevContainer \u3002","title":"DevContainer Configuration"},{"location":"eng/getting-started/","text":"Welcome to Nocalhost! In this guide, we'll walk you through how to install Nocalhost, and use Nocalhost to experience the convenient Cloud Native applications development on Kubernetes. Prerequisites Configured Kubernetes Cluster (with 2 Core and 4G Memory) which can either be a cluster for local development, such as minikube or Docker Kubernetes cluster, or any public Kubernetes cluster, such as Tencent TKE . RBAC must be enabled in above cluster Configured kubeconfig file that has namespace admin privilege Visual Studio Code (1.52+) Kubernetes api-server can be accessed internal and external Step 1: Install Make sure you have finished the Nocalhost VSCode plugin following Client Installation If you are using linux, you should increase your inotify limit otherwise file-synchronization may be slow. Step 2: Configure and use Nocalhost extension in VSCode Open Extension Open the VSCode, click on the Nocalhost icon on the sidebar, open the Nocalhost plugin Add Kubernetes cluster You can add a Kubernetes cluster by two methods: - Select kubeconfig file to select the kubeconfig file from your local path. Note Nocalhost will try to load kubeconfig from your local ~/.kube/config by default. - Paste as text to paste the kubeconfig plain text. Tip You can check your kubeconfig by using kubectl config view --minify --raw --flatten After the kubeconfig file successfully loaded, select the context that you want to access, then add the cluster. Nocalhost will automatically show the cluster list once you successfully add cluster: Tip We will using the bookinfo application as an example here. You can use your own application that already deployed in your Kubernetes clusters, or you can follow Deploy Demo Application to deploy demo app in your Kubernetes clusters. Step 3: Start DevMode Select the application that you want to develop, we are using the bookinfo app as example. Select the productpage service, click to start the DevMode , specify the source code directory (clone from Git repo or use existing local directory) Note If you want to change the Git repo after url has set, you can click to modify the gitUrl option in the yaml file After specify the source code directory (or successfully clone the code), Nocalhost will open a new VSCode window, then will automatically start the DevMode. When DevMode completed, you should see the following message: Starting DevMode... ... Waiting pod to start... Forwarding 39080:9080 Response: {\"errInfo\":\"\"} Port-forward 39080:9080 has been started \u2713 Dev container has been updated ... Tip Nocalhost will automatically run port-forward to a pod in a Kubernetes cluster. In this case, local port 39080 forwards data to port 9080 on the defined pod. You can access this pod via http://127.0.0.1:39080 after the main process started Step 4: Change the code and check the result Let's make some code change and see how Nocalhost works Execute sh command in remote terminal to start the python process sh run.sh Main process within container In DevMode, the application main process will not automatically start by default in the DevContainer, thus the application will not response any request. You need to manually start the main process before you can access. Open your web browser and check the result on http://127.0.0.1:39080 Change the code Let's modify template/index.html or something else. Don't forget to Save your change. Refresh the web browser and check the latest outcome http://127.0.0.1:39080 \ud83d\udc4d Congratulations! You are all set to go What's Next Here are some recommended next steps: Read Nocalhost's Core Concept Visit our Github Repo Join our Slack or scan the code to join our WeChat Group","title":"Quick Started"},{"location":"eng/getting-started/#prerequisites","text":"Configured Kubernetes Cluster (with 2 Core and 4G Memory) which can either be a cluster for local development, such as minikube or Docker Kubernetes cluster, or any public Kubernetes cluster, such as Tencent TKE . RBAC must be enabled in above cluster Configured kubeconfig file that has namespace admin privilege Visual Studio Code (1.52+) Kubernetes api-server can be accessed internal and external","title":"Prerequisites"},{"location":"eng/getting-started/#step-1-install","text":"Make sure you have finished the Nocalhost VSCode plugin following Client Installation If you are using linux, you should increase your inotify limit otherwise file-synchronization may be slow.","title":"Step 1: Install"},{"location":"eng/getting-started/#step-2-configure-and-use-nocalhost-extension-in-vscode","text":"","title":"Step 2: Configure and use Nocalhost extension in VSCode"},{"location":"eng/getting-started/#open-extension","text":"Open the VSCode, click on the Nocalhost icon on the sidebar, open the Nocalhost plugin","title":"Open Extension"},{"location":"eng/getting-started/#add-kubernetes-cluster","text":"You can add a Kubernetes cluster by two methods: - Select kubeconfig file to select the kubeconfig file from your local path. Note Nocalhost will try to load kubeconfig from your local ~/.kube/config by default. - Paste as text to paste the kubeconfig plain text. Tip You can check your kubeconfig by using kubectl config view --minify --raw --flatten After the kubeconfig file successfully loaded, select the context that you want to access, then add the cluster. Nocalhost will automatically show the cluster list once you successfully add cluster: Tip We will using the bookinfo application as an example here. You can use your own application that already deployed in your Kubernetes clusters, or you can follow Deploy Demo Application to deploy demo app in your Kubernetes clusters.","title":"Add Kubernetes cluster"},{"location":"eng/getting-started/#step-3-start-devmode","text":"Select the application that you want to develop, we are using the bookinfo app as example. Select the productpage service, click to start the DevMode , specify the source code directory (clone from Git repo or use existing local directory) Note If you want to change the Git repo after url has set, you can click to modify the gitUrl option in the yaml file After specify the source code directory (or successfully clone the code), Nocalhost will open a new VSCode window, then will automatically start the DevMode. When DevMode completed, you should see the following message: Starting DevMode... ... Waiting pod to start... Forwarding 39080:9080 Response: {\"errInfo\":\"\"} Port-forward 39080:9080 has been started \u2713 Dev container has been updated ... Tip Nocalhost will automatically run port-forward to a pod in a Kubernetes cluster. In this case, local port 39080 forwards data to port 9080 on the defined pod. You can access this pod via http://127.0.0.1:39080 after the main process started","title":"Step 3: Start DevMode"},{"location":"eng/getting-started/#step-4-change-the-code-and-check-the-result","text":"Let's make some code change and see how Nocalhost works","title":"Step 4: Change the code and check the result"},{"location":"eng/getting-started/#execute-sh-command-in-remote-terminal-to-start-the-python-process","text":"sh run.sh Main process within container In DevMode, the application main process will not automatically start by default in the DevContainer, thus the application will not response any request. You need to manually start the main process before you can access. Open your web browser and check the result on http://127.0.0.1:39080","title":"Execute sh command in remote terminal to start the python process"},{"location":"eng/getting-started/#change-the-code","text":"Let's modify template/index.html or something else. Don't forget to Save your change. Refresh the web browser and check the latest outcome http://127.0.0.1:39080 \ud83d\udc4d Congratulations! You are all set to go","title":"Change the code"},{"location":"eng/getting-started/#whats-next","text":"Here are some recommended next steps: Read Nocalhost's Core Concept Visit our Github Repo Join our Slack or scan the code to join our WeChat Group","title":"What's Next"},{"location":"eng/installation/","text":"Install Nocalhost VScode Plugin The Nocalhost VScode Plugin allows you to use Nocalhost on VSCode Editor. You can install application, open DevSpace, start DevMode in VSCode conveniently. Install Nocalhost VScode Plugin on VScode Marketplace Follow this link: https://marketplace.visualstudio.com/items?itemName=nocalhost.nocalhost Or Install Nocalhost VScode Plugin on VScode Editor Open the VScode Editor, and click left bar \"Extensions\" icon. Type \"nocalhost\" in the search input box. Select the \"nocalhost-vscode-plugin\", and the click install button to install. Install Nocalhost IntelliJ Plugin Follow this link: https://plugins.jetbrains.com/plugin/16058-nocalhost . Using Jetbrains IDE built-in plugin system on Windows: File > Settings > Plugins > Browse repositories... > Search for \"nocalhost\" > Install Plugin Using Jetbrains IDE built-in plugin system on MacOs: Preferences > Settings > Plugins > Browse repositories... > Search for \"nocalhost\" > Install Plugin Manually: Download the latest release and install it manually using Preferences > Plugins > Install plugin from disk... Prerequisites To use nocalhost, please make sure that git , kubectl and helm are installed.","title":"Installation"},{"location":"eng/installation/#install-nocalhost-vscode-plugin","text":"The Nocalhost VScode Plugin allows you to use Nocalhost on VSCode Editor. You can install application, open DevSpace, start DevMode in VSCode conveniently.","title":"Install Nocalhost VScode Plugin"},{"location":"eng/installation/#install-nocalhost-vscode-plugin-on-vscode-marketplace","text":"Follow this link: https://marketplace.visualstudio.com/items?itemName=nocalhost.nocalhost","title":"Install Nocalhost VScode Plugin on VScode Marketplace"},{"location":"eng/installation/#or-install-nocalhost-vscode-plugin-on-vscode-editor","text":"Open the VScode Editor, and click left bar \"Extensions\" icon. Type \"nocalhost\" in the search input box. Select the \"nocalhost-vscode-plugin\", and the click install button to install.","title":"Or Install Nocalhost VScode Plugin on VScode Editor"},{"location":"eng/installation/#install-nocalhost-intellij-plugin","text":"Follow this link: https://plugins.jetbrains.com/plugin/16058-nocalhost . Using Jetbrains IDE built-in plugin system on Windows: File > Settings > Plugins > Browse repositories... > Search for \"nocalhost\" > Install Plugin Using Jetbrains IDE built-in plugin system on MacOs: Preferences > Settings > Plugins > Browse repositories... > Search for \"nocalhost\" > Install Plugin Manually: Download the latest release and install it manually using Preferences > Plugins > Install plugin from disk... Prerequisites To use nocalhost, please make sure that git , kubectl and helm are installed.","title":"Install Nocalhost IntelliJ Plugin"},{"location":"eng/introduction/","text":"Most productive way to build cloud-native applications. Motivation Because microservice brings development and deployment flexibility and technology versatility, more and more companies choose to use microservice architecture to build applications. At the same time, the rapid development and popularization of cloud-native technology and Kubernetes have further solved the problems of service invocation overhead, distributed system transactions, debugging and service governance of microservices. Therefore, the development trend of modern applications is evolving from the original \"monolithic application + cloud\" to \"microservice + cloud-native\". Although the development trend has greatly improved the efficiency of application operation, maintenance and deployment, but a key node has been forgot: the development phase. First, although Kubernetes does an excellent job of managing the infrastructure, it brings additional complexity and a steep learning curve. The lack of Kubernetes abstraction for developers affects the development experience and reduces development efficiency. Developers have to spend a lot of energy on concept learning, system configuration, environment deployment, and resource management. On the other hand, many companies today are in the practice of \"microservices\", the granularity of splitting is too tiny, leading to a further sharp increase in the number of microservice, and the relationship between services is becoming more and more complex. Various problems are particularly prominent when you want to add new requirements. This leads to the following problems for developers and managers: Developer How to quickly start a complete development environment? How to quickly debug these dozens or even hundreds of microservices? How to collaborate with other colleagues once the requirements are depends on others? At the same time, containerization technology solves the problem of environmental consistency in the development, testing, and production stages of microservice applications. But the efficiency of the development feedback loop has caused many dev teams to have a headache. Developers need to wait for several minutes before they can see the result after codes modification. This greatly reduce development efficiency. Therefore, although companies can benefit from \"microservices + cloud-native\". But in fact, the development efficiency of many development teams does not increase but declines, and they cannot experience the \"cost reduction and efficiency increase\" brought by cloud-native technology. The end result is that people begin to question the value of Kubernetes to developers themselves: \"Why need to bother with all these details instead of focusing on coding?\". What is Nocalhost? Nocalhost is a cloud-native development tool based on IDE, and also provides cloud-native solutions, works to improve your experience creating cloud-native application within your favorite IDE. - One-click connect to development environment Help developers connect to the remote Kubernetes by one click, and get rid of the pesky local environment configurations - No need to rebuild or redeploy When developing, Nocalhost can automatically synchronize the code to container every time you make a change. This way, eliminate the submit, building and pushing cycles, greatly speed up the feedback loop of development. So you see updates in under a second - Independent and isolated development space Each developer can have their own independent development space to ensure that they will not be interfered by others during the development and testing process and process. - Visual IDE Plugin Nocalhost provides JetBrains and VSCode with an easy-to-use IDE plugin. Developers can quickly develop and remotely debug cloud-native applications on the local computer without being familiar with kubectl commands. . Architecture The overall working diagram of Nocalhost is as follows: IDE Plugins IDE plugin packs the capabilities of nhctl and nocalhost-api development environment management to provide users with a better experience. nhctl nhctl is the core component of nocalhost, here are the core features: Deploy/Uninstall Applications Nocalhost can deploy applications to Kubernetes cluster or uninstall application from DevSpace. Hot Reloading Via File Sync Any changes made to the local source codes will be synchronized to the remote DevContainer automatically. Developer can recompile and restart their process to verify code changes. In the future, we will support configure hotreload commands instead of restart processes manually. nocalhost-web nocalhost-web provides a web dashboard to manage users, development kubernetes clusters, applications and DevSpaces. nocalhost-api Nocalhost manages serviceAccount, namespace and application in kubernetes cluster through api-server, and persists to database, providing data support for IDE plugin usage. nocalhost-dep When application microservices are deployed in a Kubernetes cluster, there is no way to controler the startup sequence and dependencies of these microservices. A typical scenario is: Service A and Service B both rely on Mysql, Redis, RabbitMQ. Service A and Service B cannot be started unless these dependent services are available. Usually developers have to wait the Pod's restarting rely on Kubernetes' HealthCheck Probe. After restarting again and again, the time interval will be very long. This is why many large system running in Kubernetes start up extremely slow. By implemented a Kubernetes Admission Webhook like Istio injecting Sidecar, nocalhost-dep can controls the starting order. When applications deployed, nocalhost-dep will inject InitContainers into the workload automatically. According to declared dependencies, nocalhost-dep keeps waiting for the dependent services's availability. Once all dependent service become available, the InitContainer exits, then the containers which container business logics start. There is no restarting, which means minimal time waiting of starting.","title":"Introduction"},{"location":"eng/introduction/#motivation","text":"Because microservice brings development and deployment flexibility and technology versatility, more and more companies choose to use microservice architecture to build applications. At the same time, the rapid development and popularization of cloud-native technology and Kubernetes have further solved the problems of service invocation overhead, distributed system transactions, debugging and service governance of microservices. Therefore, the development trend of modern applications is evolving from the original \"monolithic application + cloud\" to \"microservice + cloud-native\". Although the development trend has greatly improved the efficiency of application operation, maintenance and deployment, but a key node has been forgot: the development phase. First, although Kubernetes does an excellent job of managing the infrastructure, it brings additional complexity and a steep learning curve. The lack of Kubernetes abstraction for developers affects the development experience and reduces development efficiency. Developers have to spend a lot of energy on concept learning, system configuration, environment deployment, and resource management. On the other hand, many companies today are in the practice of \"microservices\", the granularity of splitting is too tiny, leading to a further sharp increase in the number of microservice, and the relationship between services is becoming more and more complex. Various problems are particularly prominent when you want to add new requirements. This leads to the following problems for developers and managers: Developer How to quickly start a complete development environment? How to quickly debug these dozens or even hundreds of microservices? How to collaborate with other colleagues once the requirements are depends on others? At the same time, containerization technology solves the problem of environmental consistency in the development, testing, and production stages of microservice applications. But the efficiency of the development feedback loop has caused many dev teams to have a headache. Developers need to wait for several minutes before they can see the result after codes modification. This greatly reduce development efficiency. Therefore, although companies can benefit from \"microservices + cloud-native\". But in fact, the development efficiency of many development teams does not increase but declines, and they cannot experience the \"cost reduction and efficiency increase\" brought by cloud-native technology. The end result is that people begin to question the value of Kubernetes to developers themselves: \"Why need to bother with all these details instead of focusing on coding?\".","title":"Motivation"},{"location":"eng/introduction/#what-is-nocalhost","text":"Nocalhost is a cloud-native development tool based on IDE, and also provides cloud-native solutions, works to improve your experience creating cloud-native application within your favorite IDE. - One-click connect to development environment Help developers connect to the remote Kubernetes by one click, and get rid of the pesky local environment configurations - No need to rebuild or redeploy When developing, Nocalhost can automatically synchronize the code to container every time you make a change. This way, eliminate the submit, building and pushing cycles, greatly speed up the feedback loop of development. So you see updates in under a second - Independent and isolated development space Each developer can have their own independent development space to ensure that they will not be interfered by others during the development and testing process and process. - Visual IDE Plugin Nocalhost provides JetBrains and VSCode with an easy-to-use IDE plugin. Developers can quickly develop and remotely debug cloud-native applications on the local computer without being familiar with kubectl commands. .","title":"What is Nocalhost?"},{"location":"eng/introduction/#architecture","text":"The overall working diagram of Nocalhost is as follows:","title":"Architecture"},{"location":"eng/introduction/#ide-plugins","text":"IDE plugin packs the capabilities of nhctl and nocalhost-api development environment management to provide users with a better experience.","title":"IDE Plugins"},{"location":"eng/introduction/#nhctl","text":"nhctl is the core component of nocalhost, here are the core features: Deploy/Uninstall Applications Nocalhost can deploy applications to Kubernetes cluster or uninstall application from DevSpace. Hot Reloading Via File Sync Any changes made to the local source codes will be synchronized to the remote DevContainer automatically. Developer can recompile and restart their process to verify code changes. In the future, we will support configure hotreload commands instead of restart processes manually.","title":"nhctl"},{"location":"eng/introduction/#nocalhost-web","text":"nocalhost-web provides a web dashboard to manage users, development kubernetes clusters, applications and DevSpaces.","title":"nocalhost-web"},{"location":"eng/introduction/#nocalhost-api","text":"Nocalhost manages serviceAccount, namespace and application in kubernetes cluster through api-server, and persists to database, providing data support for IDE plugin usage.","title":"nocalhost-api"},{"location":"eng/introduction/#nocalhost-dep","text":"When application microservices are deployed in a Kubernetes cluster, there is no way to controler the startup sequence and dependencies of these microservices. A typical scenario is: Service A and Service B both rely on Mysql, Redis, RabbitMQ. Service A and Service B cannot be started unless these dependent services are available. Usually developers have to wait the Pod's restarting rely on Kubernetes' HealthCheck Probe. After restarting again and again, the time interval will be very long. This is why many large system running in Kubernetes start up extremely slow. By implemented a Kubernetes Admission Webhook like Istio injecting Sidecar, nocalhost-dep can controls the starting order. When applications deployed, nocalhost-dep will inject InitContainers into the workload automatically. According to declared dependencies, nocalhost-dep keeps waiting for the dependent services's availability. Once all dependent service become available, the InitContainer exits, then the containers which container business logics start. There is no restarting, which means minimal time waiting of starting.","title":"nocalhost-dep"},{"location":"eng/Blog/compare-with-x/","text":"Nocalhsot vs X It is difficult to compare the differences between different software, especially when asked whether it can be replaced by other software? And can different software be related to each other? In this chapter, we compare Nocalhost with other software. It is recommended to read \u201cNocalhost-Redefining the Development Environment\u201d first, which helps to understand the problem that Nocalhost is trying to solve. In summary, there are currently three ideas for accelerating development in the Kubernetes environment: Monitor local code changes, execute the CI/CD pipeline locally immediately after the modification, rebuild the microservice image and automatically deploy it to the Kubernetes cluster. This is the practice of Google Cloud Code , Skaffold , and Tilt : Replace the workload to be developed with the Proxy network proxy container, forwarding the traffic in the cluster to the local, and forwarding the local traffic to the cluster. Use docker run locally to run the microservice container. This is how Telepresence does: Replace the workload to be developed with a development container, map local code to a remote directory, build and run microservices in the remote container. This is how Nocalhost does: In addition, Nocalhost also provides application management, development environment management, VS Code plug-in, IDEA plug-in, etc. which are conducive to standardization and accelerate development. You can click the menu on the left to browse the comparison between Nocalhost and specific software. These comparisons are not to convince you to use Nocalhost, nor are they intended to belittle other software. Our goal is only to better understand the functional differences between Nocalhost and other software. If you think any stated facts are incorrect, please submit a PR for improvement. Telepresence Telepresence deploys a network proxy Pod in the cluster, which will proxy Kubernetes environment data (for example: TCP connections, environment variables, volumes) to local processes. The local process connects to the remote Kubernetes cluster through a proxy so that it can directly access remote microservices through DNS. Telepresence's concept is very good, but it has the following disadvantages: In some controlled network environments, it may not be possible to establish a VPN connection with a remote cluster. Locally use Docker Run to run the service, which may be different from the Pod's running mode, for example, it cannot simulate InitContainer Use sshfs to mount remote volumes, which cannot support Windows without WSL. The development and debugging process is not continuous, and several commands need to be executed manually at different stages. Tilt, Skaffold, Google Cloud Code Tilt, Skaffold, Google Cloud Code can all automate all steps from local code changes to update process: monitor local files, rebuild container images and update the environment, just like automated docker build && docker push && kubectl apply or docker-compose up can be understood as a local CI/CD tool. None of them can avoid the process of rebuilding the image and updating the workload every time the code is updated. Tilt introduced a method \"live_update\" that does not need to rebuild the image every time. The configuration is more complicated, and it only shortens the docker build time. Skaffold has a file synchronization function of the beta version, which can package local changes into tar and synchronize them to the container without rebuilding the image, redeploying and restarting the POD, but there are still some usage restrictions. In addition to being able to automate the CI/CD process, Google Cloud Code also provides VS Code and IDEA plug-ins that are easy to develop, but it is strongly bound to Google's cloud services.","title":"Compare with X"},{"location":"eng/Blog/compare-with-x/#nocalhsot-vs-x","text":"It is difficult to compare the differences between different software, especially when asked whether it can be replaced by other software? And can different software be related to each other? In this chapter, we compare Nocalhost with other software. It is recommended to read \u201cNocalhost-Redefining the Development Environment\u201d first, which helps to understand the problem that Nocalhost is trying to solve. In summary, there are currently three ideas for accelerating development in the Kubernetes environment: Monitor local code changes, execute the CI/CD pipeline locally immediately after the modification, rebuild the microservice image and automatically deploy it to the Kubernetes cluster. This is the practice of Google Cloud Code , Skaffold , and Tilt : Replace the workload to be developed with the Proxy network proxy container, forwarding the traffic in the cluster to the local, and forwarding the local traffic to the cluster. Use docker run locally to run the microservice container. This is how Telepresence does: Replace the workload to be developed with a development container, map local code to a remote directory, build and run microservices in the remote container. This is how Nocalhost does: In addition, Nocalhost also provides application management, development environment management, VS Code plug-in, IDEA plug-in, etc. which are conducive to standardization and accelerate development. You can click the menu on the left to browse the comparison between Nocalhost and specific software. These comparisons are not to convince you to use Nocalhost, nor are they intended to belittle other software. Our goal is only to better understand the functional differences between Nocalhost and other software. If you think any stated facts are incorrect, please submit a PR for improvement.","title":"Nocalhsot vs X"},{"location":"eng/Blog/compare-with-x/#telepresence","text":"Telepresence deploys a network proxy Pod in the cluster, which will proxy Kubernetes environment data (for example: TCP connections, environment variables, volumes) to local processes. The local process connects to the remote Kubernetes cluster through a proxy so that it can directly access remote microservices through DNS. Telepresence's concept is very good, but it has the following disadvantages: In some controlled network environments, it may not be possible to establish a VPN connection with a remote cluster. Locally use Docker Run to run the service, which may be different from the Pod's running mode, for example, it cannot simulate InitContainer Use sshfs to mount remote volumes, which cannot support Windows without WSL. The development and debugging process is not continuous, and several commands need to be executed manually at different stages.","title":"Telepresence"},{"location":"eng/Blog/compare-with-x/#tilt-skaffold-google-cloud-code","text":"Tilt, Skaffold, Google Cloud Code can all automate all steps from local code changes to update process: monitor local files, rebuild container images and update the environment, just like automated docker build && docker push && kubectl apply or docker-compose up can be understood as a local CI/CD tool. None of them can avoid the process of rebuilding the image and updating the workload every time the code is updated. Tilt introduced a method \"live_update\" that does not need to rebuild the image every time. The configuration is more complicated, and it only shortens the docker build time. Skaffold has a file synchronization function of the beta version, which can package local changes into tar and synchronize them to the container without rebuilding the image, redeploying and restarting the POD, but there are still some usage restrictions. In addition to being able to automate the CI/CD process, Google Cloud Code also provides VS Code and IDEA plug-ins that are easy to develop, but it is strongly bound to Google's cloud services.","title":"Tilt, Skaffold, Google Cloud Code"},{"location":"eng/Blog/redefine-cloud-native-dev-environment/","text":"Nocalhost - Redefine Cloud Native Dev Environment Preface With the rapid development of business, the organizational structure of the technical department has been continuously expanded and adjusted horizontally and vertically. At the same time, the enterprise's production materials: application systems, have also become larger and larger. In order to adapt the application system to the adjustment of the enterprise organizational structure and sort out the boundaries of the organizational structure for application rights and responsibilities, most organizations will choose to use the \"microservice\" architecture to split the application system horizontally, so that the maintenance boundary of the application system is adapted The power and responsibility boundary of the organizational structure. Generally speaking, the larger the organizational structure, the more detailed the application system will be, and the number of \"microservices\" will also increase. In the practice of splitting \"microservices\", it is easy to mark the authority and responsibility boundaries of the organizational structure into the splitting granularity of \"microservices\", which may lead to too fine granularity of \"microservices\". The problem of further sharp increase in number. In the end, the calling relationship between \"microservices\" is like cross-departmental collaboration, and it has become more and more complex. The problem is particularly prominent when you want to add new requirements. While \"microservices\" bring convenience, it also brings additional challenges for developers: how to quickly start a complete development environment? The development requirements depend on how other colleagues can coordinate and debug? How to quickly debug these microservices? For managers, it also brings a series of challenges: how to manage the development environment of developers? How to let new colleagues quickly develop? Imagine what difficulties would you encounter when developing a cloud-native application consisting of 200 \"microservices\"? Localhost era In the era of monolithic applications, it is extremely friendly to developers. Developers use the local machine to run the application, modify the code to take effect in real time, and visit Localhost through a browser to view the code effect in real time. Monolithic applications are different from \"microservices\" applications. Monolithic applications are organized as \"ALL-IN-ONE\". All calling relationships are limited to their own classes and functions, and the hardware requirements of applications are generally not too high. The development of \"microservice\" applications is quite different. Due to the mutual dependence, when a certain function or microservice needs to be developed, all dependent services have to be activated. With the increase in the number of microservices, more and more local resources are needed to develop applications, which ultimately leads to the local inability to meet the configuration requirements of development. Cloud Native liberates deployment and operation, What about development? The popularity of cloud native and Kubernetes further shields the complexity of \"microservice\" applications, which is mainly reflected in the deployment and operation and maintenance stages. In order to solve the problem of environmental consistency in the development, testing, and production stages of microservice applications, modern microservice application development will package each component into a Docker image and deploy it in the form of workload. Using continuous integration and continuous deployment in the DevOps pipeline, combined with Kubernetes probes, HPA, and application self-healing capabilities, completely liberated the deployment and operation and maintenance of microservice applications. But we overlooked a key node: the development phase. After microservice applications are packaged with Kubernetes workloads, the problem of rapid application startup in the development process is solved. Developers only need to install a single-node Kubernetes cluster locally, such as Minikube, Kind, etc., to quickly start microservice applications. But for developers, the original monolithic application development experience no longer exists. Since the application is difficult to run outside of the Docker container, each code modification needs to go through the following steps: Execute docker build to build the image Execute docker tag to tag the image Execute docker push to push the image to the warehouse Modify the image version of the Kubernetes workload Wait for the mirror pull to end Wait for the Pod to rebuild View the modified code effect This directly slows down the cyclic feedback process of development, and each modification requires several minutes or even ten minutes of waiting time. Redefine Cloud Native Dev Environment Nocalhost is a Cloud Native development environment, hoping to make developing cloud-native applications as primitive and simple as developing a single application. Nocalhost reorganized the roles and resources involved in the development process: Team manager Developer Application Cluster Development Space Through the reintegration of these roles and resources, Nocalhost redefines the cloud-native development environment and brings a new cloud-native development experience. In order to quickly understand the cloud-native development environment redefined by Nocalhost, let us first stand in different roles and see what Nocalhost can bring to them. Developer: Get rid of the need to rebuild a new image for each modification and long-term loop feedback, and the modified code will take effect immediately. One-click deployment of the development environment, get rid of the limitations of local environment construction and insufficient resources. Link between local IDE editor and development environment, support remote debugging. Graphical IDE plug-in, no need to be familiar with kubectl commands to complete development in cloud native environment. Manager: Unified management of microservice application packages, reducing application maintenance costs. Unified management of the development environment and cluster, improve the utilization of cluster resources, and have isolation characteristics. Quickly allocate development environment for new employees, and application development can be carried out immediately after the allocation of the environment. Flexible development environment resources can be destroyed when used up, reducing development costs. Taking Nocalhost's built-in Demo: Bookinfo as an example, the development of Productpage microservices has become the following simple steps: One-click deployment development environment: Environment deployment is complete, select the component to be developed, click \"hammer\" to enter the development mode: Clone business code or select local code directory to open: Enter the development mode, modify the code locally and save it, no need to rebuild the mirror image, the remote development environment takes effect in real time, and supports remote debugging: Landing case Currently, Tencent Cloud CODING DevOps (nearly 200 microservices) is using Nocalhost for development. Practice has verified that Nocalhost can greatly improve development efficiency and shorten feedback loops. Open source and community co-construction Nocalhost is currently fully open source and has entered CNCF Landscape: https://landscape.cncf.io/ Github address: https://github.com/nocalhost/nocalhost . Use Apache-2.0 open source agreement, can use unlimited free. For more information about Nocalhost, please visit the official website: https://nocalhost.dev .","title":"Nocalhost - Redefine Cloud Native Dev Environment"},{"location":"eng/Blog/redefine-cloud-native-dev-environment/#nocalhost-redefine-cloud-native-dev-environment","text":"","title":"Nocalhost - Redefine Cloud Native Dev Environment"},{"location":"eng/Blog/redefine-cloud-native-dev-environment/#preface","text":"With the rapid development of business, the organizational structure of the technical department has been continuously expanded and adjusted horizontally and vertically. At the same time, the enterprise's production materials: application systems, have also become larger and larger. In order to adapt the application system to the adjustment of the enterprise organizational structure and sort out the boundaries of the organizational structure for application rights and responsibilities, most organizations will choose to use the \"microservice\" architecture to split the application system horizontally, so that the maintenance boundary of the application system is adapted The power and responsibility boundary of the organizational structure. Generally speaking, the larger the organizational structure, the more detailed the application system will be, and the number of \"microservices\" will also increase. In the practice of splitting \"microservices\", it is easy to mark the authority and responsibility boundaries of the organizational structure into the splitting granularity of \"microservices\", which may lead to too fine granularity of \"microservices\". The problem of further sharp increase in number. In the end, the calling relationship between \"microservices\" is like cross-departmental collaboration, and it has become more and more complex. The problem is particularly prominent when you want to add new requirements. While \"microservices\" bring convenience, it also brings additional challenges for developers: how to quickly start a complete development environment? The development requirements depend on how other colleagues can coordinate and debug? How to quickly debug these microservices? For managers, it also brings a series of challenges: how to manage the development environment of developers? How to let new colleagues quickly develop? Imagine what difficulties would you encounter when developing a cloud-native application consisting of 200 \"microservices\"?","title":"Preface"},{"location":"eng/Blog/redefine-cloud-native-dev-environment/#localhost-era","text":"In the era of monolithic applications, it is extremely friendly to developers. Developers use the local machine to run the application, modify the code to take effect in real time, and visit Localhost through a browser to view the code effect in real time. Monolithic applications are different from \"microservices\" applications. Monolithic applications are organized as \"ALL-IN-ONE\". All calling relationships are limited to their own classes and functions, and the hardware requirements of applications are generally not too high. The development of \"microservice\" applications is quite different. Due to the mutual dependence, when a certain function or microservice needs to be developed, all dependent services have to be activated. With the increase in the number of microservices, more and more local resources are needed to develop applications, which ultimately leads to the local inability to meet the configuration requirements of development.","title":"Localhost era"},{"location":"eng/Blog/redefine-cloud-native-dev-environment/#cloud-native-liberates-deployment-and-operation-what-about-development","text":"The popularity of cloud native and Kubernetes further shields the complexity of \"microservice\" applications, which is mainly reflected in the deployment and operation and maintenance stages. In order to solve the problem of environmental consistency in the development, testing, and production stages of microservice applications, modern microservice application development will package each component into a Docker image and deploy it in the form of workload. Using continuous integration and continuous deployment in the DevOps pipeline, combined with Kubernetes probes, HPA, and application self-healing capabilities, completely liberated the deployment and operation and maintenance of microservice applications. But we overlooked a key node: the development phase. After microservice applications are packaged with Kubernetes workloads, the problem of rapid application startup in the development process is solved. Developers only need to install a single-node Kubernetes cluster locally, such as Minikube, Kind, etc., to quickly start microservice applications. But for developers, the original monolithic application development experience no longer exists. Since the application is difficult to run outside of the Docker container, each code modification needs to go through the following steps: Execute docker build to build the image Execute docker tag to tag the image Execute docker push to push the image to the warehouse Modify the image version of the Kubernetes workload Wait for the mirror pull to end Wait for the Pod to rebuild View the modified code effect This directly slows down the cyclic feedback process of development, and each modification requires several minutes or even ten minutes of waiting time.","title":"Cloud Native liberates deployment and operation, What about development?"},{"location":"eng/Blog/redefine-cloud-native-dev-environment/#redefine-cloud-native-dev-environment","text":"Nocalhost is a Cloud Native development environment, hoping to make developing cloud-native applications as primitive and simple as developing a single application. Nocalhost reorganized the roles and resources involved in the development process: Team manager Developer Application Cluster Development Space Through the reintegration of these roles and resources, Nocalhost redefines the cloud-native development environment and brings a new cloud-native development experience. In order to quickly understand the cloud-native development environment redefined by Nocalhost, let us first stand in different roles and see what Nocalhost can bring to them. Developer: Get rid of the need to rebuild a new image for each modification and long-term loop feedback, and the modified code will take effect immediately. One-click deployment of the development environment, get rid of the limitations of local environment construction and insufficient resources. Link between local IDE editor and development environment, support remote debugging. Graphical IDE plug-in, no need to be familiar with kubectl commands to complete development in cloud native environment. Manager: Unified management of microservice application packages, reducing application maintenance costs. Unified management of the development environment and cluster, improve the utilization of cluster resources, and have isolation characteristics. Quickly allocate development environment for new employees, and application development can be carried out immediately after the allocation of the environment. Flexible development environment resources can be destroyed when used up, reducing development costs. Taking Nocalhost's built-in Demo: Bookinfo as an example, the development of Productpage microservices has become the following simple steps: One-click deployment development environment: Environment deployment is complete, select the component to be developed, click \"hammer\" to enter the development mode: Clone business code or select local code directory to open: Enter the development mode, modify the code locally and save it, no need to rebuild the mirror image, the remote development environment takes effect in real time, and supports remote debugging:","title":"Redefine Cloud Native Dev Environment"},{"location":"eng/Blog/redefine-cloud-native-dev-environment/#landing-case","text":"Currently, Tencent Cloud CODING DevOps (nearly 200 microservices) is using Nocalhost for development. Practice has verified that Nocalhost can greatly improve development efficiency and shorten feedback loops.","title":"Landing case"},{"location":"eng/Blog/redefine-cloud-native-dev-environment/#open-source-and-community-co-construction","text":"Nocalhost is currently fully open source and has entered CNCF Landscape: https://landscape.cncf.io/ Github address: https://github.com/nocalhost/nocalhost . Use Apache-2.0 open source agreement, can use unlimited free. For more information about Nocalhost, please visit the official website: https://nocalhost.dev .","title":"Open source and community co-construction"},{"location":"eng/FAQ/faq-installation/","text":"Kubernetes Version Support Nocalhost supports Major:\"1\", Minor:\"12+\" versions of kubernetes, but we recommend that you to use v1.16+. That's because if your want to use service dependencies control between services: Ensure that the Kubernetes cluster is at least as new as v1.16 (to use admissionregistration.k8s.io/v1 ), or v1.9 (to use admissionregistration.k8s.io/v1beta1 ). Ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled. Here is a recommended set of admission controllers to enable in general. Ensure that the admissionregistration.k8s.io/v1 or admissionregistration.k8s.io/v1beta1 API is enabled. see adminssion web hooks . Increase Inotify Limit If your file synchronization is too slow in linux, it is most likely due to inotify limit. How do I increase the inotify limit to get my filesystem watcher to work? Linux typically restricts the amount of watches per user (usually 8192). When you have more directories you need to adjust that number. On many Linux distributions you can run the following to fix it: echo \"fs.inotify.max_user_watches=204800\" | sudo tee -a /etc/sysctl.conf On Arch Linux and potentially others it is preferred to write this line into a separate file, i.e. you should run: echo \"fs.inotify.max_user_watches=204800\" | sudo tee -a /etc/sysctl.d/90-override.conf This only takes effect after a reboot. To adjust the limit immediately, run: sudo sh -c 'echo 204800 > /proc/sys/fs/inotify/max_user_watches' Why Nocalhost can not clone codes with SSH key that need passphrase for SSH private keys? Nocalhost does not support currently. We will support it later. PVC unbound We won\u2018t create a pv for you automatically, you should create a pv manually like this if your pvc is pending in unbound state: apiVersion: v1 kind: PersistentVolume metadata: name: nocalhost-mariadb-pv-volume labels: type: local spec: storageClassName: \"\" persistentVolumeReclaimPolicy: Recycle volumeMode: Filesystem capacity: storage: 20Gi accessModes: - ReadWriteOnce hostPath: path: \"/foo/bar\" The storageClassName of pv should be empty and make sure pv has greater capacity than pvc used. nocalhost run the mariadb with user mysql . So you need to adjust the permissions for the data directory mapped: chown -R 1001:1001 /foo/bar","title":"Insallation"},{"location":"eng/FAQ/faq-installation/#kubernetes-version-support","text":"Nocalhost supports Major:\"1\", Minor:\"12+\" versions of kubernetes, but we recommend that you to use v1.16+. That's because if your want to use service dependencies control between services: Ensure that the Kubernetes cluster is at least as new as v1.16 (to use admissionregistration.k8s.io/v1 ), or v1.9 (to use admissionregistration.k8s.io/v1beta1 ). Ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled. Here is a recommended set of admission controllers to enable in general. Ensure that the admissionregistration.k8s.io/v1 or admissionregistration.k8s.io/v1beta1 API is enabled. see adminssion web hooks .","title":"Kubernetes Version Support"},{"location":"eng/FAQ/faq-installation/#increase-inotify-limit","text":"If your file synchronization is too slow in linux, it is most likely due to inotify limit.","title":"Increase Inotify Limit"},{"location":"eng/FAQ/faq-installation/#how-do-i-increase-the-inotify-limit-to-get-my-filesystem-watcher-to-work","text":"Linux typically restricts the amount of watches per user (usually 8192). When you have more directories you need to adjust that number. On many Linux distributions you can run the following to fix it: echo \"fs.inotify.max_user_watches=204800\" | sudo tee -a /etc/sysctl.conf On Arch Linux and potentially others it is preferred to write this line into a separate file, i.e. you should run: echo \"fs.inotify.max_user_watches=204800\" | sudo tee -a /etc/sysctl.d/90-override.conf This only takes effect after a reboot. To adjust the limit immediately, run: sudo sh -c 'echo 204800 > /proc/sys/fs/inotify/max_user_watches'","title":"How do I increase the inotify limit to get my filesystem watcher to work?"},{"location":"eng/FAQ/faq-installation/#why-nocalhost-can-not-clone-codes-with-ssh-key-that-need-passphrase-for-ssh-private-keys","text":"Nocalhost does not support currently. We will support it later.","title":"Why Nocalhost can not clone codes with SSH key that need passphrase for SSH private keys?"},{"location":"eng/FAQ/faq-installation/#pvc-unbound","text":"We won\u2018t create a pv for you automatically, you should create a pv manually like this if your pvc is pending in unbound state: apiVersion: v1 kind: PersistentVolume metadata: name: nocalhost-mariadb-pv-volume labels: type: local spec: storageClassName: \"\" persistentVolumeReclaimPolicy: Recycle volumeMode: Filesystem capacity: storage: 20Gi accessModes: - ReadWriteOnce hostPath: path: \"/foo/bar\" The storageClassName of pv should be empty and make sure pv has greater capacity than pvc used. nocalhost run the mariadb with user mysql . So you need to adjust the permissions for the data directory mapped: chown -R 1001:1001 /foo/bar","title":"PVC unbound"},{"location":"eng/FAQ/faq-using/","text":"How does Nocalhost find services when the workloads are installed by Helm? By default, Nocalhost recognizes services by the exact name of workloads in the cluster. But the name of the workloads installed by Helm may be generated according to the Chart templates. For example, if the Chart is created with the template provided by Helm, Nocalhost may find it by looking for workloads with name formed with <release-name>-<service-name> . For example, there is a service defined in config.yaml as following: ... services: - name: productpage serviceType: deployment When we install a application(helm) by nhctl as following: $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s Nocalhost will consider the workload dev-productpage as the service named productpage defined in config.yaml, while no workload named productpage in cluster. In other case, if you create Chart with other templates or install Chart in other ways, Nocalhost cannot find the services in the config.yaml. In this situation, you should configure the exact name of the workloads to Nocalhost's config.yaml. Using static workload names is recommended. Does Nocalhost have support to develop components(services) which have Pods running multiple containers? You can specify container's name in V2 Nocalhost config file. Why does my code fail to compile in the DevMode under Windows? The issue may be caused by differences of line endings between different operating systems. For example, the code is compiled for Linux with line endings of \\n , and you checkout, edit or reformat the code under Windows may convert line endings to \\r\\n . The conversion of line endings will lead to failures on some build tools (like Gradle). Therefore, before entering the DevMode, you should configure the local development environment as needed. git: In default, line ending conversions are enabled. It means that git checkout will convert \\n to \\r\\n and git commit will convert \\r\\n to \\n . Please refer to Git Docs if you have to configure it. Visual Studio Code: In default, line ending is \\r\\n under Windows. Configure it globally by entering File -> Preferences -> Settings -> Text Editor -> Files -> Eol, or click the CRLF or LF on the right of the status bar when converting for a single file. IntelliJ IDEA: In default, line ending is \\r\\n under Windows. Configure it by entering File -> Settings -> Editor -> Code Style -> Line seperator. Does Nocalhost have support to develop components(services) that controls by Deployments with HPA (Horizontal Pod Autoscaler)? No. It is suggested that remove HPA controller from Deployments before developing components(services) with Nocalhost. Why there isn't a register link? How to login Nocalhost Web? Nocalhost does not support self-registration. By now, Nocalhost Server(api and web) is designed using by administrator. Administrator can sign in with the default administrator account email and password. The default account's Email is: admin@admin.com The default account's password is: 123456 After signed in, they can change admin user's Email and password. They can also manage users, clusters and applications. Does Nocalhost have support to develop components(services) which depend on Kubernetes cluster resources such as Namespaces, ClusterRole? It is not supported by Visual Studio Code plugin and Nocalhost Server, but Nocalhost CLI tool nhctl supports. We will support later. What should I do if I delete the ~/.nh directory by mistake and the plugin cannot be used? Just restart Visual Studio Code. Application uninstallation has been done on the plug-in side, and the kubernetes cluster workload has not been released Because your login account has changed, kubeconfig has also changed. Currently, account switching is not supported. If this happens, you need to manually delete the previously resources.","title":"Using"},{"location":"eng/FAQ/faq-using/#how-does-nocalhost-find-services-when-the-workloads-are-installed-by-helm","text":"By default, Nocalhost recognizes services by the exact name of workloads in the cluster. But the name of the workloads installed by Helm may be generated according to the Chart templates. For example, if the Chart is created with the template provided by Helm, Nocalhost may find it by looking for workloads with name formed with <release-name>-<service-name> . For example, there is a service defined in config.yaml as following: ... services: - name: productpage serviceType: deployment When we install a application(helm) by nhctl as following: $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s Nocalhost will consider the workload dev-productpage as the service named productpage defined in config.yaml, while no workload named productpage in cluster. In other case, if you create Chart with other templates or install Chart in other ways, Nocalhost cannot find the services in the config.yaml. In this situation, you should configure the exact name of the workloads to Nocalhost's config.yaml. Using static workload names is recommended.","title":"How does Nocalhost find services when the workloads are installed by Helm?"},{"location":"eng/FAQ/faq-using/#does-nocalhost-have-support-to-develop-componentsservices-which-have-pods-running-multiple-containers","text":"You can specify container's name in V2 Nocalhost config file.","title":"Does Nocalhost have support to develop components(services) which have Pods running multiple containers?"},{"location":"eng/FAQ/faq-using/#why-does-my-code-fail-to-compile-in-the-devmode-under-windows","text":"The issue may be caused by differences of line endings between different operating systems. For example, the code is compiled for Linux with line endings of \\n , and you checkout, edit or reformat the code under Windows may convert line endings to \\r\\n . The conversion of line endings will lead to failures on some build tools (like Gradle). Therefore, before entering the DevMode, you should configure the local development environment as needed. git: In default, line ending conversions are enabled. It means that git checkout will convert \\n to \\r\\n and git commit will convert \\r\\n to \\n . Please refer to Git Docs if you have to configure it. Visual Studio Code: In default, line ending is \\r\\n under Windows. Configure it globally by entering File -> Preferences -> Settings -> Text Editor -> Files -> Eol, or click the CRLF or LF on the right of the status bar when converting for a single file. IntelliJ IDEA: In default, line ending is \\r\\n under Windows. Configure it by entering File -> Settings -> Editor -> Code Style -> Line seperator.","title":"Why does my code fail to compile in the DevMode under Windows?"},{"location":"eng/FAQ/faq-using/#does-nocalhost-have-support-to-develop-componentsservices-that-controls-by-deployments-with-hpa-horizontal-pod-autoscaler","text":"No. It is suggested that remove HPA controller from Deployments before developing components(services) with Nocalhost.","title":"Does Nocalhost have support to develop components(services) that controls by Deployments with HPA (Horizontal Pod Autoscaler)?"},{"location":"eng/FAQ/faq-using/#why-there-isnt-a-register-link-how-to-login-nocalhost-web","text":"Nocalhost does not support self-registration. By now, Nocalhost Server(api and web) is designed using by administrator. Administrator can sign in with the default administrator account email and password. The default account's Email is: admin@admin.com The default account's password is: 123456 After signed in, they can change admin user's Email and password. They can also manage users, clusters and applications.","title":"Why there isn't a register link? How to login Nocalhost Web?"},{"location":"eng/FAQ/faq-using/#does-nocalhost-have-support-to-develop-componentsservices-which-depend-on-kubernetes-cluster-resources-such-as-namespaces-clusterrole","text":"It is not supported by Visual Studio Code plugin and Nocalhost Server, but Nocalhost CLI tool nhctl supports. We will support later.","title":"Does Nocalhost have support to develop components(services) which depend on Kubernetes cluster resources such as Namespaces, ClusterRole?"},{"location":"eng/FAQ/faq-using/#what-should-i-do-if-i-delete-the-nh-directory-by-mistake-and-the-plugin-cannot-be-used","text":"Just restart Visual Studio Code.","title":"What should I do if I delete the ~/.nh directory by mistake and the plugin cannot be used?"},{"location":"eng/FAQ/faq-using/#application-uninstallation-has-been-done-on-the-plug-in-side-and-the-kubernetes-cluster-workload-has-not-been-released","text":"Because your login account has changed, kubeconfig has also changed. Currently, account switching is not supported. If this happens, you need to manually delete the previously resources.","title":"Application uninstallation has been done on the plug-in side, and the kubernetes cluster workload has not been released"},{"location":"eng/best-practice/application-best/","text":"Nocalhost supports to use the following types to install application: Manifest Helm Kustomize You can select the deployment method of matching type to deploy your application in Kubernetes, and then develop via Nocalhost IDE plugin. In addition, You can also use Nocalhost Server to manage your applications. Please read Nocalhost Server Quick Start and Using Nocalhost Server . Deploy Application by Helm Chart You can using existing Helm Chart to deploy application. Deploy Helm application from local and remote repo Deploy from Local If you have configured a Helm application locally, and helm chart is placed under mychart/example/ directory that relative to the root directory , you can execute the following command to deploy the application. helm install helloworld /chart/example/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig Deploy from Remote Repo If you have a Helm application that store in the remote repo and have access privilege, e.g.: https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/example/ Chart.yaml values.yaml charts/ templates/ ... For this repo, we placed under mychart/example/ directory that relative to the root directory , then we can execute the following command to deploy the application: nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/example \\ --kubeconfig ~/.kube/barconfig Use Owned Helm Repo If you have own Helm repo, you can run the following command to deploy: helm install helloworld \\ mychart \\ - repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig or can use the following nhctl command to achieve the same effect: nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig Using Kubernetes Manifest Deploy Application For example, you have a git repo with address https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git , it has many Kubernetes manifest yaml files: README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 You only want to apply the files in the relative root directory what/ever/ and support/all/dir/inside/ , then use the command: nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig If you want to apply all files, you can use the command: nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path. \\ --kubeconfig ~/.kube/barconfig Nocalhost Enhancements to Kubernetes Applications Base on Kubernetes, Nocalhost provides some enhancements to applications. You can add a .nocalhost/ folder under your project repository and add config.yaml file. No Intrusion Nocalhost has no intrusion into the user's Kubernetes manifest configuration Pre-Install Nocalhost allows users to perform some additional operations before installing and deploying applications. Take bookinfo as an example, before installing the application, we will execute several jobs as stated below, and wait for the completion of the job execution before installing the application. onPreInstall : -path : manifest/templates/pre-install/print-num-job-01.yaml weight : \"1\" -path : manifest/templates/pre-install/print-num-job-02.yaml weight : \"-5\" Start Dependency Management Nocalhost can control the startup sequence of services within the application. For example, the following configuration, which represents the Deployment of ratings , needs to wait for the pod of productpage to be available before starting. name: ratings serviceType: deployment dependLabelSelector: pods: - productpage You can refer to Service Specify Startup Sequence Dependency for more information. Dev Image Configuration Nocalhost can specify the image of the development container, for example: containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage ... In the above configuration, the image python:3.7.7-slim-productpage will replace the original image for development when entering the DevMode. For more information, please refer to DevContainer Best Practice Advanced Configuration Here will explain some additional features or design of Application , which is not necessary, but it will help you to use Nocalhost better. Application Name Nocalhost uses a unique Application Name to distinguish different applications. Note that even if different Nocalhost Server are used (for example, two or more sets are deployed), the same Application Name is not supported on the same development machine. ~/.nh Directory Note that in the ~/.nh/ directory, nhctl and the IDE plugin will store some files to save the current application deployment, development, etc., usually you don't need to know or use them directly.","title":"Application Best Practice"},{"location":"eng/best-practice/application-best/#deploy-application-by-helm-chart","text":"You can using existing Helm Chart to deploy application.","title":"Deploy Application by Helm Chart"},{"location":"eng/best-practice/application-best/#deploy-helm-application-from-local-and-remote-repo","text":"","title":"Deploy Helm application from local and remote repo"},{"location":"eng/best-practice/application-best/#deploy-from-local","text":"If you have configured a Helm application locally, and helm chart is placed under mychart/example/ directory that relative to the root directory , you can execute the following command to deploy the application. helm install helloworld /chart/example/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig","title":"Deploy from Local"},{"location":"eng/best-practice/application-best/#deploy-from-remote-repo","text":"If you have a Helm application that store in the remote repo and have access privilege, e.g.: https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/example/ Chart.yaml values.yaml charts/ templates/ ... For this repo, we placed under mychart/example/ directory that relative to the root directory , then we can execute the following command to deploy the application: nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/example \\ --kubeconfig ~/.kube/barconfig","title":"Deploy from Remote Repo"},{"location":"eng/best-practice/application-best/#use-owned-helm-repo","text":"If you have own Helm repo, you can run the following command to deploy: helm install helloworld \\ mychart \\ - repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig or can use the following nhctl command to achieve the same effect: nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig","title":"Use Owned Helm Repo"},{"location":"eng/best-practice/application-best/#using-kubernetes-manifest-deploy-application","text":"For example, you have a git repo with address https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git , it has many Kubernetes manifest yaml files: README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 You only want to apply the files in the relative root directory what/ever/ and support/all/dir/inside/ , then use the command: nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig If you want to apply all files, you can use the command: nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path. \\ --kubeconfig ~/.kube/barconfig","title":"Using Kubernetes Manifest Deploy Application"},{"location":"eng/best-practice/application-best/#nocalhost-enhancements-to-kubernetes-applications","text":"Base on Kubernetes, Nocalhost provides some enhancements to applications. You can add a .nocalhost/ folder under your project repository and add config.yaml file. No Intrusion Nocalhost has no intrusion into the user's Kubernetes manifest configuration","title":"Nocalhost Enhancements to Kubernetes Applications"},{"location":"eng/best-practice/application-best/#pre-install","text":"Nocalhost allows users to perform some additional operations before installing and deploying applications. Take bookinfo as an example, before installing the application, we will execute several jobs as stated below, and wait for the completion of the job execution before installing the application. onPreInstall : -path : manifest/templates/pre-install/print-num-job-01.yaml weight : \"1\" -path : manifest/templates/pre-install/print-num-job-02.yaml weight : \"-5\"","title":"Pre-Install"},{"location":"eng/best-practice/application-best/#start-dependency-management","text":"Nocalhost can control the startup sequence of services within the application. For example, the following configuration, which represents the Deployment of ratings , needs to wait for the pod of productpage to be available before starting. name: ratings serviceType: deployment dependLabelSelector: pods: - productpage You can refer to Service Specify Startup Sequence Dependency for more information.","title":"Start Dependency Management"},{"location":"eng/best-practice/application-best/#dev-image-configuration","text":"Nocalhost can specify the image of the development container, for example: containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage ... In the above configuration, the image python:3.7.7-slim-productpage will replace the original image for development when entering the DevMode. For more information, please refer to DevContainer Best Practice","title":"Dev Image Configuration"},{"location":"eng/best-practice/application-best/#advanced-configuration","text":"Here will explain some additional features or design of Application , which is not necessary, but it will help you to use Nocalhost better.","title":"Advanced Configuration"},{"location":"eng/best-practice/application-best/#application-name","text":"Nocalhost uses a unique Application Name to distinguish different applications. Note that even if different Nocalhost Server are used (for example, two or more sets are deployed), the same Application Name is not supported on the same development machine.","title":"Application Name"},{"location":"eng/best-practice/application-best/#nh-directory","text":"Note that in the ~/.nh/ directory, nhctl and the IDE plugin will store some files to save the current application deployment, development, etc., usually you don't need to know or use them directly.","title":"~/.nh Directory"},{"location":"eng/best-practice/devcontainer-best/","text":"When Nocalhost controls the Pod to enter DevMode , the configured Dev Container Image will be started as DevContainer instead of the original container. After that, developers can build, run, and debug their own programs in DevContainer . You can use the DevContainer image provided by us or customize it yourself. Advices for Making DevContainer You can use any Docker image to make DevContainer image, as long as it containers the basic shell (/bin/sh) . However, it is strongly recommended to provide a dedicated DevContainer image for the services of a specific technology stack. A good DevContainer image should: Provide easy-to-use shells, such as: bash, zsh, etc. Provide the basic SDK needed to build source code, such as JDK Provide tool chains needed to build source code, such as git, maven, yarn, make, etc. Provide third-party dependency packages or automatic download configuration required to build source code, such as Maven mirror source Provide other debugging tools needed in the development process, such as gdb, curl, tcpdump, mysql-client, etc. Do not include the source code of the service (the source code should be checked out locally through the source code management system and synchronized to the DevContainer.) Nocalhost's DevContainer Image Can download from DevContainer Image . How to Configure DevContainer Select a workload\uff0cclick to configure Change the image filed as following: containers: - name: productpage install: env: [] envFrom: envFile: [] portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash When debugging, Nocalhost will overwrite the startup command of DevContainer to /bin/sh -c tail -f /dev/null to ensure that DevContainer will not exit unexpectedly. For other changes made by Nocalhost under DevMode , please refer to DevMode .","title":"DevContainer Best Practice"},{"location":"eng/best-practice/devcontainer-best/#advices-for-making-devcontainer","text":"You can use any Docker image to make DevContainer image, as long as it containers the basic shell (/bin/sh) . However, it is strongly recommended to provide a dedicated DevContainer image for the services of a specific technology stack. A good DevContainer image should: Provide easy-to-use shells, such as: bash, zsh, etc. Provide the basic SDK needed to build source code, such as JDK Provide tool chains needed to build source code, such as git, maven, yarn, make, etc. Provide third-party dependency packages or automatic download configuration required to build source code, such as Maven mirror source Provide other debugging tools needed in the development process, such as gdb, curl, tcpdump, mysql-client, etc. Do not include the source code of the service (the source code should be checked out locally through the source code management system and synchronized to the DevContainer.)","title":"Advices for Making DevContainer"},{"location":"eng/best-practice/devcontainer-best/#nocalhosts-devcontainer-image","text":"Can download from DevContainer Image .","title":"Nocalhost's DevContainer Image"},{"location":"eng/best-practice/devcontainer-best/#how-to-configure-devcontainer","text":"Select a workload\uff0cclick to configure Change the image filed as following: containers: - name: productpage install: env: [] envFrom: envFile: [] portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash When debugging, Nocalhost will overwrite the startup command of DevContainer to /bin/sh -c tail -f /dev/null to ensure that DevContainer will not exit unexpectedly. For other changes made by Nocalhost under DevMode , please refer to DevMode .","title":"How to Configure DevContainer"},{"location":"eng/best-practice/service-best/","text":"Service Configuration 1. Do Not Configure Service Service does not have to be configured. If you have not modify any Service configuration, but want to configure it before entering the DevMode, the Nocalhost IDE plugin will automatically generate a template file for you, you need to modify it and save it. Select a microservice to be developed and click to configure 2. Add Service Configuration There is no intrusion to user's Kubernetes manifest configuration when using Nocalhost. If you need to configure Service , please add a .nocalhost/ folder under your repository and add a config.yaml file. Then you can make changes locally through the IDE, These changes only take effect locally . For example, our sample application bookinfo has the following configuration for Service of productpage : - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"dep-job\" containers: - name: productpage install: portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash workDir: /home/nocalhost-dev sync: type: send filePattern: - ./ ignoreFilePattern: - \".git\" - \".github\" - \".idea\" portForward: - 39080:9080 When the user successfully deploys the application, Nocalhost can automatically read these default configurations and automatically apply them to the deployment and DevMode. How Service Supports DevMode We use the following productpage configuration of this microservice as an example to illustrate several key configuration items that Service supports development mode : - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"dep-job\" containers: - name: productpage install: portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash workDir: /home/nocalhost-dev sync: type: send filePattern: - ./ ignoreFilePattern: - \".git\" - \".github\" - \".idea\" portForward: - 39080:9080 name and serviceType When you want to use Service , name and serviceType are required items , used to locate a manifest, currently Nocalhost only supports Deployment a serviceType . In the above example, the serviceType of productpage is Deployment : - name: productpage serviceType: deployment gitUrl It is used to indicate the source code repo url corresponding to this microservice. When entering the DevMode , you can choose to synchronize a local directory to the development container, or you can choose to pull it from a remote warehouse. If you have configured gitUrl when entering DevMode , Nocalhost will automatically clone the codes from this gitUrl for you. For example: containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git ... image You can use your own image for the container when entering DevMode, for example: containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage ... workDir (Optional) It is used to indicate the working directory in remote container after entering the DevMode and the directory where the synchronized files are stored. By default, /home/nocalhost-dev will be used. containers: ... dev: ... workDir: /home/nocalhost-dev ... ... sync (Optional) You can select a group of configuration items, choose which folders of the source directory to synchronize to the development container, the default value is \".\" . The type of file synchronization can be either sent one-way or sendreceive two-way. containers: ... sync: type: send filePattern: - ./ ignoreFilePattern: - .git - .github - .idea ... portForward There are two port-forward configurations Automatically Port-Forward after Application Deployment After the application is successfully installed, Nocalhost will automatically forwarded the remote port to the local port, and then can quickly access remote running result through the local port. The configuration format is local port: remote port , for example: ... containers: - name: productpage install: portForward: - 39080:9080 Automatically Port-Forward when Entered DevMode After entering the DevMode, Nocalhost will automatically forwarded the remote port to the local port, and then can quickly access remote running result through the local port. The configuration format is local port: remote port , for example: containers: ... portForward: - 39080:9080 It is also possible to support not specifying the local port, such as :10000 . Nocalhost will randomly forward the designated remote port to a local port. More Configuration Information Please refer to Nocalhost Configuration for more detailed configuration of Nocalhost. Service Specify Startup Sequence Dependencies Nocalhost supports control startup sequence based on dependencies. Kubernetes version limit This feature depends on Kubernetes admission webhooks , so please ensure that the minimum version of the Kubernetes cluster is v1.16.0 or Above, and make sure to enable MutatingAdmissionWebhook and ValidatingAdmissionWebhook controllers. dependLabelSelector The label selector of the workload that the service depends on. There are two configuration items here: pods Specify the dependent Pods label selector (the current service will wait for the selected Pod by the label selector to be in the Ready state before starting) For example, productpage depends on another Pod named foo , then productpage can be configured as follows: - name: productpage serviceType: deployment dependLabelSelector: pods: - \"name=foo\" - \"app.kubernetes.io/name=foo\" jobs Specify the dependent Jobs label selector (the current service will wait for the selected job by the label selector to execute before starting) For example, productpage depends on another job named bar , then productpage can be configured as follows: - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"job-name=bar\" - \"app.kubernetes.io/name=bar\"","title":"Service Best Practice"},{"location":"eng/best-practice/service-best/#service-configuration","text":"","title":"Service Configuration"},{"location":"eng/best-practice/service-best/#1-do-not-configure-service","text":"Service does not have to be configured. If you have not modify any Service configuration, but want to configure it before entering the DevMode, the Nocalhost IDE plugin will automatically generate a template file for you, you need to modify it and save it. Select a microservice to be developed and click to configure","title":"1. Do Not Configure Service"},{"location":"eng/best-practice/service-best/#2-add-service-configuration","text":"There is no intrusion to user's Kubernetes manifest configuration when using Nocalhost. If you need to configure Service , please add a .nocalhost/ folder under your repository and add a config.yaml file. Then you can make changes locally through the IDE, These changes only take effect locally . For example, our sample application bookinfo has the following configuration for Service of productpage : - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"dep-job\" containers: - name: productpage install: portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash workDir: /home/nocalhost-dev sync: type: send filePattern: - ./ ignoreFilePattern: - \".git\" - \".github\" - \".idea\" portForward: - 39080:9080 When the user successfully deploys the application, Nocalhost can automatically read these default configurations and automatically apply them to the deployment and DevMode.","title":"2. Add Service Configuration"},{"location":"eng/best-practice/service-best/#how-service-supports-devmode","text":"We use the following productpage configuration of this microservice as an example to illustrate several key configuration items that Service supports development mode : - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"dep-job\" containers: - name: productpage install: portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash workDir: /home/nocalhost-dev sync: type: send filePattern: - ./ ignoreFilePattern: - \".git\" - \".github\" - \".idea\" portForward: - 39080:9080","title":"How Service Supports DevMode"},{"location":"eng/best-practice/service-best/#name-and-servicetype","text":"When you want to use Service , name and serviceType are required items , used to locate a manifest, currently Nocalhost only supports Deployment a serviceType . In the above example, the serviceType of productpage is Deployment : - name: productpage serviceType: deployment","title":"name and serviceType"},{"location":"eng/best-practice/service-best/#giturl","text":"It is used to indicate the source code repo url corresponding to this microservice. When entering the DevMode , you can choose to synchronize a local directory to the development container, or you can choose to pull it from a remote warehouse. If you have configured gitUrl when entering DevMode , Nocalhost will automatically clone the codes from this gitUrl for you. For example: containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git ...","title":"gitUrl"},{"location":"eng/best-practice/service-best/#image","text":"You can use your own image for the container when entering DevMode, for example: containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage ...","title":"image"},{"location":"eng/best-practice/service-best/#workdir-optional","text":"It is used to indicate the working directory in remote container after entering the DevMode and the directory where the synchronized files are stored. By default, /home/nocalhost-dev will be used. containers: ... dev: ... workDir: /home/nocalhost-dev ... ...","title":"workDir (Optional)"},{"location":"eng/best-practice/service-best/#sync-optional","text":"You can select a group of configuration items, choose which folders of the source directory to synchronize to the development container, the default value is \".\" . The type of file synchronization can be either sent one-way or sendreceive two-way. containers: ... sync: type: send filePattern: - ./ ignoreFilePattern: - .git - .github - .idea ...","title":"sync (Optional)"},{"location":"eng/best-practice/service-best/#portforward","text":"There are two port-forward configurations","title":"portForward"},{"location":"eng/best-practice/service-best/#automatically-port-forward-after-application-deployment","text":"After the application is successfully installed, Nocalhost will automatically forwarded the remote port to the local port, and then can quickly access remote running result through the local port. The configuration format is local port: remote port , for example: ... containers: - name: productpage install: portForward: - 39080:9080","title":"Automatically Port-Forward after Application Deployment"},{"location":"eng/best-practice/service-best/#automatically-port-forward-when-entered-devmode","text":"After entering the DevMode, Nocalhost will automatically forwarded the remote port to the local port, and then can quickly access remote running result through the local port. The configuration format is local port: remote port , for example: containers: ... portForward: - 39080:9080 It is also possible to support not specifying the local port, such as :10000 . Nocalhost will randomly forward the designated remote port to a local port. More Configuration Information Please refer to Nocalhost Configuration for more detailed configuration of Nocalhost.","title":"Automatically Port-Forward when Entered DevMode"},{"location":"eng/best-practice/service-best/#service-specify-startup-sequence-dependencies","text":"Nocalhost supports control startup sequence based on dependencies. Kubernetes version limit This feature depends on Kubernetes admission webhooks , so please ensure that the minimum version of the Kubernetes cluster is v1.16.0 or Above, and make sure to enable MutatingAdmissionWebhook and ValidatingAdmissionWebhook controllers.","title":"Service Specify Startup Sequence Dependencies"},{"location":"eng/best-practice/service-best/#dependlabelselector","text":"The label selector of the workload that the service depends on. There are two configuration items here:","title":"dependLabelSelector"},{"location":"eng/best-practice/service-best/#pods","text":"Specify the dependent Pods label selector (the current service will wait for the selected Pod by the label selector to be in the Ready state before starting) For example, productpage depends on another Pod named foo , then productpage can be configured as follows: - name: productpage serviceType: deployment dependLabelSelector: pods: - \"name=foo\" - \"app.kubernetes.io/name=foo\"","title":"pods"},{"location":"eng/best-practice/service-best/#jobs","text":"Specify the dependent Jobs label selector (the current service will wait for the selected job by the label selector to execute before starting) For example, productpage depends on another job named bar , then productpage can be configured as follows: - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"job-name=bar\" - \"app.kubernetes.io/name=bar\"","title":"jobs"},{"location":"eng/cli/cli-apply/","text":"Apply manifest Usage nhctl apply [NAME] [MANIFEST] [flags] Example: nhctl apply Flags Flags: -h, --help help for apply Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl apply"},{"location":"eng/cli/cli-apply/#usage","text":"nhctl apply [NAME] [MANIFEST] [flags] Example: nhctl apply","title":"Usage"},{"location":"eng/cli/cli-apply/#flags","text":"Flags: -h, --help help for apply Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-config/","text":"View, save and check application config file Usage: nhctl config [command] Available Commands: edit edit service config get get application/service config reload reload application/service config template get service config template nhctl config edit Edit service config nhctl config edit [Name] [flags] Flags Flags: --app-config get application config -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for get Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl config get Get application/service config nhctl config get [Name] [flags] \u793a\u4f8b: Flags Flags: --app-config get application config -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for get Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl config reload Reload application/service config nhctl config reload [Name] [flags] Flags Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for reload Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl config template Get service config template nhctl config template [Name] [flags] Flags Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for template Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl config"},{"location":"eng/cli/cli-config/#nhctl-config-edit","text":"Edit service config nhctl config edit [Name] [flags]","title":"nhctl config edit"},{"location":"eng/cli/cli-config/#flags","text":"Flags: --app-config get application config -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for get Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-config/#nhctl-config-get","text":"Get application/service config nhctl config get [Name] [flags] \u793a\u4f8b:","title":"nhctl config get"},{"location":"eng/cli/cli-config/#flags_1","text":"Flags: --app-config get application config -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for get Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-config/#nhctl-config-reload","text":"Reload application/service config nhctl config reload [Name] [flags]","title":"nhctl config reload"},{"location":"eng/cli/cli-config/#flags_2","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for reload Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-config/#nhctl-config-template","text":"Get service config template nhctl config template [Name] [flags]","title":"nhctl config template"},{"location":"eng/cli/cli-config/#flags_3","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for template Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-convert/","text":"Convert config file between different versions Usage nhctl convert [flags] Flags Flags: -d, --destFile string File saves converted config --from-version string From which version -h, --help help for convert -f, --srcFile string File needs to get converted --to-version string Convert to which version Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl convert"},{"location":"eng/cli/cli-convert/#usage","text":"nhctl convert [flags]","title":"Usage"},{"location":"eng/cli/cli-convert/#flags","text":"Flags: -d, --destFile string File saves converted config --from-version string From which version -h, --help help for convert -f, --srcFile string File needs to get converted --to-version string Convert to which version Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-daemon/","text":"nhctl daemon Usage: nhctl daemon [command] Available Commands: info Get nhctl daemon info restart Restart nhctl daemon start Start nhctl daemon status Get nhctl daemon status stop Stop nhctl daemon nhctl daemon info Usage nhctl daemon info Example: > nhctl daemon info > {\"Version\":\"v0.4.12\",\"CommitId\":\"0f02d7f90335076b502bca3f40ff42bd37ee55e6\",\"NhctlPath\":\".nh/bin/nhctl\",\"Upgrading\":false} Flags Flags: -h, --help help for restart --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl daemon restart \u91cd\u542f nhctl daemon Usage nhctl daemon restart Example: > nhctl daemon restart > RestartDaemonServerCommand has been sent Flags Flags: -h, --help help for restart --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl daemon start Manually start nhctl daemon Usage nhctl daemon start [flags] Flags Flags: -d, --daemon Is run as daemon(background) -h, --help help for start --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl daemon status View nhctl daemon status Usage nhctl daemon status Example: > nhctl daemon status > {\"portForwardList\":[]} Flags Flags: -h, --help help for status --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl daemon stop Manually stop nhctl daemon Usage nhctl daemon stop Flags Flags: -h, --help help for stop --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl daemon"},{"location":"eng/cli/cli-daemon/#nhctl-daemon-info","text":"","title":"nhctl daemon info"},{"location":"eng/cli/cli-daemon/#usage","text":"nhctl daemon info Example: > nhctl daemon info > {\"Version\":\"v0.4.12\",\"CommitId\":\"0f02d7f90335076b502bca3f40ff42bd37ee55e6\",\"NhctlPath\":\".nh/bin/nhctl\",\"Upgrading\":false}","title":"Usage"},{"location":"eng/cli/cli-daemon/#flags","text":"Flags: -h, --help help for restart --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-daemon/#nhctl-daemon-restart","text":"\u91cd\u542f nhctl daemon","title":"nhctl daemon restart"},{"location":"eng/cli/cli-daemon/#usage_1","text":"nhctl daemon restart Example: > nhctl daemon restart > RestartDaemonServerCommand has been sent","title":"Usage"},{"location":"eng/cli/cli-daemon/#flags_1","text":"Flags: -h, --help help for restart --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-daemon/#nhctl-daemon-start","text":"Manually start nhctl daemon","title":"nhctl daemon start"},{"location":"eng/cli/cli-daemon/#usage_2","text":"nhctl daemon start [flags]","title":"Usage"},{"location":"eng/cli/cli-daemon/#flags_2","text":"Flags: -d, --daemon Is run as daemon(background) -h, --help help for start --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-daemon/#nhctl-daemon-status","text":"View nhctl daemon status","title":"nhctl daemon status"},{"location":"eng/cli/cli-daemon/#usage_3","text":"nhctl daemon status Example: > nhctl daemon status > {\"portForwardList\":[]}","title":"Usage"},{"location":"eng/cli/cli-daemon/#flags_3","text":"Flags: -h, --help help for status --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-daemon/#nhctl-daemon-stop","text":"Manually stop nhctl daemon","title":"nhctl daemon stop"},{"location":"eng/cli/cli-daemon/#usage_4","text":"nhctl daemon stop","title":"Usage"},{"location":"eng/cli/cli-daemon/#flags_4","text":"Flags: -h, --help help for stop --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-db/","text":"leveldb operations Usage: nhctl db [command] Available Commands: all Get all leveldb data compact compact leveldb data put update leveldb data size Get all leveldb data size nhctl db all Get all leveldb data Usage nhctl db all [NAME] [flags] Flags Flags: --app string List leveldb data of specified application -h, --help help for all Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl db compact Compact leveldb data Usage nhctl db compact [NAME] [flags] Flags Flags: --app string Leveldb data of specified application -h, --help help for compact --key string The key of leveldb data Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl db put Update leveldb data Usage nhctl db put [flags] Flags Flags: --app string Leveldb data of specified application -f, --file string The value of leveldb data -h, --help help for put --key string The key of leveldb data --value string The value of leveldb data Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl db size Get all leveldb data Usage nhctl db size [NAME] [flags] Flags Flags: --app string List leveldb data of specified application -h, --help help for size Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl db"},{"location":"eng/cli/cli-db/#nhctl-db-all","text":"Get all leveldb data","title":"nhctl db all"},{"location":"eng/cli/cli-db/#usage","text":"nhctl db all [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-db/#flags","text":"Flags: --app string List leveldb data of specified application -h, --help help for all Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-db/#nhctl-db-compact","text":"Compact leveldb data","title":"nhctl db compact"},{"location":"eng/cli/cli-db/#usage_1","text":"nhctl db compact [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-db/#flags_1","text":"Flags: --app string Leveldb data of specified application -h, --help help for compact --key string The key of leveldb data Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-db/#nhctl-db-put","text":"Update leveldb data","title":"nhctl db put"},{"location":"eng/cli/cli-db/#usage_2","text":"nhctl db put [flags]","title":"Usage"},{"location":"eng/cli/cli-db/#flags_2","text":"Flags: --app string Leveldb data of specified application -f, --file string The value of leveldb data -h, --help help for put --key string The key of leveldb data --value string The value of leveldb data Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-db/#nhctl-db-size","text":"Get all leveldb data","title":"nhctl db size"},{"location":"eng/cli/cli-db/#usage_3","text":"nhctl db size [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-db/#flags_3","text":"Flags: --app string List leveldb data of specified application -h, --help help for size Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-describe/","text":"Describe application info Usage nhctl describe [NAME] [flags] Flags Flags: -d, --deployment string k8s deployment which your developing service exists -h, --help help for describe -t, --type string specify service type Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl describe"},{"location":"eng/cli/cli-describe/#usage","text":"nhctl describe [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-describe/#flags","text":"Flags: -d, --deployment string k8s deployment which your developing service exists -h, --help help for describe -t, --type string specify service type Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-dev/","text":"Dev Operations Usage: nhctl dev [command] Available Commands: associate associate service dev dir cmd Run cmd in dev container end end dev model reset reset service start Start DevMode terminal Enter dev container's terminal nhctl dev associate Associate service dev dir Usage nhctl dev associate [Name] [flags] Flags Flags: -s, --associate string dev mode work directory -t, --controller-type string kind of k8s controller,such as deployment,statefulSet --de-associate de associate(for test) -d, --deployment string k8s deployment which your developing service exists -h, --help help for associate Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev cmd Run cmd in dev container Usage nhctl dev cmd [NAME] [flags] Flags Flags: -c, --container string which container of pod to run command -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string K8s deployment which your developing service exists --dev-command-type string Dev command type can be: build, run, debug, hotReloadRun, hotReloadDebug -h, --help help for cmd Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev end End dev model Usage nhctl dev end [NAME] [flags] Flags Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for end Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev reset Reset service Usage nhctl dev reset [NAME] [flags] Flags Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for reset Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev start Start DevMode Usage nhctl dev start [NAME] [flags] Flags Flags: -c, --container string container to develop -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment your developing service exists -h, --help help for start -i, --image string image of DevContainer -s, --local-sync strings local directory to sync --priority-class string PriorityClass used by devContainer --shell string use current shell cmd to enter terminal while dev start success --sidecar-image string image of nocalhost-sidecar container --storage-class string StorageClass used by PV --syncthing-version string versions of syncthing and this flag is use for debug only --without-sync do not start file-sync while dev start success --without-terminal do not enter terminal directly while dev start success --work-dir string container's work directory Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev terminal Enter dev container's terminal Usage nhctl dev terminal [NAME] [flags] Flags Flags: -c, --container string container to enter -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for terminal --pod string pod to enter --shell string shell cmd while enter dev container Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl dev"},{"location":"eng/cli/cli-dev/#nhctl-dev-associate","text":"Associate service dev dir","title":"nhctl dev associate"},{"location":"eng/cli/cli-dev/#usage","text":"nhctl dev associate [Name] [flags]","title":"Usage"},{"location":"eng/cli/cli-dev/#flags","text":"Flags: -s, --associate string dev mode work directory -t, --controller-type string kind of k8s controller,such as deployment,statefulSet --de-associate de associate(for test) -d, --deployment string k8s deployment which your developing service exists -h, --help help for associate Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-dev/#nhctl-dev-cmd","text":"Run cmd in dev container","title":"nhctl dev cmd"},{"location":"eng/cli/cli-dev/#usage_1","text":"nhctl dev cmd [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-dev/#flags_1","text":"Flags: -c, --container string which container of pod to run command -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string K8s deployment which your developing service exists --dev-command-type string Dev command type can be: build, run, debug, hotReloadRun, hotReloadDebug -h, --help help for cmd Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-dev/#nhctl-dev-end","text":"End dev model","title":"nhctl dev end"},{"location":"eng/cli/cli-dev/#usage_2","text":"nhctl dev end [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-dev/#flags_2","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for end Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-dev/#nhctl-dev-reset","text":"Reset service","title":"nhctl dev reset"},{"location":"eng/cli/cli-dev/#usage_3","text":"nhctl dev reset [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-dev/#flags_3","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for reset Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-dev/#nhctl-dev-start","text":"Start DevMode","title":"nhctl dev start"},{"location":"eng/cli/cli-dev/#usage_4","text":"nhctl dev start [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-dev/#flags_4","text":"Flags: -c, --container string container to develop -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment your developing service exists -h, --help help for start -i, --image string image of DevContainer -s, --local-sync strings local directory to sync --priority-class string PriorityClass used by devContainer --shell string use current shell cmd to enter terminal while dev start success --sidecar-image string image of nocalhost-sidecar container --storage-class string StorageClass used by PV --syncthing-version string versions of syncthing and this flag is use for debug only --without-sync do not start file-sync while dev start success --without-terminal do not enter terminal directly while dev start success --work-dir string container's work directory Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-dev/#nhctl-dev-terminal","text":"Enter dev container's terminal","title":"nhctl dev terminal"},{"location":"eng/cli/cli-dev/#usage_5","text":"nhctl dev terminal [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-dev/#flags_5","text":"Flags: -c, --container string container to enter -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for terminal --pod string pod to enter --shell string shell cmd while enter dev container Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-exec/","text":"Execute a command in container Usage nhctl exec [NAME] [flags] Flags Flags: -c, --command stringArray command to execute in container -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for exec Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl exec"},{"location":"eng/cli/cli-exec/#usage","text":"nhctl exec [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-exec/#flags","text":"Flags: -c, --command stringArray command to execute in container -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for exec Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-get/","text":"Get resource info Usage nhctl get type [flags] Example: # Get all application nhctl get application --kubeconfig=kubeconfigfile # Get all application in namespace nhctl get application -n namespaceName --kubeconfig=kubeoconfigpath # Get all deployment of application in namespace nhctl get deployment -n namespaceName -a bookinfo --kubeconfig=kubeconfigpath Flags Flags: -a, --application string application name -h, --help help for get -o, --outputType string json or yaml -l, --selector stringToString Selector (label query) to filter on, only supports '='.(e.g. -l key1=value1,key2=value2) (default []) Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl get"},{"location":"eng/cli/cli-get/#usage","text":"nhctl get type [flags] Example: # Get all application nhctl get application --kubeconfig=kubeconfigfile # Get all application in namespace nhctl get application -n namespaceName --kubeconfig=kubeoconfigpath # Get all deployment of application in namespace nhctl get deployment -n namespaceName -a bookinfo --kubeconfig=kubeconfigpath","title":"Usage"},{"location":"eng/cli/cli-get/#flags","text":"Flags: -a, --application string application name -h, --help help for get -o, --outputType string json or yaml -l, --selector stringToString Selector (label query) to filter on, only supports '='.(e.g. -l key1=value1,key2=value2) (default []) Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-init/","text":"Init demo or dep component Usage: nhctl init [command] Available Commands: demo Init Nocalhost with demo mode dep dep component nhctl init demo Init api, web and dep component in cluster Usage nhctl init demo [flags] Example: nhctl init demo -n [DevSpace Name] -t nodeport -p [port] nhctl init demo -n [DevSpace Name] Flags Flags: --force force to init, warning: it will remove all nocalhost old data -h, --help help for demo --inject-user-amount int inject user amount, example 10, max is 999 --inject-user-offset int inject user id offset, default is 1 (default 1) --inject-user-template string inject users template, example Techo%d, max length is 15 -p, --port int for NodePort usage set ports (default 80) --set strings set values of helm -s, --source string (Deprecated) bookinfo source, github or coding, default is github -t, --type string set NodePort or LoadBalancer to expose nocalhost service Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl init dep Nocalhost\uff08nocalhost-dep\uff09\u7ec4\u4ef6\u521d\u59cb\u5316 Usage nhctl init dep [flags] Flags Flags: -h, --help help for dep Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl init"},{"location":"eng/cli/cli-init/#nhctl-init-demo","text":"Init api, web and dep component in cluster","title":"nhctl init demo"},{"location":"eng/cli/cli-init/#usage","text":"nhctl init demo [flags] Example: nhctl init demo -n [DevSpace Name] -t nodeport -p [port] nhctl init demo -n [DevSpace Name]","title":"Usage"},{"location":"eng/cli/cli-init/#flags","text":"Flags: --force force to init, warning: it will remove all nocalhost old data -h, --help help for demo --inject-user-amount int inject user amount, example 10, max is 999 --inject-user-offset int inject user id offset, default is 1 (default 1) --inject-user-template string inject users template, example Techo%d, max length is 15 -p, --port int for NodePort usage set ports (default 80) --set strings set values of helm -s, --source string (Deprecated) bookinfo source, github or coding, default is github -t, --type string set NodePort or LoadBalancer to expose nocalhost service Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-init/#nhctl-init-dep","text":"Nocalhost\uff08nocalhost-dep\uff09\u7ec4\u4ef6\u521d\u59cb\u5316","title":"nhctl init dep"},{"location":"eng/cli/cli-init/#usage_1","text":"nhctl init dep [flags]","title":"Usage"},{"location":"eng/cli/cli-init/#flags_1","text":"Flags: -h, --help help for dep Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-install/","text":"Install Application Usage nhctl install [NAME] [flags] Flags Flags: --config string specify a config relative to .nocalhost dir -r, --git-ref string resources git ref -u, --git-url string resources git url --helm-chart-name string chart name --helm-repo-name string chart repository name --helm-repo-url string chart repository url where to locate the requested chart --helm-repo-version string chart repository version -f, --helm-values string helm's Value.yaml -h, --help help for install --ignore-pre-install ignore pre-install --local-path string local path for application -c, --outer-config string specify a config.yaml in local path --resource-path strings resources path --set strings set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -t, --type string nocalhost application type: helmRepo, helmGit, helmLocal, rawManifest, rawManifestGit, rawManifestLocal or kustomizeGit --wait wait for completion Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl install"},{"location":"eng/cli/cli-install/#usage","text":"nhctl install [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-install/#flags","text":"Flags: --config string specify a config relative to .nocalhost dir -r, --git-ref string resources git ref -u, --git-url string resources git url --helm-chart-name string chart name --helm-repo-name string chart repository name --helm-repo-url string chart repository url where to locate the requested chart --helm-repo-version string chart repository version -f, --helm-values string helm's Value.yaml -h, --help help for install --ignore-pre-install ignore pre-install --local-path string local path for application -c, --outer-config string specify a config.yaml in local path --resource-path strings resources path --set strings set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -t, --type string nocalhost application type: helmRepo, helmGit, helmLocal, rawManifest, rawManifestGit, rawManifestLocal or kustomizeGit --wait wait for completion Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-k/","text":"kubectl Usage: nhctl k [command] Available Commands: delete Delete resources by filenames, stdin, resources and names, or by resources and label selector. exec Execute a command in a container logs Print the logs for a container in a pod or specified resource nhctl k delete Usage nhctl k delete [flags] Example: nhctl k delete [podName] --namespace nocalhost-reserved --kubeconfig=[path] Flags Flags: --all Delete all resources, including uninitialized ones, in the namespace of the specified resource types. -A, --all-namespaces If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace. --cascade string[=\"background\"] Must be \"background\", \"orphan\", or \"foreground\". Selects the deletion cascading strategy for the dependents (e.g. Pods created by a ReplicationController). Defaults to background. (default \"background\") --dry-run string[=\"unchanged\"] Must be \"none\", \"server\", or \"client\". If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server-side request without persisting the resource. (default \"none\") --field-selector string Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type. -f, --filename strings containing the resource to delete. --force If true, immediately remove resources from API and bypass graceful deletion. Note that immediate deletion of some resources may result in inconsistency or data loss and requires confirmation. --grace-period int Period of time in seconds given to the resource to terminate gracefully. Ignored if negative. Set to 1 for immediate shutdown. Can only be set to 0 when --force is true (force deletion). (default -1) -h, --help help for delete --ignore-not-found Treat \"resource not found\" as a successful delete. Defaults to \"true\" when --all is specified. -k, --kustomize string Process a kustomization directory. This flag can't be used together with -f or -R. --now If true, resources are signaled for immediate shutdown (same as --grace-period=1). -o, --output string Output mode. Use \"-o name\" for shorter output (resource/name). --raw string Raw URI to DELETE to the server. Uses the transport specified by the kubeconfig file. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. -l, --selector string Selector (label query) to filter on, not including uninitialized ones. --timeout duration The length of time to wait before giving up on a delete, zero means determine a timeout from the size of the object --wait If true, wait for resources to be gone before returning. This waits for finalizers. (default true) Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl k exec Usage nhctl k exec [flags] Example: exec (POD | TYPE/NAME) [-c CONTAINER] [flags] -- COMMAND [args...] Flags Flags: -c, --container string Container name. If omitted, the first container in the pod will be chosen -h, --help help for exec -i, --stdin Pass stdin to the container -t, --tty Stdin is a TTY Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl k logs Usage nhctl k logs [flags] Example: nhctl logs [podName] -c [containerName] -f=true --tail=1 --namespace nocalhost-reserved --kubeconfig=[path] Flags Flags: --all-containers Get all containers' logs in the pod(s). -c, --container string Print the logs of this container -f, --follow Specify if the logs should be streamed. -h, --help help for logs --ignore-errors If watching / following pod logs, allow for any errors that occur to be non-fatal --insecure-skip-tls-verify-backend Skip verifying the identity of the kubelet that logs are requested from. In theory, an attacker could provide invalid log content back. You might want to use this if your kubelet serving certificates have expired. --limit-bytes int Maximum bytes of logs to return. Defaults to no limit. --max-log-requests int Specify maximum number of concurrent logs to follow when using by a selector. Defaults to 5. (default 5) --pod-running-timeout duration The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running (default 20s) --prefix Prefix each log line with the log source (pod name and container name) -p, --previous If true, print the logs for the previous instance of the container in a pod if it exists. -l, --selector string Selector (label query) to filter on. --since duration Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of since-time / since may be used. --since-time string Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of since-time / since may be used. --tail int Lines of recent log file to display. Defaults to -1 with no selector, showing all log lines otherwise 10, if a selector is provided. (default -1) --timestamps Include timestamps on each line in the log output Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl k"},{"location":"eng/cli/cli-k/#nhctl-k-delete","text":"","title":"nhctl k delete"},{"location":"eng/cli/cli-k/#usage","text":"nhctl k delete [flags] Example: nhctl k delete [podName] --namespace nocalhost-reserved --kubeconfig=[path]","title":"Usage"},{"location":"eng/cli/cli-k/#flags","text":"Flags: --all Delete all resources, including uninitialized ones, in the namespace of the specified resource types. -A, --all-namespaces If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace. --cascade string[=\"background\"] Must be \"background\", \"orphan\", or \"foreground\". Selects the deletion cascading strategy for the dependents (e.g. Pods created by a ReplicationController). Defaults to background. (default \"background\") --dry-run string[=\"unchanged\"] Must be \"none\", \"server\", or \"client\". If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server-side request without persisting the resource. (default \"none\") --field-selector string Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type. -f, --filename strings containing the resource to delete. --force If true, immediately remove resources from API and bypass graceful deletion. Note that immediate deletion of some resources may result in inconsistency or data loss and requires confirmation. --grace-period int Period of time in seconds given to the resource to terminate gracefully. Ignored if negative. Set to 1 for immediate shutdown. Can only be set to 0 when --force is true (force deletion). (default -1) -h, --help help for delete --ignore-not-found Treat \"resource not found\" as a successful delete. Defaults to \"true\" when --all is specified. -k, --kustomize string Process a kustomization directory. This flag can't be used together with -f or -R. --now If true, resources are signaled for immediate shutdown (same as --grace-period=1). -o, --output string Output mode. Use \"-o name\" for shorter output (resource/name). --raw string Raw URI to DELETE to the server. Uses the transport specified by the kubeconfig file. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. -l, --selector string Selector (label query) to filter on, not including uninitialized ones. --timeout duration The length of time to wait before giving up on a delete, zero means determine a timeout from the size of the object --wait If true, wait for resources to be gone before returning. This waits for finalizers. (default true) Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-k/#nhctl-k-exec","text":"","title":"nhctl k exec"},{"location":"eng/cli/cli-k/#usage_1","text":"nhctl k exec [flags] Example: exec (POD | TYPE/NAME) [-c CONTAINER] [flags] -- COMMAND [args...]","title":"Usage"},{"location":"eng/cli/cli-k/#flags_1","text":"Flags: -c, --container string Container name. If omitted, the first container in the pod will be chosen -h, --help help for exec -i, --stdin Pass stdin to the container -t, --tty Stdin is a TTY Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-k/#nhctl-k-logs","text":"","title":"nhctl k logs"},{"location":"eng/cli/cli-k/#usage_2","text":"nhctl k logs [flags] Example: nhctl logs [podName] -c [containerName] -f=true --tail=1 --namespace nocalhost-reserved --kubeconfig=[path]","title":"Usage"},{"location":"eng/cli/cli-k/#flags_2","text":"Flags: --all-containers Get all containers' logs in the pod(s). -c, --container string Print the logs of this container -f, --follow Specify if the logs should be streamed. -h, --help help for logs --ignore-errors If watching / following pod logs, allow for any errors that occur to be non-fatal --insecure-skip-tls-verify-backend Skip verifying the identity of the kubelet that logs are requested from. In theory, an attacker could provide invalid log content back. You might want to use this if your kubelet serving certificates have expired. --limit-bytes int Maximum bytes of logs to return. Defaults to no limit. --max-log-requests int Specify maximum number of concurrent logs to follow when using by a selector. Defaults to 5. (default 5) --pod-running-timeout duration The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running (default 20s) --prefix Prefix each log line with the log source (pod name and container name) -p, --previous If true, print the logs for the previous instance of the container in a pod if it exists. -l, --selector string Selector (label query) to filter on. --since duration Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of since-time / since may be used. --since-time string Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of since-time / since may be used. --tail int Lines of recent log file to display. Defaults to -1 with no selector, showing all log lines otherwise 10, if a selector is provided. (default -1) --timestamps Include timestamps on each line in the log output Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-list/","text":"List all applications Usage nhctl list [NAME] [flags] Aliases: list, ls Flags Flags: --full list application meta full -h, --help help for list --json use json as out put, only supports for 'nhctl list' --yaml use yaml as out put, only supports for 'nhctl list' Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl list"},{"location":"eng/cli/cli-list/#usage","text":"nhctl list [NAME] [flags] Aliases: list, ls","title":"Usage"},{"location":"eng/cli/cli-list/#flags","text":"Flags: --full list application meta full -h, --help help for list --json use json as out put, only supports for 'nhctl list' --yaml use yaml as out put, only supports for 'nhctl list' Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-port-forward/","text":"Port-forward Usage: nhctl port-forward [command] Available Commands: end stop port-forward list list port-forward start Forward local port to remote pod's port nhctl port-forward end Usage nhctl port-forward end [NAME] [flags] Flags Flags: -d, --deployment string k8s deployment which you want to forward to -h, --help help for end -p, --port string stop specify port-forward -t, --type string specify service type (default \"deployment\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl port-forward list Usage nhctl port-forward list [NAME] [flags] Flags Flags: -h, --help help for list --json use json as out put --yaml use yaml as out put Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl port-forward start Usage nhctl port-forward start [NAME] [flags] Flags Flags: -c, --container string which container of pod to run command -d, --deployment string k8s deployment which you want to forward to -p, --dev-port strings port-forward between pod and local, such 8080:8080 or :8080(random localPort) --follow stock here waiting for disconnect or return immediately -f, --forward forward actually, deprecated -h, --help help for start --pod string specify pod name -t, --type string specify service type (default \"deployment\") --way string specify port-forward way, deprecated (default \"manual\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl port-forward"},{"location":"eng/cli/cli-port-forward/#nhctl-port-forward-end","text":"","title":"nhctl port-forward end"},{"location":"eng/cli/cli-port-forward/#usage","text":"nhctl port-forward end [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-port-forward/#flags","text":"Flags: -d, --deployment string k8s deployment which you want to forward to -h, --help help for end -p, --port string stop specify port-forward -t, --type string specify service type (default \"deployment\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-port-forward/#nhctl-port-forward-list","text":"","title":"nhctl port-forward list"},{"location":"eng/cli/cli-port-forward/#usage_1","text":"nhctl port-forward list [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-port-forward/#flags_1","text":"Flags: -h, --help help for list --json use json as out put --yaml use yaml as out put Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-port-forward/#nhctl-port-forward-start","text":"","title":"nhctl port-forward start"},{"location":"eng/cli/cli-port-forward/#usage_2","text":"nhctl port-forward start [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-port-forward/#flags_2","text":"Flags: -c, --container string which container of pod to run command -d, --deployment string k8s deployment which you want to forward to -p, --dev-port strings port-forward between pod and local, such 8080:8080 or :8080(random localPort) --follow stock here waiting for disconnect or return immediately -f, --forward forward actually, deprecated -h, --help help for start --pod string specify pod name -t, --type string specify service type (default \"deployment\") --way string specify port-forward way, deprecated (default \"manual\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-profile/","text":"Profile Management Usage: nhctl profile [command] Available Commands: get Get a config item of Profile set Set a config item of Profile nhctl profile get Get a config item of Profile Usage nhctl profile get [flags] Flags Flags: -c, --container string container name of pod -d, --deployment string k8s workload name -h, --help help for get -k, --key string key of dev config -t, --type string specify service type (default \"deployment\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl profile set Set a config item of Profile Usage nhctl profile set [flags] Flags Flags: -c, --container string container name of pod -d, --deployment string k8s workload name -h, --help help for set -k, --key string key of dev config -t, --type string specify service type (default \"deployment\") -v, --value string value of dev config Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl profile"},{"location":"eng/cli/cli-profile/#nhctl-profile-get","text":"Get a config item of Profile","title":"nhctl profile get"},{"location":"eng/cli/cli-profile/#usage","text":"nhctl profile get [flags]","title":"Usage"},{"location":"eng/cli/cli-profile/#flags","text":"Flags: -c, --container string container name of pod -d, --deployment string k8s workload name -h, --help help for get -k, --key string key of dev config -t, --type string specify service type (default \"deployment\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-profile/#nhctl-profile-set","text":"Set a config item of Profile","title":"nhctl profile set"},{"location":"eng/cli/cli-profile/#usage_1","text":"nhctl profile set [flags]","title":"Usage"},{"location":"eng/cli/cli-profile/#flags_1","text":"Flags: -c, --container string container name of pod -d, --deployment string k8s workload name -h, --help help for set -k, --key string key of dev config -t, --type string specify service type (default \"deployment\") -v, --value string value of dev config Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-pvc/","text":"Manage PersistVolumeClaims Usage: nhctl pvc [command] Available Commands: clean Clean up PersistVolumeClaims list List PersistVolumeClaims nhctl pvc clean Clean up PersistVolumeClaims Usage nhctl pvc clean [flags] Flags Flags: --app string Clean up PVCs of specified application --controller string Clean up PVCs of specified service -h, --help help for clean --name string Clean up specified PVC Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl pvc list List PersistVolumeClaims Usage nhctl pvc list [flags] Flags Flags: --app string List PVCs of specified application -h, --help help for list --json Use json as the output format --svc string List PVCs of specified service --yaml Use yaml as the output format Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl pvc"},{"location":"eng/cli/cli-pvc/#nhctl-pvc-clean","text":"Clean up PersistVolumeClaims","title":"nhctl pvc clean"},{"location":"eng/cli/cli-pvc/#usage","text":"nhctl pvc clean [flags]","title":"Usage"},{"location":"eng/cli/cli-pvc/#flags","text":"Flags: --app string Clean up PVCs of specified application --controller string Clean up PVCs of specified service -h, --help help for clean --name string Clean up specified PVC Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-pvc/#nhctl-pvc-list","text":"List PersistVolumeClaims","title":"nhctl pvc list"},{"location":"eng/cli/cli-pvc/#usage_1","text":"nhctl pvc list [flags]","title":"Usage"},{"location":"eng/cli/cli-pvc/#flags_1","text":"Flags: --app string List PVCs of specified application -h, --help help for list --json Use json as the output format --svc string List PVCs of specified service --yaml Use yaml as the output format Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-render/","text":"Render the file for debugging Usage nhctl render [NAME] [flags] Flags Flags: -e, --env path string the env file for render injection -h, --help help for render Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl render"},{"location":"eng/cli/cli-render/#usage","text":"nhctl render [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-render/#flags","text":"Flags: -e, --env path string the env file for render injection -h, --help help for render Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-reset/","text":"Reset application Usage nhctl reset [NAME] [flags] Flags Flags: -h, --help help for reset Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl reset"},{"location":"eng/cli/cli-reset/#usage","text":"nhctl reset [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-reset/#flags","text":"Flags: -h, --help help for reset Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-sync-status/","text":"Tracing the files sync status, include local folder and remote device Usage nhctl sync-status [NAME] [flags] Flags Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet (default \"deployment\") -d, --deployment string k8s deployment which your developing service exists (default \"deployment\") -h, --help help for sync-status --override override the remote changing according to the local sync folder Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl sync status"},{"location":"eng/cli/cli-sync-status/#usage","text":"nhctl sync-status [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-sync-status/#flags","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet (default \"deployment\") -d, --deployment string k8s deployment which your developing service exists (default \"deployment\") -h, --help help for sync-status --override override the remote changing according to the local sync folder Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-sync/","text":"Sync files to remote Pod in Kubernetes Usage nhctl sync [NAME] [flags] \u6807\u8bc6 Flags: --container string container name of pod to sync -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -b, --double if use double side sync -h, --help help for sync -i, --ignored-pattern strings local ignored pattern --overwrite override the remote changing according to the local sync folder while start up (default true) --resume resume file sync --stop stop file sync -s, --synced-pattern strings local synced pattern Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl sync"},{"location":"eng/cli/cli-sync/#usage","text":"nhctl sync [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-sync/#_1","text":"Flags: --container string container name of pod to sync -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -b, --double if use double side sync -h, --help help for sync -i, --ignored-pattern strings local ignored pattern --overwrite override the remote changing according to the local sync folder while start up (default true) --resume resume file sync --stop stop file sync -s, --synced-pattern strings local synced pattern Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bc6"},{"location":"eng/cli/cli-uninstall/","text":"Uninstall application Usage nhctl uninstall [NAME] [flags] Flags Flags: --force force to uninstall anyway -h, --help help for uninstall Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl-uninstall"},{"location":"eng/cli/cli-uninstall/#usage","text":"nhctl uninstall [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-uninstall/#flags","text":"Flags: --force force to uninstall anyway -h, --help help for uninstall Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-upgrade/","text":"Upgrade k8s application Usage nhctl upgrade [NAME] [flags] Flags Flags: --config string specify a config relative to .nocalhost dir -r, --git-ref string resources git ref -u, --git-url string resources git url --helm-chart-name string chart name --helm-repo-name string chart repository name --helm-repo-url string chart repository url where to locate the requested chart --helm-repo-version string chart repository version -f, --helm-values string helm's Value.yaml -h, --help help for upgrade --local-path string local path for application -c, --outer-config string specify a config.yaml in local path --resource-path strings resources path --set strings set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)","title":"nhctl-upgrade"},{"location":"eng/cli/cli-upgrade/#usage","text":"nhctl upgrade [NAME] [flags]","title":"Usage"},{"location":"eng/cli/cli-upgrade/#flags","text":"Flags: --config string specify a config relative to .nocalhost dir -r, --git-ref string resources git ref -u, --git-url string resources git url --helm-chart-name string chart name --helm-repo-name string chart repository name --helm-repo-url string chart repository url where to locate the requested chart --helm-repo-version string chart repository version -f, --helm-values string helm's Value.yaml -h, --help help for upgrade --local-path string local path for application -c, --outer-config string specify a config.yaml in local path --resource-path strings resources path --set strings set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)","title":"Flags"},{"location":"eng/cli/cli-version/","text":"Get nhctl's version Usage nhctl version [flags] Flags Flags: -h, --help help for version Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl-version"},{"location":"eng/cli/cli-version/#usage","text":"nhctl version [flags]","title":"Usage"},{"location":"eng/cli/cli-version/#flags","text":"Flags: -h, --help help for version Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-yaml/","text":"Yaml tools Usage: nhctl yaml [command] Available Commands: from-json Convert json to yaml to-json Convert yaml to json nhctl yaml from-json Convert json to yaml Usage nhctl yaml from-json [flags] Flags Flags: -h, --help help for from-json Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl yaml to-json Convert yaml to json Usage nhctl yaml to-json [flags] Flags Flags: -h, --help help for yaml Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl-yaml"},{"location":"eng/cli/cli-yaml/#nhctl-yaml-from-json","text":"Convert json to yaml","title":"nhctl yaml from-json"},{"location":"eng/cli/cli-yaml/#usage","text":"nhctl yaml from-json [flags]","title":"Usage"},{"location":"eng/cli/cli-yaml/#flags","text":"Flags: -h, --help help for from-json Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/cli/cli-yaml/#nhctl-yaml-to-json","text":"Convert yaml to json","title":"nhctl yaml to-json"},{"location":"eng/cli/cli-yaml/#usage_1","text":"nhctl yaml to-json [flags]","title":"Usage"},{"location":"eng/cli/cli-yaml/#flags_1","text":"Flags: -h, --help help for yaml Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"Flags"},{"location":"eng/ide/app/","text":"Apply VSCode Plugin JetBrains Plugin Clear Persistent Data VSCode Plugin JetBrains Plugin Config VSCode Plugin JetBrains Plugin Upgrade App VSCode Plugin JetBrains Plugin Load Resource VSCode Plugin JetBrains Plugin Enter DevMode VSCode Plugin JetBrains Plugin Exit DevMode VSCode Plugin JetBrains Plugin Config VSCode Plugin JetBrains Plugin Clear Persistent Data VSCode Plugin JetBrains Plugin Associate Local Directory VSCode Plugin JetBrains Plugin Copy Terminal VSCode Plugin JetBrains Plugin Delete VSCode Plugin JetBrains Plugin Logs VSCode Plugin JetBrains Plugin Port Forward VSCode Plugin JetBrains Plugin Port Forward List VSCode Plugin JetBrains Plugin Reset VSCode Plugin JetBrains Plugin Terminal VSCode Plugin JetBrains Plugin","title":"APP"},{"location":"eng/ide/app/#apply","text":"VSCode Plugin JetBrains Plugin","title":"Apply"},{"location":"eng/ide/app/#clear-persistent-data","text":"VSCode Plugin JetBrains Plugin","title":"Clear Persistent Data"},{"location":"eng/ide/app/#config","text":"VSCode Plugin JetBrains Plugin","title":"Config"},{"location":"eng/ide/app/#upgrade-app","text":"VSCode Plugin JetBrains Plugin","title":"Upgrade App"},{"location":"eng/ide/app/#load-resource","text":"VSCode Plugin JetBrains Plugin","title":"Load Resource"},{"location":"eng/ide/app/#enter-devmode","text":"VSCode Plugin JetBrains Plugin","title":"Enter DevMode"},{"location":"eng/ide/app/#exit-devmode","text":"VSCode Plugin JetBrains Plugin","title":"Exit DevMode"},{"location":"eng/ide/app/#config_1","text":"VSCode Plugin JetBrains Plugin","title":"Config"},{"location":"eng/ide/app/#clear-persistent-data_1","text":"VSCode Plugin JetBrains Plugin","title":"Clear Persistent Data"},{"location":"eng/ide/app/#associate-local-directory","text":"VSCode Plugin JetBrains Plugin","title":"Associate Local Directory"},{"location":"eng/ide/app/#copy-terminal","text":"VSCode Plugin JetBrains Plugin","title":"Copy Terminal"},{"location":"eng/ide/app/#delete","text":"VSCode Plugin JetBrains Plugin","title":"Delete"},{"location":"eng/ide/app/#logs","text":"VSCode Plugin JetBrains Plugin","title":"Logs"},{"location":"eng/ide/app/#port-forward","text":"VSCode Plugin JetBrains Plugin","title":"Port Forward"},{"location":"eng/ide/app/#port-forward-list","text":"VSCode Plugin JetBrains Plugin","title":"Port Forward List"},{"location":"eng/ide/app/#reset","text":"VSCode Plugin JetBrains Plugin","title":"Reset"},{"location":"eng/ide/app/#terminal","text":"VSCode Plugin JetBrains Plugin","title":"Terminal"},{"location":"eng/ide/cluster/","text":"Connect Nocalhost supports multi cluster management, you can add any Kubernetes in IDE plugin by select kubeconfig file or pastes the kubeconfig file as text to add cluster. 1. Select kubeconfig file Select a kubeconfig file from your local directory. Default Path Nocalhost will try to load kubeconfig from your local ~/.kube/config by default. You can also change the default path. 2. Paste kubeconfig as text Paste kubeconfig as text. Once kubeconfig has successfully read, select the right context, then connect to cluster. Get Kubeconfig You can view kubeconfig by running the following command in the system where the Kubernetes cluster is installed, and then copy and paste it. kubectl config view --minify --raw --flatten VSCode Plugin Click icon connect to cluster Click Add Kubeconfig and select the suitable method to connect JetBrains Plugin Click icon connect to cluster Select the suitable method to connect Remove Cluster VSCode Plugin Right-click the specified cluster, and then click Remove to remove the specified cluster from the cluster list. JetBrains Plugin Right-click the specified cluster, and then click Remove to remove the specified cluster from the cluster list. View Cluster's Kubeconfig Right-click the specified cluster and select View Kubeconfig , the Nocalhost plugin will open the kubeconfig of the cluster. VSCode Plugin JetBrains Plugin","title":"Cluster"},{"location":"eng/ide/cluster/#connect","text":"Nocalhost supports multi cluster management, you can add any Kubernetes in IDE plugin by select kubeconfig file or pastes the kubeconfig file as text to add cluster. 1. Select kubeconfig file Select a kubeconfig file from your local directory. Default Path Nocalhost will try to load kubeconfig from your local ~/.kube/config by default. You can also change the default path. 2. Paste kubeconfig as text Paste kubeconfig as text. Once kubeconfig has successfully read, select the right context, then connect to cluster. Get Kubeconfig You can view kubeconfig by running the following command in the system where the Kubernetes cluster is installed, and then copy and paste it. kubectl config view --minify --raw --flatten VSCode Plugin Click icon connect to cluster Click Add Kubeconfig and select the suitable method to connect JetBrains Plugin Click icon connect to cluster Select the suitable method to connect","title":"Connect"},{"location":"eng/ide/cluster/#remove-cluster","text":"VSCode Plugin Right-click the specified cluster, and then click Remove to remove the specified cluster from the cluster list. JetBrains Plugin Right-click the specified cluster, and then click Remove to remove the specified cluster from the cluster list.","title":"Remove Cluster"},{"location":"eng/ide/cluster/#view-clusters-kubeconfig","text":"Right-click the specified cluster and select View Kubeconfig , the Nocalhost plugin will open the kubeconfig of the cluster. VSCode Plugin JetBrains Plugin","title":"View Cluster's Kubeconfig"},{"location":"eng/ide/devspace/","text":"Note If you need to install the application through the Nocalhost IDE plugin, you need to install and setup Nocalhost Server, you can read Nocalhost Server Quick Start and Using Nocalhost Server . Delete Application VSCode Plugin JetBrains Plugin Clear Persistent Data Clear the persistent data of a DevSpace. VSCode Plugin JetBrains Plugin JetBrains plugin does not support this features. Reset Note The feature only available once connect to Nocalhost Server This will delete all resources in DevSpace and create a new namespace. VSCode Plugin JetBrains Plugin","title":"DevSpace"},{"location":"eng/ide/devspace/#delete-application","text":"VSCode Plugin JetBrains Plugin","title":"Delete Application"},{"location":"eng/ide/devspace/#clear-persistent-data","text":"Clear the persistent data of a DevSpace. VSCode Plugin JetBrains Plugin JetBrains plugin does not support this features.","title":"Clear Persistent Data"},{"location":"eng/ide/devspace/#reset","text":"Note The feature only available once connect to Nocalhost Server This will delete all resources in DevSpace and create a new namespace. VSCode Plugin JetBrains Plugin","title":"Reset"},{"location":"eng/references/deploy-app-manual/","text":"Prerequisites Configured Kubernetes Cluster (with 2 Core and 4G Memory) which can either be a cluster for local development, such as minikube or Docker Kubernetes cluster, or a remote cluster, such as Tencent TKE . RBAC must be enabled in above cluster Configured kubeconfig file that has namespace admin privilege Helm installed Visual Studio Code (1.52+) Kubernetes api-server can be accessed internal and external We using minikube to demonstrate, you can also deploy the sample application in any Kubernetes clusters Deploy bookinfo Application by Manifest Step 1: Create a test namespace kubectl create namespace test Step 2: Install via manifest ~/.nh/bin/nhctl install bookinfo -u https://github.com/nocalhost/bookinfo.git -t rawManifest -r test-case --resource-path manifest/templates -n test After successfully installed, you should see the following information: cmd: git clone --branch test-case --depth 1 https://github.com/nocalhost/bookinfo.git /var/folders/db/rgrf2h2j4711zy7136hlx7840000gn/T/228374083 Cloning into '/var/folders/db/rgrf2h2j4711zy7136hlx7840000gn/T/228374083'... Job print-num-01 created Job print-num-01 running Job print-num-01 completed Resource(Job) dep-job created Resource(Service) details created Resource(Deployment) details created Resource(StatefulSet) web created Resource(ConfigMap) bookinfo-pre-install-config created Resource(Service) productpage created Resource(Deployment) productpage created Resource(Service) ratings created Resource(Deployment) ratings created Resource(Service) reviews created Resource(Deployment) reviews created Application bookinfo installed Starting port-forward for deployment productpage Port forward 39080:9080 Port-forward 39080:9080 has been started Step 3: Check your application deployment You can check your minifest application deployment status by: kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE details 0/1 1 0 9s productpage 0/2 2 0 8s ratings 0/1 1 0 7s reviews 0/1 1 0 7s Deploy bookinfo Application by Helm Step 1: Clone from Github Repo Clone the bookinfo repo and enter the directory git clone https://github.com/nocalhost/bookinfo.git cd bookinfo Step 2: Install Helm Chart Helm chart is in the path ./chart/bookinfo , we can use helm install command install directly, Helm will automatically deploy the bookinfo application to Kubernetes cluster by your default kubeconfig : helm install bookinfo ./charts/bookinfo NAME: bookinfo LAST DEPLOYED: Fri May 21 19:18:30 2021 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None or you can use the --kubeconfig flag to specify kubeconfig path, Read Helm install for how to use helm install command. :::tip use different kubeconfig You can specify the path of kubeconfig by using the --kubeconfig flag. Please refer to Helm install for more help using helm install . ::: Step 3: Check your helm deployment You can check your helm deployment status by: helm list NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION bookinfo default 1 2021-05-21 19:18:30.268709 +0800 CST deployed nocalhost-bookinfo-1.2.2 1.3 Check Kubernetes deployment kubectl get deployment -n default NAME READY UP-TO-DATE AVAILABLE AGE details 2/2 2 2 4m18s productpage 2/2 2 2 4m18s ratings 2/2 2 2 4m18s reviews 0/2 2 0 4m18s Clone bookinfo source code We are going to use bookinfo source code in Quick Start . It is recommended that you can clone the source code to local to avoid problem caused by network or SSL. Repo for 4 services in bookinfo application: productpage(Request Entrance): https://github.com/nocalhost/bookinfo-productpage reviews: https://github.com/nocalhost/bookinfo-reviews details: https://github.com/nocalhost/bookinfo-details ratings: https://github.com/nocalhost/bookinfo-ratings","title":"Deploy app manual"},{"location":"eng/references/deploy-app-manual/#prerequisites","text":"Configured Kubernetes Cluster (with 2 Core and 4G Memory) which can either be a cluster for local development, such as minikube or Docker Kubernetes cluster, or a remote cluster, such as Tencent TKE . RBAC must be enabled in above cluster Configured kubeconfig file that has namespace admin privilege Helm installed Visual Studio Code (1.52+) Kubernetes api-server can be accessed internal and external We using minikube to demonstrate, you can also deploy the sample application in any Kubernetes clusters","title":"Prerequisites"},{"location":"eng/references/deploy-app-manual/#deploy-bookinfo-application-by-manifest","text":"","title":"Deploy bookinfo Application by Manifest"},{"location":"eng/references/deploy-app-manual/#step-1-create-a-test-namespace","text":"kubectl create namespace test","title":"Step 1: Create a test namespace"},{"location":"eng/references/deploy-app-manual/#step-2-install-via-manifest","text":"~/.nh/bin/nhctl install bookinfo -u https://github.com/nocalhost/bookinfo.git -t rawManifest -r test-case --resource-path manifest/templates -n test After successfully installed, you should see the following information: cmd: git clone --branch test-case --depth 1 https://github.com/nocalhost/bookinfo.git /var/folders/db/rgrf2h2j4711zy7136hlx7840000gn/T/228374083 Cloning into '/var/folders/db/rgrf2h2j4711zy7136hlx7840000gn/T/228374083'... Job print-num-01 created Job print-num-01 running Job print-num-01 completed Resource(Job) dep-job created Resource(Service) details created Resource(Deployment) details created Resource(StatefulSet) web created Resource(ConfigMap) bookinfo-pre-install-config created Resource(Service) productpage created Resource(Deployment) productpage created Resource(Service) ratings created Resource(Deployment) ratings created Resource(Service) reviews created Resource(Deployment) reviews created Application bookinfo installed Starting port-forward for deployment productpage Port forward 39080:9080 Port-forward 39080:9080 has been started","title":"Step 2: Install via manifest"},{"location":"eng/references/deploy-app-manual/#step-3-check-your-application-deployment","text":"You can check your minifest application deployment status by: kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE details 0/1 1 0 9s productpage 0/2 2 0 8s ratings 0/1 1 0 7s reviews 0/1 1 0 7s","title":"Step 3:  Check your application deployment"},{"location":"eng/references/deploy-app-manual/#deploy-bookinfo-application-by-helm","text":"","title":"Deploy bookinfo Application by Helm"},{"location":"eng/references/deploy-app-manual/#step-1-clone-from-github-repo","text":"Clone the bookinfo repo and enter the directory git clone https://github.com/nocalhost/bookinfo.git cd bookinfo","title":"Step 1: Clone from Github Repo"},{"location":"eng/references/deploy-app-manual/#step-2-install-helm-chart","text":"Helm chart is in the path ./chart/bookinfo , we can use helm install command install directly, Helm will automatically deploy the bookinfo application to Kubernetes cluster by your default kubeconfig : helm install bookinfo ./charts/bookinfo NAME: bookinfo LAST DEPLOYED: Fri May 21 19:18:30 2021 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None or you can use the --kubeconfig flag to specify kubeconfig path, Read Helm install for how to use helm install command. :::tip use different kubeconfig You can specify the path of kubeconfig by using the --kubeconfig flag. Please refer to Helm install for more help using helm install . :::","title":"Step 2: Install Helm Chart"},{"location":"eng/references/deploy-app-manual/#step-3-check-your-helm-deployment","text":"You can check your helm deployment status by: helm list NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION bookinfo default 1 2021-05-21 19:18:30.268709 +0800 CST deployed nocalhost-bookinfo-1.2.2 1.3 Check Kubernetes deployment kubectl get deployment -n default NAME READY UP-TO-DATE AVAILABLE AGE details 2/2 2 2 4m18s productpage 2/2 2 2 4m18s ratings 2/2 2 2 4m18s reviews 0/2 2 0 4m18s","title":"Step 3:  Check your helm deployment"},{"location":"eng/references/deploy-app-manual/#clone-bookinfo-source-code","text":"We are going to use bookinfo source code in Quick Start . It is recommended that you can clone the source code to local to avoid problem caused by network or SSL. Repo for 4 services in bookinfo application: productpage(Request Entrance): https://github.com/nocalhost/bookinfo-productpage reviews: https://github.com/nocalhost/bookinfo-reviews details: https://github.com/nocalhost/bookinfo-details ratings: https://github.com/nocalhost/bookinfo-ratings","title":"Clone bookinfo source code"},{"location":"eng/references/deploy-app/","text":"Prerequisites Configured Kubernetes Cluster (with 2 Core and 4G Memory) which can either be a cluster for local development, such as minikube or Docker Kubernetes cluster, or a remote cluster, such as Tencent TKE . RBAC must be enabled in above cluster Configured kubeconfig file that has namespace admin privilege Visual Studio Code (1.52+) Kubernetes api-server can be accessed internal and external We using minikube to demonstrate, you can also deploy the sample application in any Kubernetes clusters Deploy Application by Manifest Select any namespace\uff0cclick icon Select Clone from Git in the popup box Enter our demo application's Git url: https://github.com/nocalhost/bookinfo.git Select default branch, choose config.manifest.git.yaml type form the dropdown list Wait for installation finish then you can see your application in namespace","title":"Deploy app"},{"location":"eng/references/deploy-app/#prerequisites","text":"Configured Kubernetes Cluster (with 2 Core and 4G Memory) which can either be a cluster for local development, such as minikube or Docker Kubernetes cluster, or a remote cluster, such as Tencent TKE . RBAC must be enabled in above cluster Configured kubeconfig file that has namespace admin privilege Visual Studio Code (1.52+) Kubernetes api-server can be accessed internal and external We using minikube to demonstrate, you can also deploy the sample application in any Kubernetes clusters","title":"Prerequisites"},{"location":"eng/references/deploy-app/#deploy-application-by-manifest","text":"Select any namespace\uff0cclick icon Select Clone from Git in the popup box Enter our demo application's Git url: https://github.com/nocalhost/bookinfo.git Select default branch, choose config.manifest.git.yaml type form the dropdown list Wait for installation finish then you can see your application in namespace","title":"Deploy Application by Manifest"},{"location":"eng/references/deploy-quick-demo/","text":"Nocalhost IDE plugin has built-in demo application, you can quickly install it through the following steps: Select any namespace from the cluster tree Click on the icon to deploy application Select Install Quick Demo to install the demo application Note Quick demo application comes with port-forward configured. After demo has successfully deployed (check the deployment status from the cluster tree), you can access the demo from your local web browser by visiting http://127.0.0.1:39080","title":"Deploy Demo APP"},{"location":"eng/references/devmode-workloads/","text":"DevMode supports for different workloads Nocalhost supports to develop different common workloads. The following is the working principle of entering DevMode for different workloads Deployment The main steps when Deployment enters the DevMode: Reduce the Pod replicate to 1 Modify manifest definition in .spec \uff1a Save the original .spec in annotation, used to restore the original workload when existing DevMode Modify the image of the specified container as a DevImage, and change the name of the container to nocalhost-dev Add a nocalhost-sidecar container for file synchronization Create a emptyDir type volume, mount it to the workDir directory of the nocalhost-dev and nocalhost-sidecar containers -Create a secret volume, and mount the syncthing certificate and configuration stored in the Secret into the nocalhost-sidecar container Disable all probes of the container\uff0cSecurityContext In general, the second step is to modify the manifest of the Deployment. The following uses the reviews service of bookinfo as an example to compare the manifest changes before and after the DevMode: # Before enter DevMode apiVersion : apps/v1 kind : Deployment metadata : annotations : deployment.kubernetes.io/revision : \"1\" dev.nocalhost/application-name : bookinfo dev.nocalhost/application-namespace : nh6bxsw generation : 1 labels : app : reviews app.kubernetes.io/managed-by : nocalhost name : reviews spec : progressDeadlineSeconds : 600 replicas : 1 revisionHistoryLimit : 10 selector : matchLabels : app : reviews strategy : rollingUpdate : maxSurge : 25% maxUnavailable : 25% type : RollingUpdate template : metadata : labels : app : reviews spec : containers : - env : - name : LOG_DIR value : /tmp/logs image : codingcorp-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest imagePullPolicy : Always name : reviews ports : - containerPort : 9080 protocol : TCP readinessProbe : failureThreshold : 3 initialDelaySeconds : 5 periodSeconds : 10 successThreshold : 1 tcpSocket : port : 9080 timeoutSeconds : 1 resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /tmp name : tmp - mountPath : /opt/ibm/wlp/output name : wlp-output dnsPolicy : ClusterFirst restartPolicy : Always schedulerName : default-scheduler securityContext : {} terminationGracePeriodSeconds : 30 volumes : - emptyDir : {} name : wlp-output - emptyDir : {} name : tmp # Enter DevMode apiVersion : apps/v1 kind : Deployment metadata : annotations : deployment.kubernetes.io/revision : \"2\" dev.nocalhost/application-name : bookinfo dev.nocalhost/application-namespace : nh6bxsw # The following strings used to record the definition of the workload # before entering DevMode, and to restore the workload to its original # state when exiting DevMode nocalhost.origin.spec.json : '{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"reviews\"}},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"reviews\"}},\"spec\":{\"volumes\":[{\"name\":\"wlp-output\",\"emptyDir\":{}},{\"name\":\"tmp\",\"emptyDir\":{}}],\"containers\":[{\"name\":\"reviews\",\"image\":\"codingcorp-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest\",\"ports\":[{\"containerPort\":9080,\"protocol\":\"TCP\"}],\"env\":[{\"name\":\"LOG_DIR\",\"value\":\"/tmp/logs\"}],\"resources\":{},\"volumeMounts\":[{\"name\":\"tmp\",\"mountPath\":\"/tmp\"},{\"name\":\"wlp-output\",\"mountPath\":\"/opt/ibm/wlp/output\"}],\"readinessProbe\":{\"tcpSocket\":{\"port\":9080},\"initialDelaySeconds\":5,\"timeoutSeconds\":1,\"periodSeconds\":10,\"successThreshold\":1,\"failureThreshold\":3},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"imagePullPolicy\":\"Always\"}],\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":30,\"dnsPolicy\":\"ClusterFirst\",\"securityContext\":{},\"schedulerName\":\"default-scheduler\"}},\"strategy\":{\"type\":\"RollingUpdate\",\"rollingUpdate\":{\"maxUnavailable\":\"25%\",\"maxSurge\":\"25%\"}},\"revisionHistoryLimit\":10,\"progressDeadlineSeconds\":600}' generation : 2 labels : app : reviews app.kubernetes.io/managed-by : nocalhost name : reviews namespace : nh6bxsw spec : progressDeadlineSeconds : 600 replicas : 1 revisionHistoryLimit : 10 selector : matchLabels : app : reviews strategy : rollingUpdate : maxSurge : 25% maxUnavailable : 25% type : RollingUpdate template : metadata : labels : app : reviews spec : containers : - command : - /bin/sh - -c - tail -f /dev/null env : - name : LOG_DIR value : /tmp/logs # Image has been replaced by DevImage image : codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest imagePullPolicy : Always # The original reviews container, after entering the Devmode, the name # will change to nocalhost-dev name : nocalhost-dev ports : - containerPort : 9080 protocol : TCP resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /tmp name : tmp - mountPath : /opt/ibm/wlp/output name : wlp-output - mountPath : /var/syncthing name : nocalhost-syncthing subPath : syncthing - mountPath : /var/syncthing/secret name : nocalhost-syncthing-secret - mountPath : /home/nocalhost-dev name : nocalhost-shared-volume workingDir : /home/nocalhost-dev - args : - unset STGUIADDRESS && cp /var/syncthing/secret/* /var/syncthing/ && /bin/entrypoint.sh && /bin/syncthing -home /var/syncthing command : - /bin/sh - -c image : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-sidecar:syncthing imagePullPolicy : Always # nocalhost-sidecar The container, and nocalhost-dev mount the nocalhost-shared-volume volume together for file synchronization name : nocalhost-sidecar resources : limits : cpu : \"1\" memory : 1Gi requests : cpu : 100m memory : 50Mi terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /var/syncthing name : nocalhost-syncthing subPath : syncthing - mountPath : /var/syncthing/secret name : nocalhost-syncthing-secret - mountPath : /home/nocalhost-dev name : nocalhost-shared-volume workingDir : /home/nocalhost-dev dnsPolicy : ClusterFirst restartPolicy : Always schedulerName : default-scheduler securityContext : {} terminationGracePeriodSeconds : 30 volumes : - emptyDir : {} name : wlp-output - emptyDir : {} name : tmp - emptyDir : {} name : nocalhost-syncthing # syncthing volume # Mount the syncthing certificate and configuration saved in # the Secret into the nocalhost-sidecar container - name : nocalhost-syncthing-secret secret : defaultMode : 448 items : - key : config.xml mode : 448 path : config.xml - key : cert.pem mode : 448 path : cert.pem - key : key.pem mode : 448 path : key.pem secretName : reviews-deployment-nocalhost-syncthing-secret - emptyDir : {} name : nocalhost-shared-volume Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container StatefulSet The logic of StatefulSet entering the DevMode is basically the same as that of Deployment: Reduce the Pod replicate to 1 Modify manifest definition in .spec (Refer to Deployment above for specific modifications) Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container DaemonSet The process of DamonSet entering DevMode: Reduce the Pod replicate to 0, Since DaemonSet\u2019s Pod runs one on each node, there is no way to explicitly set the number of Pods. You can only set the nodeSelector to a non-existent node and indirectly change the number of Pods to 0. Use DaemonSet's .spec to generate a Deployment, modify the definition of .spec manifest in the Deployment (Refer to Deployment above for specific modifications). Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar. The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container. Job The process of Job entering DevMode: Use the job's .spec to generate a new job, modify the definition of the .spec manifest in the job (Refer to Deployment above for specific modifications) Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar. The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container. CronJob The process of CronJob entering DevMode: Set the .spec.schedule of CronJob to \"\"1 1 1 1 1\" to disable the scheduling of timed tasks Use CronJob's .spec.jobTemplate to generate a new Job and modify the definition of .spec manifest in the job (Refer to Deployment above for specific modifications) Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar. The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container. Pod The process of Pod entering DevMode: Modify the definition of .spec manifest in the Pod (Refer to Deployment above for specific modifications) Delete the original Pod and create a new Pod with the modified .spec Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar. The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container.","title":"DevMode supports for different workloads"},{"location":"eng/references/devmode-workloads/#devmode-supports-for-different-workloads","text":"Nocalhost supports to develop different common workloads. The following is the working principle of entering DevMode for different workloads","title":"DevMode supports for different workloads"},{"location":"eng/references/devmode-workloads/#deployment","text":"The main steps when Deployment enters the DevMode: Reduce the Pod replicate to 1 Modify manifest definition in .spec \uff1a Save the original .spec in annotation, used to restore the original workload when existing DevMode Modify the image of the specified container as a DevImage, and change the name of the container to nocalhost-dev Add a nocalhost-sidecar container for file synchronization Create a emptyDir type volume, mount it to the workDir directory of the nocalhost-dev and nocalhost-sidecar containers -Create a secret volume, and mount the syncthing certificate and configuration stored in the Secret into the nocalhost-sidecar container Disable all probes of the container\uff0cSecurityContext In general, the second step is to modify the manifest of the Deployment. The following uses the reviews service of bookinfo as an example to compare the manifest changes before and after the DevMode: # Before enter DevMode apiVersion : apps/v1 kind : Deployment metadata : annotations : deployment.kubernetes.io/revision : \"1\" dev.nocalhost/application-name : bookinfo dev.nocalhost/application-namespace : nh6bxsw generation : 1 labels : app : reviews app.kubernetes.io/managed-by : nocalhost name : reviews spec : progressDeadlineSeconds : 600 replicas : 1 revisionHistoryLimit : 10 selector : matchLabels : app : reviews strategy : rollingUpdate : maxSurge : 25% maxUnavailable : 25% type : RollingUpdate template : metadata : labels : app : reviews spec : containers : - env : - name : LOG_DIR value : /tmp/logs image : codingcorp-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest imagePullPolicy : Always name : reviews ports : - containerPort : 9080 protocol : TCP readinessProbe : failureThreshold : 3 initialDelaySeconds : 5 periodSeconds : 10 successThreshold : 1 tcpSocket : port : 9080 timeoutSeconds : 1 resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /tmp name : tmp - mountPath : /opt/ibm/wlp/output name : wlp-output dnsPolicy : ClusterFirst restartPolicy : Always schedulerName : default-scheduler securityContext : {} terminationGracePeriodSeconds : 30 volumes : - emptyDir : {} name : wlp-output - emptyDir : {} name : tmp # Enter DevMode apiVersion : apps/v1 kind : Deployment metadata : annotations : deployment.kubernetes.io/revision : \"2\" dev.nocalhost/application-name : bookinfo dev.nocalhost/application-namespace : nh6bxsw # The following strings used to record the definition of the workload # before entering DevMode, and to restore the workload to its original # state when exiting DevMode nocalhost.origin.spec.json : '{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"reviews\"}},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"reviews\"}},\"spec\":{\"volumes\":[{\"name\":\"wlp-output\",\"emptyDir\":{}},{\"name\":\"tmp\",\"emptyDir\":{}}],\"containers\":[{\"name\":\"reviews\",\"image\":\"codingcorp-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest\",\"ports\":[{\"containerPort\":9080,\"protocol\":\"TCP\"}],\"env\":[{\"name\":\"LOG_DIR\",\"value\":\"/tmp/logs\"}],\"resources\":{},\"volumeMounts\":[{\"name\":\"tmp\",\"mountPath\":\"/tmp\"},{\"name\":\"wlp-output\",\"mountPath\":\"/opt/ibm/wlp/output\"}],\"readinessProbe\":{\"tcpSocket\":{\"port\":9080},\"initialDelaySeconds\":5,\"timeoutSeconds\":1,\"periodSeconds\":10,\"successThreshold\":1,\"failureThreshold\":3},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"imagePullPolicy\":\"Always\"}],\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":30,\"dnsPolicy\":\"ClusterFirst\",\"securityContext\":{},\"schedulerName\":\"default-scheduler\"}},\"strategy\":{\"type\":\"RollingUpdate\",\"rollingUpdate\":{\"maxUnavailable\":\"25%\",\"maxSurge\":\"25%\"}},\"revisionHistoryLimit\":10,\"progressDeadlineSeconds\":600}' generation : 2 labels : app : reviews app.kubernetes.io/managed-by : nocalhost name : reviews namespace : nh6bxsw spec : progressDeadlineSeconds : 600 replicas : 1 revisionHistoryLimit : 10 selector : matchLabels : app : reviews strategy : rollingUpdate : maxSurge : 25% maxUnavailable : 25% type : RollingUpdate template : metadata : labels : app : reviews spec : containers : - command : - /bin/sh - -c - tail -f /dev/null env : - name : LOG_DIR value : /tmp/logs # Image has been replaced by DevImage image : codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest imagePullPolicy : Always # The original reviews container, after entering the Devmode, the name # will change to nocalhost-dev name : nocalhost-dev ports : - containerPort : 9080 protocol : TCP resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /tmp name : tmp - mountPath : /opt/ibm/wlp/output name : wlp-output - mountPath : /var/syncthing name : nocalhost-syncthing subPath : syncthing - mountPath : /var/syncthing/secret name : nocalhost-syncthing-secret - mountPath : /home/nocalhost-dev name : nocalhost-shared-volume workingDir : /home/nocalhost-dev - args : - unset STGUIADDRESS && cp /var/syncthing/secret/* /var/syncthing/ && /bin/entrypoint.sh && /bin/syncthing -home /var/syncthing command : - /bin/sh - -c image : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-sidecar:syncthing imagePullPolicy : Always # nocalhost-sidecar The container, and nocalhost-dev mount the nocalhost-shared-volume volume together for file synchronization name : nocalhost-sidecar resources : limits : cpu : \"1\" memory : 1Gi requests : cpu : 100m memory : 50Mi terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /var/syncthing name : nocalhost-syncthing subPath : syncthing - mountPath : /var/syncthing/secret name : nocalhost-syncthing-secret - mountPath : /home/nocalhost-dev name : nocalhost-shared-volume workingDir : /home/nocalhost-dev dnsPolicy : ClusterFirst restartPolicy : Always schedulerName : default-scheduler securityContext : {} terminationGracePeriodSeconds : 30 volumes : - emptyDir : {} name : wlp-output - emptyDir : {} name : tmp - emptyDir : {} name : nocalhost-syncthing # syncthing volume # Mount the syncthing certificate and configuration saved in # the Secret into the nocalhost-sidecar container - name : nocalhost-syncthing-secret secret : defaultMode : 448 items : - key : config.xml mode : 448 path : config.xml - key : cert.pem mode : 448 path : cert.pem - key : key.pem mode : 448 path : key.pem secretName : reviews-deployment-nocalhost-syncthing-secret - emptyDir : {} name : nocalhost-shared-volume Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container","title":"Deployment"},{"location":"eng/references/devmode-workloads/#statefulset","text":"The logic of StatefulSet entering the DevMode is basically the same as that of Deployment: Reduce the Pod replicate to 1 Modify manifest definition in .spec (Refer to Deployment above for specific modifications) Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container","title":"StatefulSet"},{"location":"eng/references/devmode-workloads/#daemonset","text":"The process of DamonSet entering DevMode: Reduce the Pod replicate to 0, Since DaemonSet\u2019s Pod runs one on each node, there is no way to explicitly set the number of Pods. You can only set the nodeSelector to a non-existent node and indirectly change the number of Pods to 0. Use DaemonSet's .spec to generate a Deployment, modify the definition of .spec manifest in the Deployment (Refer to Deployment above for specific modifications). Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar. The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container.","title":"DaemonSet"},{"location":"eng/references/devmode-workloads/#job","text":"The process of Job entering DevMode: Use the job's .spec to generate a new job, modify the definition of the .spec manifest in the job (Refer to Deployment above for specific modifications) Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar. The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container.","title":"Job"},{"location":"eng/references/devmode-workloads/#cronjob","text":"The process of CronJob entering DevMode: Set the .spec.schedule of CronJob to \"\"1 1 1 1 1\" to disable the scheduling of timed tasks Use CronJob's .spec.jobTemplate to generate a new Job and modify the definition of .spec manifest in the job (Refer to Deployment above for specific modifications) Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar. The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container.","title":"CronJob"},{"location":"eng/references/devmode-workloads/#pod","text":"The process of Pod entering DevMode: Modify the definition of .spec manifest in the Pod (Refer to Deployment above for specific modifications) Delete the original Pod and create a new Pod with the modified .spec Enable a port-forward and forward a random local port to the port monitored by syncthing in nocalhost-sidecar. The client running syncthing, monitors the local source directory and synchronizes the changes in the local directory to the remote container.","title":"Pod"},{"location":"eng/references/nh-config-spec/","text":"Configuration of Nocalhostpecify config properties # type: object # default value: {} # required configProperties : # config file version # type: string # default value: null # required version : v2 # env file name, substitution variable for this file # type: string # default value: null # optional envFile : env.dev application : # Application name # type: string(dns1123) # default value: null # required # nhctl param: [NAME] # uniq name : coding-agile # Application k8s manifest type # type: select\uff0coptions\uff1ahelmGit/helmRepo/rawManifest/rawManifestLocal/helmLocal # default value: null # required # nhctl param: --type,-t manifestType : rawManifest # Set default application version for helmRepo # type: string # deafult value: latest # optional helmVersion : 0.0.1 # helmGit: chart path: relative path of git repo root. # helmLocal: chart path: relative path of local helm chart path. # helmRepo: no meaning # rawManifest: manifest files path: multi relative paths of git repo root # rawManifestLocal: manifest files path: multi relative paths of local application path # kustomizeGit: kustomize file path: relative path of git repo # kustomizeLocal: kustomize file path: multi relative paths of local application path # type: string[] # default value: [\".\"] # required resourcePath : [] # helmGit: no meaning. # helmRepo: no meaning. # rawManifest: ignored manifest path: multi relative paths of git repo root. # rawManifestLocal: ignored manifest path: multi relative paths of local application path. # helmLocal: no meaning. # type: string[] # default value: [\".\"] # optional ignoredPath : [] # The jobs to be executed before application's installation. # type: object[] # default value: [] # optional onPreInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # Overwrite helm values.yaml # type: object[] # default value: [] # optional helmValues : - key : DOMAIN value : ${DOMAIN:-www.coding.com} - key : DEBUG value : ${DEBUG:-true} # Inject environment variable for all workload when installed # type: object[] # default value: [] # optional env : - name : DEBUG value : ${DEBUG:-true} - name : DOMAIN value : \"www.coding.com\" # Use envFile to inject environment variable for all workload when installed # If specify env and envFrom at the same time, then use intersection of them, and use env key as primary # type: object[] # default value: [] # optional envFrom : envFile : - path : dev.env - path : dev.env # The Applicaion's micro services # type: object[] # default value: [] # optional services : # Name of service, the name of workload in cluster # type: string # default value: null # required - name : e-coding # The Kubernetes Workloads type corresponding to the service # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset case insensitive # default value: deployment # required serviceType : deployment dependLabelSelector : # Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.) # type: string[] # default value: [] # optional pods : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.) # type: string[] # default value: [] # optional jobs : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" containers : # When the Pod has multiple containers, specify the container name. # type: string # default value: \"\" # optional - name : coding # Specify installation parameters # type: object # default value: {} # optional install : # Inject environment variable for container when installed # type: object[] # default value: [] # optional env : - name : DEBUG value : \"true\" - name : DOMAIN value : \"www.coding.com\" # Use envFile to inject environment variable for all workload when installed # If specify env and envFrom at the same time, then use intersection of them, and use env key as primary # type: object[] # default value: [] # optional envFrom : envFile : - path : dev.env - path : dev.env # Ports to be forwarded to local when workload has been installed # localPort:remotePort # type: string[] # default value: [] # optional portForward : - 3306:3306 # Specify development parameters # type: object # default value: {} # required dev : # The git repository clone url of the service # type: string # default value: null # required gitUrl : xxx-job # DevContainer Image of the micro service # type: string # default value: null # required image : java:8-jdk # The default shell of DevContainer # type: string # default value: \"/bin/sh\" # optional shell : \"bash\" # The work directory of DevContainer # type: string # default value: \"/home/nocalhost-dev\" # optional workDir : \"/root/nocalhost-dev\" # Specify reources requests and limits for DevContainer, same format to Kubernetes's resources (Not currently implemented) # type: object # default alue: {} # optional resources : limits : cpu : \"1\" memory : 1Gi requests : cpu : \"0.5\" memory : 512Mi # Storage of persistence volume # type: string # default value: null # optional storageClass : \"cbs\" # Dirs to be persisted in DevContainer # type: string[] # default value: [\"/home/nocalhost-dev\"] # optional persistentVolumeDirs : # Dir to be persisted in DevContainer # type: string # default value: null # required - path : \"/root\" # Capability of the dir # type: string # default value: 10Gi # optional capacity : 100Gi command : # Build command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional build : [ \"./gradlew\" , \"package\" ] # Run command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional run : [ \"./gradlew\" , \"bootRun\" ] # Debug command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional debug : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # Hot-reload run command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional hotReloadRun : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # Hot-reload debug command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional hotReloadDebug : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # Specify debug parameter # type: object # default value: {} # optional debug : # Specify remote debug port # type: int # default value: null # optional remoteDebugPort : 5005 # Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented) # type: string # default value: \"\" # optional useDevContainer : false # Specify file synchronization when enter dev mode # type: object # default value: {} # optional sync : # The synchronization file mode of the service (Not currently implemented) # \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization # type: select\uff0csend/sendreceive # default value: \"send\" # optional type : send # List of files and directories to be synchronized to DevContainer # type: string[] # default value: [\".\"] # optional filePattern : - \"./src\" - \"./pkg/fff\" # List of ignored files and directories to be synchronized to DevContainer # type: string[] # default value: [] # optional ignoreFilePattern : - \".git\" - \"./build\" # Specify dev mode environment parameters # type: object[] # default value: {} # optional env : - name : DEBUG value : \"true\" - name : DOMAIN value : \"www.coding.com\" # Use env file to specify dev mode environment parameters # type: object # default value: {} # optional envFrom : envFile : - path : dev.env - path : dev.env # Ports to be forwarded to local when enter devMode # localPort:remotePort # type: string[] # default value: [] # optional portForward : - 3306:3306 V1 (Deprecated) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 # Application name # type: string(dns1123) # default value: null # required # nhctl param: [NAME] # uniq name : nocalhost # Application k8s manifest type # type: select\uff0coptions\uff1ahelmGit/helmRepo/rawManifest # default value: null # required # nhctl param: --type,-t manifestType : helmGit # helmGit: chart path: relative path of git repo root. # helmRepo: no meaning # rawManifest: manifest files path: multi relative paths of git repo root # type: string[] # default value: [\".\"] # required resourcePath : [ \"deployments/chart\" ] # Install application with minimal replica size (Not currently implemented) # type: boolean # default value: false # optional # nhctl param: TODO minimalInstall : false # The jobs to be executed before application's installation. # type: object[] # default value: [] # optional onPreInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed after application's installation. (Not currently implemented) # type: object[] # default value: [] # optional onPostInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed before application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPreUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" priority : 5 # The jobs to be executed after application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPostUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The Applicaion's micro services # type: object[] # default value: [] # optional services : # Name of service, the name of workload in cluster # type: string # default value: null # required - name : service1 # The Kubernetes Workloads type corresponding to the service # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset case insensitive # default value: deployment # required serviceType : deployment # The git repository clone url of the service # type: string # default value: null # required gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # DevContainer Image of the micro service # type: string # default value: null # required devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # The default shell of DevContainer (Not currently implemented) # type: string # default value: \"/bin/sh\" # optional devContainerShell : \"bash\" # The synchronization file mode of the service (Not currently implemented) # \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization # type: select\uff0csend/sendreceive # default value: \"send\" # optional syncType : send # List of files and directories to be synchronized to DevContainer # type: string[] # default value: [\".\"] # optional syncFilePattern : - \"./src\" - \"./pkg/fff\" # List of ignored files and directories to be synchronized to DevContainer # type: string[] # default value: [] # optional ignoreFilePattern : - \".git\" - \"./build\" # Ports to be forwarded to local when enter devMode # localPort:remotePort # type: string[] # default value: [] # optional devPorts : - 8080:8080 - :8000 # random localPort, remotePort 8000 # Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.) # type: string[] # default value: [] # optional dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.) # type: string[] # default value: [] # optional dependJobsLabelSelector : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" # The work directory of DevContainer # type: string # default value: \"/home/nocalhost-dev\" # optional workDir : \"/root/nocalhost-dev\" # Dirs to be persisted in DevContainer # type: string[] # default value: [\"/home/nocalhost-dev\"] # optional persistentVolumeDirs : # Dir to be persisted in DevContainer # type: string # default value: null # required - path : \"/root\" # Capability of the dir # type: string # default value: 10Gi # optional capacity : 100Gi # Build command of the service # type: string[] # default value: [\"\"] # optional buildCommand : [ \"./gradlew\" , \"package\" ] # Run command of the service # type: string[] # default value: [\"\"] # optional runCommand : [ \"./gradlew\" , \"bootRun\" ] # Debug command of the service # type: string[] # default value: [\"\"] # optional debugCommand : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # Hot-reload run command of the service # type: string[] # default value: [\"\"] # optional hotReloadRunCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # Hot-reload debug command of the service # type: string[] # default value: [\"\"] # optional hotReloadDebugCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # Ports of remote debugging (Not currently implemented) # type: string # default value: \"\" # optional remoteDebugPort : 5005 # Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented) # type: string # default value: \"\" # optional useDevContainer : false # Specify reources requests and limits for DevContainer, same format to Kubernetes's resources (Not currently implemented) # type: object # default alue: {} # optional devContainerResources : limits : cpu : \"1\" memory : 1Gi requests : cpu : \"0.5\" memory : 512Mi - name : service2 ...","title":"Nocalhost Config Specs"},{"location":"eng/references/nh-config-spec/#configuration-of-nocalhost","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 # Specify config properties # type: object # default value: {} # required configProperties : # config file version # type: string # default value: null # required version : v2 # env file name, substitution variable for this file # type: string # default value: null # optional envFile : env.dev application : # Application name # type: string(dns1123) # default value: null # required # nhctl param: [NAME] # uniq name : coding-agile # Application k8s manifest type # type: select\uff0coptions\uff1ahelmGit/helmRepo/rawManifest/rawManifestLocal/helmLocal # default value: null # required # nhctl param: --type,-t manifestType : rawManifest # Set default application version for helmRepo # type: string # deafult value: latest # optional helmVersion : 0.0.1 # helmGit: chart path: relative path of git repo root. # helmLocal: chart path: relative path of local helm chart path. # helmRepo: no meaning # rawManifest: manifest files path: multi relative paths of git repo root # rawManifestLocal: manifest files path: multi relative paths of local application path # kustomizeGit: kustomize file path: relative path of git repo # kustomizeLocal: kustomize file path: multi relative paths of local application path # type: string[] # default value: [\".\"] # required resourcePath : [] # helmGit: no meaning. # helmRepo: no meaning. # rawManifest: ignored manifest path: multi relative paths of git repo root. # rawManifestLocal: ignored manifest path: multi relative paths of local application path. # helmLocal: no meaning. # type: string[] # default value: [\".\"] # optional ignoredPath : [] # The jobs to be executed before application's installation. # type: object[] # default value: [] # optional onPreInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # Overwrite helm values.yaml # type: object[] # default value: [] # optional helmValues : - key : DOMAIN value : ${DOMAIN:-www.coding.com} - key : DEBUG value : ${DEBUG:-true} # Inject environment variable for all workload when installed # type: object[] # default value: [] # optional env : - name : DEBUG value : ${DEBUG:-true} - name : DOMAIN value : \"www.coding.com\" # Use envFile to inject environment variable for all workload when installed # If specify env and envFrom at the same time, then use intersection of them, and use env key as primary # type: object[] # default value: [] # optional envFrom : envFile : - path : dev.env - path : dev.env # The Applicaion's micro services # type: object[] # default value: [] # optional services : # Name of service, the name of workload in cluster # type: string # default value: null # required - name : e-coding # The Kubernetes Workloads type corresponding to the service # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset case insensitive # default value: deployment # required serviceType : deployment dependLabelSelector : # Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.) # type: string[] # default value: [] # optional pods : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.) # type: string[] # default value: [] # optional jobs : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" containers : # When the Pod has multiple containers, specify the container name. # type: string # default value: \"\" # optional - name : coding # Specify installation parameters # type: object # default value: {} # optional install : # Inject environment variable for container when installed # type: object[] # default value: [] # optional env : - name : DEBUG value : \"true\" - name : DOMAIN value : \"www.coding.com\" # Use envFile to inject environment variable for all workload when installed # If specify env and envFrom at the same time, then use intersection of them, and use env key as primary # type: object[] # default value: [] # optional envFrom : envFile : - path : dev.env - path : dev.env # Ports to be forwarded to local when workload has been installed # localPort:remotePort # type: string[] # default value: [] # optional portForward : - 3306:3306 # Specify development parameters # type: object # default value: {} # required dev : # The git repository clone url of the service # type: string # default value: null # required gitUrl : xxx-job # DevContainer Image of the micro service # type: string # default value: null # required image : java:8-jdk # The default shell of DevContainer # type: string # default value: \"/bin/sh\" # optional shell : \"bash\" # The work directory of DevContainer # type: string # default value: \"/home/nocalhost-dev\" # optional workDir : \"/root/nocalhost-dev\" # Specify reources requests and limits for DevContainer, same format to Kubernetes's resources (Not currently implemented) # type: object # default alue: {} # optional resources : limits : cpu : \"1\" memory : 1Gi requests : cpu : \"0.5\" memory : 512Mi # Storage of persistence volume # type: string # default value: null # optional storageClass : \"cbs\" # Dirs to be persisted in DevContainer # type: string[] # default value: [\"/home/nocalhost-dev\"] # optional persistentVolumeDirs : # Dir to be persisted in DevContainer # type: string # default value: null # required - path : \"/root\" # Capability of the dir # type: string # default value: 10Gi # optional capacity : 100Gi command : # Build command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional build : [ \"./gradlew\" , \"package\" ] # Run command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional run : [ \"./gradlew\" , \"bootRun\" ] # Debug command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional debug : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # Hot-reload run command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional hotReloadRun : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # Hot-reload debug command of the service(Not currently implemented) # type: string[] # default value: [\"\"] # optional hotReloadDebug : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # Specify debug parameter # type: object # default value: {} # optional debug : # Specify remote debug port # type: int # default value: null # optional remoteDebugPort : 5005 # Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented) # type: string # default value: \"\" # optional useDevContainer : false # Specify file synchronization when enter dev mode # type: object # default value: {} # optional sync : # The synchronization file mode of the service (Not currently implemented) # \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization # type: select\uff0csend/sendreceive # default value: \"send\" # optional type : send # List of files and directories to be synchronized to DevContainer # type: string[] # default value: [\".\"] # optional filePattern : - \"./src\" - \"./pkg/fff\" # List of ignored files and directories to be synchronized to DevContainer # type: string[] # default value: [] # optional ignoreFilePattern : - \".git\" - \"./build\" # Specify dev mode environment parameters # type: object[] # default value: {} # optional env : - name : DEBUG value : \"true\" - name : DOMAIN value : \"www.coding.com\" # Use env file to specify dev mode environment parameters # type: object # default value: {} # optional envFrom : envFile : - path : dev.env - path : dev.env # Ports to be forwarded to local when enter devMode # localPort:remotePort # type: string[] # default value: [] # optional portForward : - 3306:3306","title":"Configuration of Nocalhost"},{"location":"eng/references/nh-config-spec/#v1-deprecated","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 # Application name # type: string(dns1123) # default value: null # required # nhctl param: [NAME] # uniq name : nocalhost # Application k8s manifest type # type: select\uff0coptions\uff1ahelmGit/helmRepo/rawManifest # default value: null # required # nhctl param: --type,-t manifestType : helmGit # helmGit: chart path: relative path of git repo root. # helmRepo: no meaning # rawManifest: manifest files path: multi relative paths of git repo root # type: string[] # default value: [\".\"] # required resourcePath : [ \"deployments/chart\" ] # Install application with minimal replica size (Not currently implemented) # type: boolean # default value: false # optional # nhctl param: TODO minimalInstall : false # The jobs to be executed before application's installation. # type: object[] # default value: [] # optional onPreInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed after application's installation. (Not currently implemented) # type: object[] # default value: [] # optional onPostInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed before application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPreUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" priority : 5 # The jobs to be executed after application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPostUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The Applicaion's micro services # type: object[] # default value: [] # optional services : # Name of service, the name of workload in cluster # type: string # default value: null # required - name : service1 # The Kubernetes Workloads type corresponding to the service # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset case insensitive # default value: deployment # required serviceType : deployment # The git repository clone url of the service # type: string # default value: null # required gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # DevContainer Image of the micro service # type: string # default value: null # required devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # The default shell of DevContainer (Not currently implemented) # type: string # default value: \"/bin/sh\" # optional devContainerShell : \"bash\" # The synchronization file mode of the service (Not currently implemented) # \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization # type: select\uff0csend/sendreceive # default value: \"send\" # optional syncType : send # List of files and directories to be synchronized to DevContainer # type: string[] # default value: [\".\"] # optional syncFilePattern : - \"./src\" - \"./pkg/fff\" # List of ignored files and directories to be synchronized to DevContainer # type: string[] # default value: [] # optional ignoreFilePattern : - \".git\" - \"./build\" # Ports to be forwarded to local when enter devMode # localPort:remotePort # type: string[] # default value: [] # optional devPorts : - 8080:8080 - :8000 # random localPort, remotePort 8000 # Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.) # type: string[] # default value: [] # optional dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.) # type: string[] # default value: [] # optional dependJobsLabelSelector : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" # The work directory of DevContainer # type: string # default value: \"/home/nocalhost-dev\" # optional workDir : \"/root/nocalhost-dev\" # Dirs to be persisted in DevContainer # type: string[] # default value: [\"/home/nocalhost-dev\"] # optional persistentVolumeDirs : # Dir to be persisted in DevContainer # type: string # default value: null # required - path : \"/root\" # Capability of the dir # type: string # default value: 10Gi # optional capacity : 100Gi # Build command of the service # type: string[] # default value: [\"\"] # optional buildCommand : [ \"./gradlew\" , \"package\" ] # Run command of the service # type: string[] # default value: [\"\"] # optional runCommand : [ \"./gradlew\" , \"bootRun\" ] # Debug command of the service # type: string[] # default value: [\"\"] # optional debugCommand : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # Hot-reload run command of the service # type: string[] # default value: [\"\"] # optional hotReloadRunCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # Hot-reload debug command of the service # type: string[] # default value: [\"\"] # optional hotReloadDebugCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # Ports of remote debugging (Not currently implemented) # type: string # default value: \"\" # optional remoteDebugPort : 5005 # Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented) # type: string # default value: \"\" # optional useDevContainer : false # Specify reources requests and limits for DevContainer, same format to Kubernetes's resources (Not currently implemented) # type: object # default alue: {} # optional devContainerResources : limits : cpu : \"1\" memory : 1Gi requests : cpu : \"0.5\" memory : 512Mi - name : service2 ...","title":"V1 (Deprecated)"},{"location":"eng/references/php-debug/","text":"Remote Debugging of PHP Application Note Gold : Use Nocalhost to debugging PHP application Estimate time : 3 minutes Requirements : - PhpStorm installed - Nocalhost IDE plugin installed 1. Config Remote Debug Command and Port Open PhpStorm and Nocalhost JetBrains plugin Select the workload you want to debug, right click and select Config Configure the remote debug command and port service : containers : dev : command : debug : - ./debug.sh debug : remoteDebugPort : 9003 ... We are using the default debug port 9003 of Xdebug. 2. Enter Development Mode Start the development mode 3. Add Configuration Add Nocalhost debug configuration 4. Set Break Point and Debug Set the break point and start debugging How it Works? Nocalhost using Xdebug to debug PHP application.","title":"Remote Debug PHP Application"},{"location":"eng/references/php-debug/#remote-debugging-of-php-application","text":"Note Gold : Use Nocalhost to debugging PHP application Estimate time : 3 minutes Requirements : - PhpStorm installed - Nocalhost IDE plugin installed","title":"Remote Debugging of PHP Application"},{"location":"eng/references/php-debug/#1-config-remote-debug-command-and-port","text":"Open PhpStorm and Nocalhost JetBrains plugin Select the workload you want to debug, right click and select Config Configure the remote debug command and port service : containers : dev : command : debug : - ./debug.sh debug : remoteDebugPort : 9003 ... We are using the default debug port 9003 of Xdebug.","title":"1. Config Remote Debug Command and Port"},{"location":"eng/references/php-debug/#2-enter-development-mode","text":"Start the development mode","title":"2. Enter Development Mode"},{"location":"eng/references/php-debug/#3-add-configuration","text":"Add Nocalhost debug configuration","title":"3. Add Configuration"},{"location":"eng/references/php-debug/#4-set-break-point-and-debug","text":"Set the break point and start debugging","title":"4. Set Break Point and Debug"},{"location":"eng/references/php-debug/#how-it-works","text":"Nocalhost using Xdebug to debug PHP application.","title":"How it Works?"},{"location":"eng/server/deployment/","text":"","title":"Deployment"},{"location":"eng/server/overview/","text":"","title":"Overview"},{"location":"eng/server/quick-start/","text":"","title":"Quick Start"},{"location":"eng/server/using-server/","text":"","title":"Using Nocalhost Server"},{"location":"zh/core-concept/","text":"\u5728\u672c\u6587\u6863\u4e2d\uff0c\u6211\u4eec\u5c06\u89e3\u91ca Nocalhost \u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u5e76\u9610\u660e\u5728\u6b64\u9879\u76ee\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u4e9b\u6280\u672f\u672f\u8bed\u3002 Cluster Cluster\uff08\u96c6\u7fa4\uff09 \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u7ba1\u7406\u8fd0\u884c\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\uff0c\u901a\u5e38\u5bf9\u5e94\u7740\u4e00\u4e2a Kubernetes \u96c6\u7fa4\u3002Nocalhost \u652f\u6301\u540c\u65f6\u7ba1\u7406\u591a\u4e2a Cluster \uff0c\u8fd9\u4e9b\u96c6\u7fa4\u53ef\u4ee5\u662f GKE, minikube and microK8s \u7b49\u7b49\u3002 \u5728\u5b9e\u9645\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u4e0d\u9700\u8981\u76f4\u63a5\u63a5\u89e6 Cluster \u8fd9\u4e00\u6982\u5ff5\uff0c\u800c\u7528\u6237\u5728 DevSpace \u4e0b\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u90fd\u501f\u52a9\u4e86 Cluster \u7684\u80fd\u529b\u3002 \u7ba1\u7406 Cluster Cluster \u4e00\u822c\u4e0e DevSpace \u914d\u5408\u4f7f\u7528\uff0c\u5982\u679c\u9700\u8981\u7ba1\u7406 Cluster\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5e76\u914d\u7f6e Nocalhost Server\uff0c\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002 \u7ba1\u7406 Cluster \u5982\u679c\u8981\u7ba1\u7406\u4e00\u4e2a Cluster\uff0c\u9700\u8981\u7ef4\u6301\u4e00\u4efd\u62e5\u6709\u8fd9\u4e2a\u96c6\u7fa4\u7ba1\u7406\u5458\u6743\u9650\u7684 kubeConfig \u624d\u80fd\u5728 Nocalhost \u4e2d\u8fdb\u884c\u7ba1\u7406\u3002 DevSpace DevSpace\uff08\u5f00\u53d1\u7a7a\u95f4\uff09 \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5176\u4ee3\u8868\u7531 Nocalhost \u7ba1\u7406\u7684\u4e00\u4e2a\u9884\u5206\u914d\u7684\u4e91\u7aef\u5f00\u53d1\u7684\u7a7a\u95f4\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevSpace \u4e2d\u968f\u65f6\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002 DevSpace \u4e4b\u95f4\u662f\u9694\u79bb\u7684\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u628a\u81ea\u5df1\u7684 DevSpace \u5171\u4eab\u7ed9\u5176\u4ed6\u5f00\u53d1\u8005\uff0c\u5b9e\u73b0\u5f00\u53d1\u534f\u4f5c\u3002\u56e0\u4e3a DevSpace \u7684\u9694\u79bb\u6027\uff0c\u4e5f\u53ef\u4ee5\u88ab\u7528\u4f5c\u6d4b\u8bd5\u73af\u5883\u3002 \u5f53\u524d\uff0cNocalhost \u652f\u6301\u57fa\u4e8e Kubernetes \u7684\u4e91\u539f\u751f\u5e94\u7528\u5f00\u53d1\uff0c\u5728 Kubernetes \u4f53\u7cfb\u4e0b\uff0c DevSpace \u7531\u4e00\u4e2a Kubernetes Namespace \u548c \u5bf9\u5e94 Namespace \u7684 ServiceAccount \u7ec4\u6210\u3002 \u7ba1\u7406 DevSpace \u5982\u679c\u9700\u8981\u7ba1\u7406 DevSpace\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5e76\u914d\u7f6e Nocalhost Server\uff0c\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002 Application\uff08\u5e94\u7528\uff09 Application \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u60a8\u60f3\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u7684\u4e00\u7ec4 manifest \u6587\u4ef6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b manifest \u901a\u5e38\u5305\u542b\u4f60\u7684\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u6240\u6709 k8s \u8d44\u6e90\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u5b83\u7684\u6700\u5c0f\u5316\u3002 Nocalhost \u652f\u6301\u4e09\u79cd\u7c7b\u578b\u7684\u5e94\u7528\uff1a Manifest Helm Kustomize Application \u4e5f\u662f\u8fd9\u6837\u88ab\u4f7f\u7528\u7684\uff0c DevSpace \u5176\u5b9e\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5c Application + kubeconfig \uff1a Application \u7ba1\u7406 \u5982\u679c\u9700\u8981\u7ba1\u7406 Application\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5e76\u914d\u7f6e Nocalhost Server\uff0c\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002 Application \u914d\u7f6e \u53ef\u53c2\u8003 Application \u6700\u4f73\u5b9e\u8df5 \u3002 Service Service \u4e0e kubernetes \u7684 Service \u5b8c\u5168\u4e0d\u540c\uff0c Service \u53ef\u4ee5\u8ba4\u4e3a\u662f\u5bf9 Deployment \u7684\u589e\u5f3a\uff0c\u5bf9\u5e94\u5e94\u7528\u5185\u7684\u4e00\u4e2a\u5177\u4f53\u670d\u52a1\uff0c Service \u76ee\u524d\u652f\u6301\u4e24\u79cd\u529f\u80fd\uff1a \u5bf9 Nocalhost Dev-Mode \u7684\u914d\u7f6e\uff0c\u4f8b\u5982\u8fdb\u5165\u5f00\u53d1\u5bb9\u5668\u540e\u7684\u5de5\u4f5c\u7a7a\u95f4\u662f\u54ea\u4e2a\uff0c\u5c06\u54ea\u4e9b\u6587\u4ef6\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u7b49\u3002 \u652f\u6301\u57fa\u4e8e\u4f9d\u8d56\u5173\u7cfb\u7684 deployment \u542f\u52a8\u987a\u5e8f\u63a7\u5236 \u914d\u7f6e Service \u53ef\u53c2\u8003 Service \u6700\u4f73\u5b9e\u8df5 \u3002 Note Service \u914d\u7f6e\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff01\u5b8c\u5168\u4e0d\u8fdb\u884c\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u7167\u5e38\u521b\u5efa Application \u3001 Cluster \u7b49\u7b49\uff0c Service \u53ea\u5728\u4f60\u6709\u9700\u8981\u65f6\u624d\u9700\u8981\u914d\u7f6e\u3002 User \u5f53\u4f60\u4f7f\u7528 Nocalhost Server\uff0c\u4ee5\u53ca Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u65f6\uff0c User \u7528\u4e8e\u6807\u660e\u4f60\u7684\u8eab\u4efd\uff0c\u4ee5\u53ca\u5bf9\u8d44\u6e90\u8bbf\u95ee\u7684\u63a7\u5236\u3002\u8fd9\u4e2a User \u5c5e\u4e8e Nocalhost \u7684\u72ec\u7acb\u6982\u5ff5\uff0c\u4e0e Kubernetes \u672c\u8eab\u5e76**\u65e0\u5173\u8054**\u3002 Nocalhost \u4e3a\u6bcf\u4e2a User \u521b\u5efa\u548c\u4e00\u4e2a DevSpace \u76f8\u5bf9\u5e94\u7684 namespace \u7684 kubeconfig\uff0c\u7528\u4e8e\u8bbf\u95ee\u6b64 namespace \u4e0b\u7684\u6240\u6709\u8d44\u6e90 Nocalhost \u4e2d\u5b58\u5728\u4e24\u79cd User \u7c7b\u578b\uff1a \u666e\u901a\u7528\u6237**\u548c**\u7cfb\u7edf\u7ba1\u7406\u5458 \u666e\u901a\u7528\u6237 \u53ea\u80fd\u5728 Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u4e2d\u8fdb\u884c\u767b\u5f55\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u81ea\u5df1\u7684 DevSpace \u4e0b\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4e9b DevSpace \u90fd\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\u8fdb\u884c\u521b\u5efa\u3002 \u53ea\u80fd\u770b\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684 DevSpace\uff0c\u5e76\u4e14\u62e5\u6709\u8fd9\u4e9b DevSpace \u4e0b\u7684\u6240\u6709\u6743\u9650\uff0c\u4f8b\u5982\u5bf9 DevSpace \u4e0b\u76f8\u5e94 Application \u7684 install \u548c unInstall\uff08\u90e8\u7f72\u4e0e\u9500\u6bc1\uff09\u3001\u53ef\u4ee5\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u3001\u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1\u7b49\u3002 \u65e0\u6cd5\u8bbf\u95ee Nocalhost Server\uff0c\u4e5f\u65e0\u6cd5\u5220\u9664\u8fd9\u4e2a DevSpace \u672c\u8eab\uff0c\u6216\u8005\u4e0e\u8fd9\u4e2a DevSpace \u89e3\u9664\u5173\u7cfb\uff0c\u8fd9\u5f88\u50cf Kubernetes \u67d0\u4e2a namespace \u4e0b\u7684\u7ba1\u7406\u5458\u6743\u9650 \u7cfb\u7edf\u7ba1\u7406\u5458 \u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u8bbf\u95ee\u548c\u7ba1\u7406 Nocalhost Server \u4e2d\u6240\u6709\u8d44\u6e90\u7684\u6743\u9650\uff0c\u5982\u521b\u5efa Application \u3001\u521b\u5efa Cluster \u3001\u521b\u5efa User \u548c\u521b\u5efa DevSpace \u7b49\uff0c\u4f8b\u5982\u521d\u59cb\u7684 admin \u7528\u6237\u3002 \u7cfb\u7edf\u7ba1\u7406\u5458\u4e5f\u62e5\u6709\u666e\u901a\u7528\u6237\u6240\u6709\u7684\u6743\u9650\uff0c\u5982\u53ef\u4ee5\u5728 Nocalhost \u63d2\u4ef6\u8fdb\u884c\u767b\u5f55\uff0c\u83b7\u53d6\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u8fdb\u884c\u5f00\u53d1\u3002 \u7ba1\u7406 User \u5982\u679c\u9700\u8981\u7ba1\u7406 User\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5e76\u914d\u7f6e Nocalhost Server\uff0c\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002 DevMode DevMode\uff08\u5f00\u53d1\u6a21\u5f0f\uff09 \u662f\u6307\u5f00\u53d1\u8005\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5fae\u670d\u52a1\u5f00\u53d1\u65f6\uff0c\u5bf9\u5e94\u5fae\u670d\u52a1\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u5728\u6b64\u72b6\u6001\u4e0b\uff0c\u5de5\u4f5c\u8d1f\u8f7d\u4f1a\u88ab\u8f6c\u6210\u6210\u4e00\u79cd\u53ef\u65b9\u4fbf\u652f\u6301\u5f00\u53d1\u8005\u5f00\u53d1\u8c03\u8bd5\u7a0b\u5e8f\u7684\u6a21\u5f0f\u3002 \u5f53\u524d Nocalhost \u57fa\u4e8e Kubernetes \u7684\u5f00\u53d1\u652f\u6301\u4e2d\uff0cDevMode \u7684\u4e3b\u8981\u53d8\u5316\u4e3a\u5982\u4e0b\uff1a \u5de5\u4f5c\u8d1f\u8f7d\u7684\u526f\u672c\u6570\u91cf\u4f1a\u88ab\u8c03\u6574\u4e3a 1\uff0c\u65b9\u4fbf\u5f00\u53d1 Pod \u7684\u5065\u5eb7\u68c0\u67e5\u63a2\u9488\u4f1a\u88ab\u7981\u7528\uff08\u65b9\u4fbf\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5c1d\u8bd5\u91cd\u542f\u8fdb\u7a0b\u8fdb\u884c\u8c03\u8bd5\uff09 Pod \u7684\u5bb9\u5668\u4f1a\u88ab\u66ff\u6362\u6210 DevContainer SecurityContext \u4f1a\u88ab\u7981\u7528\u4ee5\u65b9\u4fbf\u5f00\u53d1 Pod \u4f1a\u88ab\u6ce8\u5165\u4e00\u4e2a Nocalhost-Sidecar \u5bb9\u5668\u4ee5\u652f\u6301\u8fdc\u7a0b\u6587\u4ef6\u540c\u6b65\u7b49 Pod \u4f1a\u88ab\u589e\u52a0\u4e00\u4e2a Volume \u4ee5\u652f\u6301 DevContainer \u548c Nocalhost-Sidecar \u95f4\u5171\u4eab\u6587\u4ef6 DevContainer DevContainer\uff08\u5f00\u53d1\u5bb9\u5668\uff09 \u662f\u4e00\u4e2a\u7528\u6237\u652f\u6491\u5f00\u53d1\u3001\u8c03\u8bd5\u67d0\u4e2a\u7279\u5b9a\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u57fa\u7840\u73af\u5883\uff0c\u6b64\u73af\u5883\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u5185\u5e38\u542b\u6709\u5f00\u53d1\u8be5\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u5168\u5957 SDK\uff0c\u5f00\u53d1\u8c03\u8bd5\u5de5\u5177\uff0c\u4ee5\u53ca\u5176\u4ed6\u8f85\u52a9\u5de5\u5177\u3002\u5728\u670d\u52a1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u88ab\u5207\u6362\u5230 DevMode \u7684\u65f6\u5019\uff0cNocalhost \u4f1a\u4f7f\u7528 DevContainer \u66ff\u6362\u539f\u672c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u5668\u3002 DevContainer \u7684\u751f\u547d\u5468\u671f\u8d2f\u7a7f\u6574\u4e2a\u5f00\u53d1\u548c\u8c03\u8bd5\u8fc7\u7a0b\u3002 \u5b83\u5728 DevMode \u5f00\u59cb\u65f6\u521b\u5efa\u3002\u5728 DevMode \u4e2d\uff0c\u672c\u5730\u6e90\u4ee3\u7801\u66f4\u6539\u5c06\u81ea\u52a8\u540c\u6b65\u5230 DevContainer\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u7f16\u8bd1\u5e76\u90e8\u7f72\u5728 DevContainer \u5bb9\u5668\u4e2d\u3002 \u914d\u7f6e DevContainer \u53ef\u53c2\u8003 DevContainer \u6700\u4f73\u5b9e\u8df5 \u3002","title":"\u6838\u5fc3\u6982\u5ff5"},{"location":"zh/core-concept/#cluster","text":"Cluster\uff08\u96c6\u7fa4\uff09 \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u7ba1\u7406\u8fd0\u884c\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\uff0c\u901a\u5e38\u5bf9\u5e94\u7740\u4e00\u4e2a Kubernetes \u96c6\u7fa4\u3002Nocalhost \u652f\u6301\u540c\u65f6\u7ba1\u7406\u591a\u4e2a Cluster \uff0c\u8fd9\u4e9b\u96c6\u7fa4\u53ef\u4ee5\u662f GKE, minikube and microK8s \u7b49\u7b49\u3002 \u5728\u5b9e\u9645\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u4e0d\u9700\u8981\u76f4\u63a5\u63a5\u89e6 Cluster \u8fd9\u4e00\u6982\u5ff5\uff0c\u800c\u7528\u6237\u5728 DevSpace \u4e0b\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u90fd\u501f\u52a9\u4e86 Cluster \u7684\u80fd\u529b\u3002","title":"Cluster"},{"location":"zh/core-concept/#cluster_1","text":"Cluster \u4e00\u822c\u4e0e DevSpace \u914d\u5408\u4f7f\u7528\uff0c\u5982\u679c\u9700\u8981\u7ba1\u7406 Cluster\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5e76\u914d\u7f6e Nocalhost Server\uff0c\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002 \u7ba1\u7406 Cluster \u5982\u679c\u8981\u7ba1\u7406\u4e00\u4e2a Cluster\uff0c\u9700\u8981\u7ef4\u6301\u4e00\u4efd\u62e5\u6709\u8fd9\u4e2a\u96c6\u7fa4\u7ba1\u7406\u5458\u6743\u9650\u7684 kubeConfig \u624d\u80fd\u5728 Nocalhost \u4e2d\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u7ba1\u7406 Cluster"},{"location":"zh/core-concept/#devspace","text":"DevSpace\uff08\u5f00\u53d1\u7a7a\u95f4\uff09 \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5176\u4ee3\u8868\u7531 Nocalhost \u7ba1\u7406\u7684\u4e00\u4e2a\u9884\u5206\u914d\u7684\u4e91\u7aef\u5f00\u53d1\u7684\u7a7a\u95f4\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevSpace \u4e2d\u968f\u65f6\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002 DevSpace \u4e4b\u95f4\u662f\u9694\u79bb\u7684\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u628a\u81ea\u5df1\u7684 DevSpace \u5171\u4eab\u7ed9\u5176\u4ed6\u5f00\u53d1\u8005\uff0c\u5b9e\u73b0\u5f00\u53d1\u534f\u4f5c\u3002\u56e0\u4e3a DevSpace \u7684\u9694\u79bb\u6027\uff0c\u4e5f\u53ef\u4ee5\u88ab\u7528\u4f5c\u6d4b\u8bd5\u73af\u5883\u3002 \u5f53\u524d\uff0cNocalhost \u652f\u6301\u57fa\u4e8e Kubernetes \u7684\u4e91\u539f\u751f\u5e94\u7528\u5f00\u53d1\uff0c\u5728 Kubernetes \u4f53\u7cfb\u4e0b\uff0c DevSpace \u7531\u4e00\u4e2a Kubernetes Namespace \u548c \u5bf9\u5e94 Namespace \u7684 ServiceAccount \u7ec4\u6210\u3002","title":"DevSpace"},{"location":"zh/core-concept/#devspace_1","text":"\u5982\u679c\u9700\u8981\u7ba1\u7406 DevSpace\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5e76\u914d\u7f6e Nocalhost Server\uff0c\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002","title":"\u7ba1\u7406 DevSpace"},{"location":"zh/core-concept/#application","text":"Application \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u60a8\u60f3\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u7684\u4e00\u7ec4 manifest \u6587\u4ef6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b manifest \u901a\u5e38\u5305\u542b\u4f60\u7684\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u6240\u6709 k8s \u8d44\u6e90\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u5b83\u7684\u6700\u5c0f\u5316\u3002 Nocalhost \u652f\u6301\u4e09\u79cd\u7c7b\u578b\u7684\u5e94\u7528\uff1a Manifest Helm Kustomize Application \u4e5f\u662f\u8fd9\u6837\u88ab\u4f7f\u7528\u7684\uff0c DevSpace \u5176\u5b9e\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5c Application + kubeconfig \uff1a","title":"Application\uff08\u5e94\u7528\uff09"},{"location":"zh/core-concept/#application_1","text":"\u5982\u679c\u9700\u8981\u7ba1\u7406 Application\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5e76\u914d\u7f6e Nocalhost Server\uff0c\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002","title":"Application \u7ba1\u7406"},{"location":"zh/core-concept/#application_2","text":"\u53ef\u53c2\u8003 Application \u6700\u4f73\u5b9e\u8df5 \u3002","title":"Application \u914d\u7f6e"},{"location":"zh/core-concept/#service","text":"Service \u4e0e kubernetes \u7684 Service \u5b8c\u5168\u4e0d\u540c\uff0c Service \u53ef\u4ee5\u8ba4\u4e3a\u662f\u5bf9 Deployment \u7684\u589e\u5f3a\uff0c\u5bf9\u5e94\u5e94\u7528\u5185\u7684\u4e00\u4e2a\u5177\u4f53\u670d\u52a1\uff0c Service \u76ee\u524d\u652f\u6301\u4e24\u79cd\u529f\u80fd\uff1a \u5bf9 Nocalhost Dev-Mode \u7684\u914d\u7f6e\uff0c\u4f8b\u5982\u8fdb\u5165\u5f00\u53d1\u5bb9\u5668\u540e\u7684\u5de5\u4f5c\u7a7a\u95f4\u662f\u54ea\u4e2a\uff0c\u5c06\u54ea\u4e9b\u6587\u4ef6\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u7b49\u3002 \u652f\u6301\u57fa\u4e8e\u4f9d\u8d56\u5173\u7cfb\u7684 deployment \u542f\u52a8\u987a\u5e8f\u63a7\u5236","title":"Service"},{"location":"zh/core-concept/#service_1","text":"\u53ef\u53c2\u8003 Service \u6700\u4f73\u5b9e\u8df5 \u3002 Note Service \u914d\u7f6e\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff01\u5b8c\u5168\u4e0d\u8fdb\u884c\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u7167\u5e38\u521b\u5efa Application \u3001 Cluster \u7b49\u7b49\uff0c Service \u53ea\u5728\u4f60\u6709\u9700\u8981\u65f6\u624d\u9700\u8981\u914d\u7f6e\u3002","title":"\u914d\u7f6e Service"},{"location":"zh/core-concept/#user","text":"\u5f53\u4f60\u4f7f\u7528 Nocalhost Server\uff0c\u4ee5\u53ca Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u65f6\uff0c User \u7528\u4e8e\u6807\u660e\u4f60\u7684\u8eab\u4efd\uff0c\u4ee5\u53ca\u5bf9\u8d44\u6e90\u8bbf\u95ee\u7684\u63a7\u5236\u3002\u8fd9\u4e2a User \u5c5e\u4e8e Nocalhost \u7684\u72ec\u7acb\u6982\u5ff5\uff0c\u4e0e Kubernetes \u672c\u8eab\u5e76**\u65e0\u5173\u8054**\u3002 Nocalhost \u4e3a\u6bcf\u4e2a User \u521b\u5efa\u548c\u4e00\u4e2a DevSpace \u76f8\u5bf9\u5e94\u7684 namespace \u7684 kubeconfig\uff0c\u7528\u4e8e\u8bbf\u95ee\u6b64 namespace \u4e0b\u7684\u6240\u6709\u8d44\u6e90 Nocalhost \u4e2d\u5b58\u5728\u4e24\u79cd User \u7c7b\u578b\uff1a \u666e\u901a\u7528\u6237**\u548c**\u7cfb\u7edf\u7ba1\u7406\u5458","title":"User"},{"location":"zh/core-concept/#_1","text":"\u53ea\u80fd\u5728 Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u4e2d\u8fdb\u884c\u767b\u5f55\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u81ea\u5df1\u7684 DevSpace \u4e0b\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4e9b DevSpace \u90fd\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\u8fdb\u884c\u521b\u5efa\u3002 \u53ea\u80fd\u770b\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684 DevSpace\uff0c\u5e76\u4e14\u62e5\u6709\u8fd9\u4e9b DevSpace \u4e0b\u7684\u6240\u6709\u6743\u9650\uff0c\u4f8b\u5982\u5bf9 DevSpace \u4e0b\u76f8\u5e94 Application \u7684 install \u548c unInstall\uff08\u90e8\u7f72\u4e0e\u9500\u6bc1\uff09\u3001\u53ef\u4ee5\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u3001\u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1\u7b49\u3002 \u65e0\u6cd5\u8bbf\u95ee Nocalhost Server\uff0c\u4e5f\u65e0\u6cd5\u5220\u9664\u8fd9\u4e2a DevSpace \u672c\u8eab\uff0c\u6216\u8005\u4e0e\u8fd9\u4e2a DevSpace \u89e3\u9664\u5173\u7cfb\uff0c\u8fd9\u5f88\u50cf Kubernetes \u67d0\u4e2a namespace \u4e0b\u7684\u7ba1\u7406\u5458\u6743\u9650","title":"\u666e\u901a\u7528\u6237"},{"location":"zh/core-concept/#_2","text":"\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u8bbf\u95ee\u548c\u7ba1\u7406 Nocalhost Server \u4e2d\u6240\u6709\u8d44\u6e90\u7684\u6743\u9650\uff0c\u5982\u521b\u5efa Application \u3001\u521b\u5efa Cluster \u3001\u521b\u5efa User \u548c\u521b\u5efa DevSpace \u7b49\uff0c\u4f8b\u5982\u521d\u59cb\u7684 admin \u7528\u6237\u3002 \u7cfb\u7edf\u7ba1\u7406\u5458\u4e5f\u62e5\u6709\u666e\u901a\u7528\u6237\u6240\u6709\u7684\u6743\u9650\uff0c\u5982\u53ef\u4ee5\u5728 Nocalhost \u63d2\u4ef6\u8fdb\u884c\u767b\u5f55\uff0c\u83b7\u53d6\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u7cfb\u7edf\u7ba1\u7406\u5458"},{"location":"zh/core-concept/#user_1","text":"\u5982\u679c\u9700\u8981\u7ba1\u7406 User\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5e76\u914d\u7f6e Nocalhost Server\uff0c\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002","title":"\u7ba1\u7406 User"},{"location":"zh/core-concept/#devmode","text":"DevMode\uff08\u5f00\u53d1\u6a21\u5f0f\uff09 \u662f\u6307\u5f00\u53d1\u8005\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5fae\u670d\u52a1\u5f00\u53d1\u65f6\uff0c\u5bf9\u5e94\u5fae\u670d\u52a1\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u5728\u6b64\u72b6\u6001\u4e0b\uff0c\u5de5\u4f5c\u8d1f\u8f7d\u4f1a\u88ab\u8f6c\u6210\u6210\u4e00\u79cd\u53ef\u65b9\u4fbf\u652f\u6301\u5f00\u53d1\u8005\u5f00\u53d1\u8c03\u8bd5\u7a0b\u5e8f\u7684\u6a21\u5f0f\u3002 \u5f53\u524d Nocalhost \u57fa\u4e8e Kubernetes \u7684\u5f00\u53d1\u652f\u6301\u4e2d\uff0cDevMode \u7684\u4e3b\u8981\u53d8\u5316\u4e3a\u5982\u4e0b\uff1a \u5de5\u4f5c\u8d1f\u8f7d\u7684\u526f\u672c\u6570\u91cf\u4f1a\u88ab\u8c03\u6574\u4e3a 1\uff0c\u65b9\u4fbf\u5f00\u53d1 Pod \u7684\u5065\u5eb7\u68c0\u67e5\u63a2\u9488\u4f1a\u88ab\u7981\u7528\uff08\u65b9\u4fbf\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5c1d\u8bd5\u91cd\u542f\u8fdb\u7a0b\u8fdb\u884c\u8c03\u8bd5\uff09 Pod \u7684\u5bb9\u5668\u4f1a\u88ab\u66ff\u6362\u6210 DevContainer SecurityContext \u4f1a\u88ab\u7981\u7528\u4ee5\u65b9\u4fbf\u5f00\u53d1 Pod \u4f1a\u88ab\u6ce8\u5165\u4e00\u4e2a Nocalhost-Sidecar \u5bb9\u5668\u4ee5\u652f\u6301\u8fdc\u7a0b\u6587\u4ef6\u540c\u6b65\u7b49 Pod \u4f1a\u88ab\u589e\u52a0\u4e00\u4e2a Volume \u4ee5\u652f\u6301 DevContainer \u548c Nocalhost-Sidecar \u95f4\u5171\u4eab\u6587\u4ef6","title":"DevMode"},{"location":"zh/core-concept/#devcontainer","text":"DevContainer\uff08\u5f00\u53d1\u5bb9\u5668\uff09 \u662f\u4e00\u4e2a\u7528\u6237\u652f\u6491\u5f00\u53d1\u3001\u8c03\u8bd5\u67d0\u4e2a\u7279\u5b9a\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u57fa\u7840\u73af\u5883\uff0c\u6b64\u73af\u5883\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u5185\u5e38\u542b\u6709\u5f00\u53d1\u8be5\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u5168\u5957 SDK\uff0c\u5f00\u53d1\u8c03\u8bd5\u5de5\u5177\uff0c\u4ee5\u53ca\u5176\u4ed6\u8f85\u52a9\u5de5\u5177\u3002\u5728\u670d\u52a1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u88ab\u5207\u6362\u5230 DevMode \u7684\u65f6\u5019\uff0cNocalhost \u4f1a\u4f7f\u7528 DevContainer \u66ff\u6362\u539f\u672c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u5668\u3002 DevContainer \u7684\u751f\u547d\u5468\u671f\u8d2f\u7a7f\u6574\u4e2a\u5f00\u53d1\u548c\u8c03\u8bd5\u8fc7\u7a0b\u3002 \u5b83\u5728 DevMode \u5f00\u59cb\u65f6\u521b\u5efa\u3002\u5728 DevMode \u4e2d\uff0c\u672c\u5730\u6e90\u4ee3\u7801\u66f4\u6539\u5c06\u81ea\u52a8\u540c\u6b65\u5230 DevContainer\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u7f16\u8bd1\u5e76\u90e8\u7f72\u5728 DevContainer \u5bb9\u5668\u4e2d\u3002","title":"DevContainer"},{"location":"zh/core-concept/#devcontainer_1","text":"\u53ef\u53c2\u8003 DevContainer \u6700\u4f73\u5b9e\u8df5 \u3002","title":"\u914d\u7f6e DevContainer"},{"location":"zh/deployment/","text":"\u5f00\u59cb\u4e4b\u524d \u524d\u7f6e\u6761\u4ef6: Kubernetes 1.16+ \u96c6\u7fa4 \u5efa\u8bae\u4f7f\u7528\u516c\u6709\u4e91\u670d\u52a1 \u652f\u6301 Minikube \u5df2\u542f\u7528 RBAC \u5b89\u88c5 kubectl \u5e76\u5df2\u914d\u7f6e\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u5b89\u88c5 Helm3 (\u63a8\u8350 Helm3.3+) \u5b89\u88c5 Visual Studio Code(1.52+) \u5b89\u88c5 Git Kubernetes \u96c6\u7fa4\u8981\u6c42 \u672c\u6587\u6863\u4e3b\u8981\u63cf\u8ff0\u4e0e\u5728\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Minikube, \u53ef\u4ee5\u53c2\u7167 \u8fd9\u91cc \u4f7f\u7528 Helm \u90e8\u7f72 Nocalhost \u670d\u52a1\u7aef \u5728\u4f7f\u7528 helm \u65b9\u6cd5\u90e8\u7f72 Nocalhost \u670d\u52a1\u7aef\u65f6\uff0c\u60a8\u53ef\u4ee5\u5bf9\u90e8\u7f72\u7684\u7ec4\u4ef6\u8fdb\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u66f4\u6539\u3002 helm chart \u5185\u5bb9\u5982\u4e0b: # nocalhost \u670d\u52a1\u7684\u9ed8\u8ba4\u53d8\u91cf\u3002 # \u8fd9\u662fYAML\u683c\u5f0f\u7684\u6587\u4ef6\u3002 replicaCount : 1 api : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-api pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest web : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-web pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest imagePullSecrets : [] nameOverride : \"\" fullnameOverride : \"\" podAnnotations : {} podSecurityContext : {} # fsGroup: 2000 securityContext : {} # capabilities: # drop: # - ALL # readOnlyRootFilesystem: true # runAsNonRoot: true # runAsUser: 1000 #\u670d\u52a1\u7c7b\u578b\uff0c\u5982\u679c\u60a8\u7684 Kubernetes \u96c6\u7fa4\u6ca1\u6709 LoadBalancer \u670d\u52a1\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u66f4\u6539\u4e3a NodePort \u670d\u52a1 service : type : LoadBalancer port : 80 resources : {} # \u8d44\u6e90\u9ed8\u8ba4\u503c\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u7406\u4f1a\uff0c\u5982\u9700\u6307\u5b9a\u6216\u8c03\u6574\uff0c\u53ef\u4ee5\u53d6\u6d88\u6ce8\u91ca\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5e76\u4e14\u5220\u9664 \u201cresource:\u201d \u540e\u7684\u82b1\u62ec\u53f7 # limits: # cpu: 100m # memory: 128Mi # requests: # cpu: 100m # memory: 128Mi autoscaling : enabled : false minReplicas : 1 maxReplicas : 100 targetCPUUtilizationPercentage : 80 # targetMemoryUtilizationPercentage: 80 nodeSelector : {} tolerations : [] affinity : {} mariadb : fullnameOverride : nocalhost-mariadb commonAnnotations : { \"helm.sh/hook\" : \"pre-install\" , \"helm.sh/hook-weight\" : \"1\" } image : registry : codingcorp-docker.pkg.coding.net/nocalhost/public repository : mariadb auth : rootPassword : root database : nocalhost primary : persistence : size : \"10Gi\" extraVolumes : - name : nocalhost-api-sql-config-volume configMap : name : nocalhost-api-sql-init-config defaultMode : 0755 extraVolumeMounts : - name : nocalhost-api-sql-config-volume mountPath : /docker-entrypoint-initdb.d/ # initdbScripts: # my_init_script.sh: | # #!/bin/bash # echo \"init database\" # mysql -u root -p root nocalhost < /opt/init-sql/nocalhost.sql \u7b2c\u4e00\u6b65\uff1a\u514b\u9686 nocalhost \u7684\u4ee3\u7801\u4ed3\u5e93\u5230\u672c\u5730 git clone https://github.com/nocalhost/nocalhost.git \u7b2c\u4e8c\u6b65\uff1a\u4f7f\u7528 helm \u547d\u4ee4\u8fdb\u884c\u5b89\u88c5 helm install nocalhost-server ./nocalhost/deployments/chart --kubeconfig = ./cls-pc5oy0lu-config \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b\uff1a \u83b7\u53d6 nocalhost-web \u670d\u52a1\u7684\u516c\u7f51\u5730\u5740\u3002 \u6700\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Nocalhost Web \u63a7\u5236\u53f0\u4e86\u3002 \u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u90ae\u7bb1\u5730\u5740\u4e3a\uff1a admin@admin.com \u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a 123456 \u4f7f\u7528 nhctl init demo \u547d\u4ee4\u90e8\u7f72 Nocalhost \u670d\u52a1\u7aef \u7b2c\u4e00\u6b65\uff1a\u5b89\u88c5 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl \u67e5\u770b\u5982\u4f55 \u5b89\u88c5 nhctl. \u7b2c\u4e8c\u6b65\uff1a\u4f7f\u7528\u547d\u4ee4\u90e8\u7f72 Nocalhost \u670d\u52a1\u7aef nhctl init demo -n nocalhost --kubeconfig = ./cls-pc5oy0lu-config \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b\uff1a \u83b7\u53d6 nocalhost-web \u63a7\u5236\u53f0\u7684\u516c\u7f51\u5730\u5740\u3002 \u6700\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Nocalhost Web \u63a7\u5236\u53f0\u4e86\u3002 \u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u90ae\u7bb1\u5730\u5740\u4e3a\uff1a admin@admin.com \u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a 123456","title":"\u90e8\u7f72\u6559\u7a0b"},{"location":"zh/deployment/#_1","text":"\u524d\u7f6e\u6761\u4ef6: Kubernetes 1.16+ \u96c6\u7fa4 \u5efa\u8bae\u4f7f\u7528\u516c\u6709\u4e91\u670d\u52a1 \u652f\u6301 Minikube \u5df2\u542f\u7528 RBAC \u5b89\u88c5 kubectl \u5e76\u5df2\u914d\u7f6e\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u5b89\u88c5 Helm3 (\u63a8\u8350 Helm3.3+) \u5b89\u88c5 Visual Studio Code(1.52+) \u5b89\u88c5 Git Kubernetes \u96c6\u7fa4\u8981\u6c42 \u672c\u6587\u6863\u4e3b\u8981\u63cf\u8ff0\u4e0e\u5728\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Minikube, \u53ef\u4ee5\u53c2\u7167 \u8fd9\u91cc","title":"\u5f00\u59cb\u4e4b\u524d"},{"location":"zh/deployment/#helm-nocalhost","text":"\u5728\u4f7f\u7528 helm \u65b9\u6cd5\u90e8\u7f72 Nocalhost \u670d\u52a1\u7aef\u65f6\uff0c\u60a8\u53ef\u4ee5\u5bf9\u90e8\u7f72\u7684\u7ec4\u4ef6\u8fdb\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u66f4\u6539\u3002 helm chart \u5185\u5bb9\u5982\u4e0b: # nocalhost \u670d\u52a1\u7684\u9ed8\u8ba4\u53d8\u91cf\u3002 # \u8fd9\u662fYAML\u683c\u5f0f\u7684\u6587\u4ef6\u3002 replicaCount : 1 api : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-api pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest web : image : repository : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-web pullPolicy : Always # Overrides the image tag whose default is the chart appVersion. tag : latest imagePullSecrets : [] nameOverride : \"\" fullnameOverride : \"\" podAnnotations : {} podSecurityContext : {} # fsGroup: 2000 securityContext : {} # capabilities: # drop: # - ALL # readOnlyRootFilesystem: true # runAsNonRoot: true # runAsUser: 1000 #\u670d\u52a1\u7c7b\u578b\uff0c\u5982\u679c\u60a8\u7684 Kubernetes \u96c6\u7fa4\u6ca1\u6709 LoadBalancer \u670d\u52a1\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u66f4\u6539\u4e3a NodePort \u670d\u52a1 service : type : LoadBalancer port : 80 resources : {} # \u8d44\u6e90\u9ed8\u8ba4\u503c\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u7406\u4f1a\uff0c\u5982\u9700\u6307\u5b9a\u6216\u8c03\u6574\uff0c\u53ef\u4ee5\u53d6\u6d88\u6ce8\u91ca\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5e76\u4e14\u5220\u9664 \u201cresource:\u201d \u540e\u7684\u82b1\u62ec\u53f7 # limits: # cpu: 100m # memory: 128Mi # requests: # cpu: 100m # memory: 128Mi autoscaling : enabled : false minReplicas : 1 maxReplicas : 100 targetCPUUtilizationPercentage : 80 # targetMemoryUtilizationPercentage: 80 nodeSelector : {} tolerations : [] affinity : {} mariadb : fullnameOverride : nocalhost-mariadb commonAnnotations : { \"helm.sh/hook\" : \"pre-install\" , \"helm.sh/hook-weight\" : \"1\" } image : registry : codingcorp-docker.pkg.coding.net/nocalhost/public repository : mariadb auth : rootPassword : root database : nocalhost primary : persistence : size : \"10Gi\" extraVolumes : - name : nocalhost-api-sql-config-volume configMap : name : nocalhost-api-sql-init-config defaultMode : 0755 extraVolumeMounts : - name : nocalhost-api-sql-config-volume mountPath : /docker-entrypoint-initdb.d/ # initdbScripts: # my_init_script.sh: | # #!/bin/bash # echo \"init database\" # mysql -u root -p root nocalhost < /opt/init-sql/nocalhost.sql","title":"\u4f7f\u7528 Helm \u90e8\u7f72 Nocalhost \u670d\u52a1\u7aef"},{"location":"zh/deployment/#nocalhost","text":"git clone https://github.com/nocalhost/nocalhost.git","title":"\u7b2c\u4e00\u6b65\uff1a\u514b\u9686 nocalhost \u7684\u4ee3\u7801\u4ed3\u5e93\u5230\u672c\u5730"},{"location":"zh/deployment/#helm","text":"helm install nocalhost-server ./nocalhost/deployments/chart --kubeconfig = ./cls-pc5oy0lu-config \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b\uff1a \u83b7\u53d6 nocalhost-web \u670d\u52a1\u7684\u516c\u7f51\u5730\u5740\u3002 \u6700\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Nocalhost Web \u63a7\u5236\u53f0\u4e86\u3002 \u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u90ae\u7bb1\u5730\u5740\u4e3a\uff1a admin@admin.com \u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a 123456","title":"\u7b2c\u4e8c\u6b65\uff1a\u4f7f\u7528 helm \u547d\u4ee4\u8fdb\u884c\u5b89\u88c5"},{"location":"zh/deployment/#nhctl-init-demo-nocalhost","text":"","title":"\u4f7f\u7528 nhctl init demo \u547d\u4ee4\u90e8\u7f72 Nocalhost \u670d\u52a1\u7aef"},{"location":"zh/deployment/#nocalhost-nhctl","text":"\u67e5\u770b\u5982\u4f55 \u5b89\u88c5 nhctl.","title":"\u7b2c\u4e00\u6b65\uff1a\u5b89\u88c5 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl"},{"location":"zh/deployment/#nocalhost_1","text":"nhctl init demo -n nocalhost --kubeconfig = ./cls-pc5oy0lu-config \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b\uff1a \u83b7\u53d6 nocalhost-web \u63a7\u5236\u53f0\u7684\u516c\u7f51\u5730\u5740\u3002 \u6700\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Nocalhost Web \u63a7\u5236\u53f0\u4e86\u3002 \u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u90ae\u7bb1\u5730\u5740\u4e3a\uff1a admin@admin.com \u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a 123456","title":"\u7b2c\u4e8c\u6b65\uff1a\u4f7f\u7528\u547d\u4ee4\u90e8\u7f72 Nocalhost \u670d\u52a1\u7aef"},{"location":"zh/getting-started/","text":"\u6b22\u8fce\u4f7f\u7528 Nocalhost! \u5728\u8fd9\u7bc7\u6307\u5357\u91cc\uff0c\u6211\u4eec\u5c06\u5f15\u5bfc\u60a8\u5b8c\u6210\u5b89\u88c5 Nocalhost \u4ee5\u53ca\u4f7f\u7528 Nocalhost \u5728 Kubernetes \u4e0a\u4f53\u9a8c\u4fbf\u6377\u7684\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5e94\u7528\u7684\u5f00\u53d1\u8fc7\u7a0b\u3002 ARM CPU \u652f\u6301 \u76ee\u524d Nocalhost \u5bf9 ARM \u7cfb\u5217 CPU\uff08\u5305\u62ec\u82f9\u679c M1\uff09\u5e76\u672a\u5b8c\u5168\u652f\u6301 \u524d\u7f6e\u6761\u4ef6 \u914d\u7f6e\u597d\u7684 Kubernetes Cluster (2\u6838CPU \u548c 4G \u5185\u5b58) \u53ef\u4ee5\u662f\u672c\u5730\u96c6\u7fa4, \u5982 minikube \u6216 Docker Kubernetes \u96c6\u7fa4, \u6216\u8fdc\u7aef\u96c6\u7fa4, \u6bd4\u5982 \u817e\u8baf\u7684 TKE \u7b49\u516c\u6709\u4e91\u670d\u52a1. RBAC \u5728\u4e0a\u8ff0\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u542f\u7528 Configured kubeconfig file \u5177\u5907\u547d\u540d\u7a7a\u95f4\u7684\u7ba1\u7406\u5458\u6743\u9650 Visual Studio Code (1.52+) Kubernetes API \u670d\u52a1\u53ef\u4ee5\u5728\u5185\u90e8\u548c\u5916\u90e8\u8bbf\u95ee \u6b65\u9aa41\uff1a\u5b89\u88c5 \u786e\u4fdd\u5df2\u7ecf\u6839\u636e \u5b89\u88c5 IDE \u63d2\u4ef6 \u5b8c\u6210 VSCode \u63d2\u4ef6\u7684\u5b89\u88c5\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f linux\uff0c\u5e94\u8be5 \u589e\u52a0 inotify limit \uff0c\u5426\u5219\u6587\u4ef6\u540c\u6b65\u53ef\u80fd\u4f1a\u5f88\u6162\u3002 \u6b65\u9aa42\uff1a\u5728 VSCode \u4e2d\u5b89\u88c5\u548c\u914d\u7f6e Nocalhost \u542f\u7528\u63d2\u4ef6 \u6253\u5f00 VSCode, \u5728\u5de6\u8fb9\u5de5\u5177\u680f\u70b9\u51fb Nocalhost \u7684\u56fe\u6807 , \u542f\u7528 Nocalhost \u63d2\u4ef6 \u6dfb\u52a0 Kubernetes \u96c6\u7fa4 \u4f60\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u6dfb\u52a0 Kubernetes \u96c6\u7fa4: - \u9009\u62e9 kubeconfig \u6587\u4ef6 \u5728\u4f60\u7684\u672c\u5730\u6587\u4ef6\u5939\u4e2d\u9009\u62e9\u4e00\u4e2a kubeconfig \u6587\u4ef6. Note \u5728\u63d2\u4ef6\u542f\u52a8\u7684\u65f6\u5019, Nocalhost \u4f1a\u9ed8\u8ba4\u4ece ~/.kube/config \u81ea\u52a8\u8bfb\u53d6\u4f60\u7684 kubeconfig - \u7c98\u8d34\u4e3a\u6587\u672c \u7c98\u8d34 kubeconfig \u7684\u6587\u672c\u5185\u5bb9. Tip \u4f60\u53ef\u4ee5\u901a\u8fc7\u6b64\u547d\u4ee4 kubectl config view --minify --raw --flatten \u67e5\u770b\u5e76\u590d\u5236\u4f60\u7684 kubeconfig \u5728 kubeconfig \u6210\u529f\u8bfb\u53d6\u540e\uff0c\u9009\u62e9\u9700\u8981\u8bbf\u95ee\u7684\u5185\u5bb9\uff0c\u7136\u540e\u6dfb\u52a0\u96c6\u7fa4 \u5f53\u6210\u529f\u6dfb\u52a0\u96c6\u7fa4\u540e\uff0c Nocalhost \u4f1a\u81ea\u52a8\u663e\u793a\u60a8\u7684\u96c6\u7fa4\u5217\u8868 \u6b65\u9aa43\uff1a\u8fdb\u5165 DevMode Tip \u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u4ee5 bookinfo \u5e94\u7528\u7a0b\u5e8f\u4f5c\u4e3a\u793a\u4f8b\u3002 \u60a8\u53ef\u4ee5\u9009\u62e9\u5df2\u7ecf\u90e8\u7f72\u5728\u60a8 Kubernetes \u96c6\u7fa4\u4e2d\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u6309\u7167 \u5728K8s\u4e2d\u90e8\u7f72\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f \u5728Kubernetes\u96c6\u7fa4\u4e2d\u90e8\u7f72 bookinfo \u5e94\u7528\u7a0b\u5e8f\u3002 \u9009\u62e9\u4e00\u4e2a\u4f60\u60f3\u5f00\u53d1\u7684\u5e94\u7528\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u7528 bookinfo \u5e94\u7528\u4e3e\u4f8b \u9009\u62e9 productpage \u670d\u52a1\uff0c\u70b9\u51fb \u8fdb\u5165 DevMode \u6a21\u5f0f\uff0c\u7136\u540e\u6307\u5b9a\u6e90\u4ee3\u7801\u76ee\u5f55\uff08\u4ece Git \u4ed3\u5e93\u514b\u9686\u6216\u4f7f\u7528\u73b0\u6709\u7684\u672c\u5730\u76ee\u5f55\uff09 Note \u5982\u679c\u8981\u5728\u8bbe\u7f6e\u4e86 Git \u4ed3\u5e93\u9700\u8981\u66f4\u6539\u5730\u5740\uff0c\u53ef\u4ee5\u5355\u51fb \u6253\u5f00 yaml \u6587\u4ef6\uff0c\u4fee\u6539\u5176\u4e2d\u7684 gitUrl \u5185\u5bb9 \u6307\u5b9a\u6e90\u4ee3\u7801\u76ee\u5f55\uff08\u6216\u6210\u529f\u514b\u9686\u4ee3\u7801\uff09\u540e\uff0cNocalhost \u5c06\u6253\u5f00\u4e00\u4e2a\u65b0\u7684VSCode\u7a97\u53e3\uff0c\u7136\u540e\u5c06\u81ea\u52a8\u8fdb\u5165 DevMode\u3002 \u5f53\u6210\u529f\u8fdb\u5165 DevMode \u540e\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u4ee5\u4e0b\u63d0\u793a\u4fe1\u606f\uff1a Starting DevMode... ... Waiting pod to start... Forwarding 39080:9080 Response: {\"errInfo\":\"\"} Port-forward 39080:9080 has been started \u2713 Dev container has been updated ... Tip Nocalhost \u5c06\u81ea\u52a8\u5c06\u7aef\u53e3\u8f6c\u53d1\u5230 Kubernetes \u96c6\u7fa4\u4e2d\u7684 Pod\u4e0a\u3002 \u5728\u5f53\u524d\u793a\u4f8b\u4e2d\uff0c\u672c\u5730\u7aef\u53e3 39080 \u5c06\u6570\u636e\u8f6c\u53d1\u5230\u5b9a\u4e49 Pod \u4e0a\u7684\u7aef\u53e3 9080 \u3002 \u5728\u4e3b\u8981\u8fdb\u7a0b\u6210\u529f\u542f\u7528\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 http\uff1a//127.0.0.1:39080 \u8bbf\u95ee\u6b64 Pod\u3002 \u6b65\u9aa44\uff1a\u66f4\u6539\u4ee3\u7801\u5e76\u68c0\u67e5\u7ed3\u679c \u8ba9\u6211\u4eec\u8fdb\u884c\u4e00\u4e9b\u4ee3\u7801\u66f4\u6539\uff0c\u770b\u770b Nocalhost \u662f\u5982\u4f55\u5de5\u4f5c\u7684 \u5728\u8fdc\u7aef Terminal \u4e2d\u6267\u884c sh \u547d\u4ee4\u542f\u52a8 python \u8fdb\u7a0b sh run.sh Note \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728 DevMode \u4e0b\uff0c\u5e94\u7528\u4e2d\u7684\u4e3b\u8fdb\u7a0b\u4e0d\u4f1a\u81ea\u52a8\u5728 DevContainer \u4e2d\u542f\u52a8\uff0c\u56e0\u6b64\u5e94\u7528\u5c06\u4e0d\u54cd\u5e94\u4efb\u4f55\u8bf7\u6c42\u3002 \u60a8\u9700\u8981\u5148\u624b\u52a8\u542f\u52a8\u4e3b\u8fdb\u7a0b\uff0c\u7136\u540e\u624d\u6b63\u5e38\u80fd\u8bbf\u95ee\u8be5\u5e94\u7528\u3002 \u6253\u5f00\u60a8\u7684\u6d4f\u89c8\u5668\u5e76\u8f93\u5165\u8be5\u5730\u5740 http://127.0.0.1:39080 \uff0c\u67e5\u770b\u5e94\u7528\u8fd0\u884c\u7ed3\u679c \u4fee\u6539\u4ee3\u7801 \u73b0\u5728\u4fee\u6539 template/index.html \u6216\u5176\u5b83\u5185\u5bb9\uff0c\u4f53\u9a8c Nocalhost \u7684\u4ee3\u7801\u4fee\u6539\u5373\u65f6\u751f\u6548\u529f\u80fd. \u522b\u5fd8\u8bb0\u4fdd\u5b58\u60a8\u7684\u4fee\u6539. \u5237\u65b0\u6d4f\u89c8\u5668\u67e5\u770b\u4ee3\u7801\u6539\u52a8\u540e\u5e26\u6765\u7684\u6548\u679c http://127.0.0.1:39080 \ud83d\udc4d \u606d\u559c! \u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86\u4fbf\u6377\u7684\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5f00\u53d1\u4f53\u9a8c\u3002 \u4e0b\u4e00\u6b65 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u540e\u7eed\u7684\u5efa\u8bae\u6b65\u9aa4: \u9605\u8bfb Nocalhost \u7684 \u6838\u5fc3\u6982\u5ff5 \u8bbf\u95ee\u6211\u4eec\u7684 Github \u52a0\u5165\u6211\u4eec\u7684 Slack \u6216\u626b\u7801\u6dfb\u52a0\u5c0f\u52a9\u624b\u540e\u7533\u8bf7\u52a0\u5165\u5fae\u4fe1\u7fa4","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"zh/getting-started/#_1","text":"\u914d\u7f6e\u597d\u7684 Kubernetes Cluster (2\u6838CPU \u548c 4G \u5185\u5b58) \u53ef\u4ee5\u662f\u672c\u5730\u96c6\u7fa4, \u5982 minikube \u6216 Docker Kubernetes \u96c6\u7fa4, \u6216\u8fdc\u7aef\u96c6\u7fa4, \u6bd4\u5982 \u817e\u8baf\u7684 TKE \u7b49\u516c\u6709\u4e91\u670d\u52a1. RBAC \u5728\u4e0a\u8ff0\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u542f\u7528 Configured kubeconfig file \u5177\u5907\u547d\u540d\u7a7a\u95f4\u7684\u7ba1\u7406\u5458\u6743\u9650 Visual Studio Code (1.52+) Kubernetes API \u670d\u52a1\u53ef\u4ee5\u5728\u5185\u90e8\u548c\u5916\u90e8\u8bbf\u95ee","title":"\u524d\u7f6e\u6761\u4ef6"},{"location":"zh/getting-started/#1","text":"\u786e\u4fdd\u5df2\u7ecf\u6839\u636e \u5b89\u88c5 IDE \u63d2\u4ef6 \u5b8c\u6210 VSCode \u63d2\u4ef6\u7684\u5b89\u88c5\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f linux\uff0c\u5e94\u8be5 \u589e\u52a0 inotify limit \uff0c\u5426\u5219\u6587\u4ef6\u540c\u6b65\u53ef\u80fd\u4f1a\u5f88\u6162\u3002","title":"\u6b65\u9aa41\uff1a\u5b89\u88c5"},{"location":"zh/getting-started/#2-vscode-nocalhost","text":"","title":"\u6b65\u9aa42\uff1a\u5728 VSCode \u4e2d\u5b89\u88c5\u548c\u914d\u7f6e Nocalhost"},{"location":"zh/getting-started/#_2","text":"\u6253\u5f00 VSCode, \u5728\u5de6\u8fb9\u5de5\u5177\u680f\u70b9\u51fb Nocalhost \u7684\u56fe\u6807 , \u542f\u7528 Nocalhost \u63d2\u4ef6","title":"\u542f\u7528\u63d2\u4ef6"},{"location":"zh/getting-started/#kubernetes","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u6dfb\u52a0 Kubernetes \u96c6\u7fa4: - \u9009\u62e9 kubeconfig \u6587\u4ef6 \u5728\u4f60\u7684\u672c\u5730\u6587\u4ef6\u5939\u4e2d\u9009\u62e9\u4e00\u4e2a kubeconfig \u6587\u4ef6. Note \u5728\u63d2\u4ef6\u542f\u52a8\u7684\u65f6\u5019, Nocalhost \u4f1a\u9ed8\u8ba4\u4ece ~/.kube/config \u81ea\u52a8\u8bfb\u53d6\u4f60\u7684 kubeconfig - \u7c98\u8d34\u4e3a\u6587\u672c \u7c98\u8d34 kubeconfig \u7684\u6587\u672c\u5185\u5bb9. Tip \u4f60\u53ef\u4ee5\u901a\u8fc7\u6b64\u547d\u4ee4 kubectl config view --minify --raw --flatten \u67e5\u770b\u5e76\u590d\u5236\u4f60\u7684 kubeconfig \u5728 kubeconfig \u6210\u529f\u8bfb\u53d6\u540e\uff0c\u9009\u62e9\u9700\u8981\u8bbf\u95ee\u7684\u5185\u5bb9\uff0c\u7136\u540e\u6dfb\u52a0\u96c6\u7fa4 \u5f53\u6210\u529f\u6dfb\u52a0\u96c6\u7fa4\u540e\uff0c Nocalhost \u4f1a\u81ea\u52a8\u663e\u793a\u60a8\u7684\u96c6\u7fa4\u5217\u8868","title":"\u6dfb\u52a0 Kubernetes \u96c6\u7fa4"},{"location":"zh/getting-started/#3-devmode","text":"Tip \u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u4ee5 bookinfo \u5e94\u7528\u7a0b\u5e8f\u4f5c\u4e3a\u793a\u4f8b\u3002 \u60a8\u53ef\u4ee5\u9009\u62e9\u5df2\u7ecf\u90e8\u7f72\u5728\u60a8 Kubernetes \u96c6\u7fa4\u4e2d\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u6309\u7167 \u5728K8s\u4e2d\u90e8\u7f72\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f \u5728Kubernetes\u96c6\u7fa4\u4e2d\u90e8\u7f72 bookinfo \u5e94\u7528\u7a0b\u5e8f\u3002 \u9009\u62e9\u4e00\u4e2a\u4f60\u60f3\u5f00\u53d1\u7684\u5e94\u7528\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u7528 bookinfo \u5e94\u7528\u4e3e\u4f8b \u9009\u62e9 productpage \u670d\u52a1\uff0c\u70b9\u51fb \u8fdb\u5165 DevMode \u6a21\u5f0f\uff0c\u7136\u540e\u6307\u5b9a\u6e90\u4ee3\u7801\u76ee\u5f55\uff08\u4ece Git \u4ed3\u5e93\u514b\u9686\u6216\u4f7f\u7528\u73b0\u6709\u7684\u672c\u5730\u76ee\u5f55\uff09 Note \u5982\u679c\u8981\u5728\u8bbe\u7f6e\u4e86 Git \u4ed3\u5e93\u9700\u8981\u66f4\u6539\u5730\u5740\uff0c\u53ef\u4ee5\u5355\u51fb \u6253\u5f00 yaml \u6587\u4ef6\uff0c\u4fee\u6539\u5176\u4e2d\u7684 gitUrl \u5185\u5bb9 \u6307\u5b9a\u6e90\u4ee3\u7801\u76ee\u5f55\uff08\u6216\u6210\u529f\u514b\u9686\u4ee3\u7801\uff09\u540e\uff0cNocalhost \u5c06\u6253\u5f00\u4e00\u4e2a\u65b0\u7684VSCode\u7a97\u53e3\uff0c\u7136\u540e\u5c06\u81ea\u52a8\u8fdb\u5165 DevMode\u3002 \u5f53\u6210\u529f\u8fdb\u5165 DevMode \u540e\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u4ee5\u4e0b\u63d0\u793a\u4fe1\u606f\uff1a Starting DevMode... ... Waiting pod to start... Forwarding 39080:9080 Response: {\"errInfo\":\"\"} Port-forward 39080:9080 has been started \u2713 Dev container has been updated ... Tip Nocalhost \u5c06\u81ea\u52a8\u5c06\u7aef\u53e3\u8f6c\u53d1\u5230 Kubernetes \u96c6\u7fa4\u4e2d\u7684 Pod\u4e0a\u3002 \u5728\u5f53\u524d\u793a\u4f8b\u4e2d\uff0c\u672c\u5730\u7aef\u53e3 39080 \u5c06\u6570\u636e\u8f6c\u53d1\u5230\u5b9a\u4e49 Pod \u4e0a\u7684\u7aef\u53e3 9080 \u3002 \u5728\u4e3b\u8981\u8fdb\u7a0b\u6210\u529f\u542f\u7528\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 http\uff1a//127.0.0.1:39080 \u8bbf\u95ee\u6b64 Pod\u3002","title":"\u6b65\u9aa43\uff1a\u8fdb\u5165 DevMode"},{"location":"zh/getting-started/#4","text":"\u8ba9\u6211\u4eec\u8fdb\u884c\u4e00\u4e9b\u4ee3\u7801\u66f4\u6539\uff0c\u770b\u770b Nocalhost \u662f\u5982\u4f55\u5de5\u4f5c\u7684","title":"\u6b65\u9aa44\uff1a\u66f4\u6539\u4ee3\u7801\u5e76\u68c0\u67e5\u7ed3\u679c"},{"location":"zh/getting-started/#terminal-sh-python","text":"sh run.sh Note \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728 DevMode \u4e0b\uff0c\u5e94\u7528\u4e2d\u7684\u4e3b\u8fdb\u7a0b\u4e0d\u4f1a\u81ea\u52a8\u5728 DevContainer \u4e2d\u542f\u52a8\uff0c\u56e0\u6b64\u5e94\u7528\u5c06\u4e0d\u54cd\u5e94\u4efb\u4f55\u8bf7\u6c42\u3002 \u60a8\u9700\u8981\u5148\u624b\u52a8\u542f\u52a8\u4e3b\u8fdb\u7a0b\uff0c\u7136\u540e\u624d\u6b63\u5e38\u80fd\u8bbf\u95ee\u8be5\u5e94\u7528\u3002 \u6253\u5f00\u60a8\u7684\u6d4f\u89c8\u5668\u5e76\u8f93\u5165\u8be5\u5730\u5740 http://127.0.0.1:39080 \uff0c\u67e5\u770b\u5e94\u7528\u8fd0\u884c\u7ed3\u679c","title":"\u5728\u8fdc\u7aef Terminal \u4e2d\u6267\u884c sh \u547d\u4ee4\u542f\u52a8 python \u8fdb\u7a0b"},{"location":"zh/getting-started/#_3","text":"\u73b0\u5728\u4fee\u6539 template/index.html \u6216\u5176\u5b83\u5185\u5bb9\uff0c\u4f53\u9a8c Nocalhost \u7684\u4ee3\u7801\u4fee\u6539\u5373\u65f6\u751f\u6548\u529f\u80fd. \u522b\u5fd8\u8bb0\u4fdd\u5b58\u60a8\u7684\u4fee\u6539. \u5237\u65b0\u6d4f\u89c8\u5668\u67e5\u770b\u4ee3\u7801\u6539\u52a8\u540e\u5e26\u6765\u7684\u6548\u679c http://127.0.0.1:39080 \ud83d\udc4d \u606d\u559c! \u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86\u4fbf\u6377\u7684\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5f00\u53d1\u4f53\u9a8c\u3002","title":"\u4fee\u6539\u4ee3\u7801"},{"location":"zh/getting-started/#_4","text":"\u4ee5\u4e0b\u662f\u4e00\u4e9b\u540e\u7eed\u7684\u5efa\u8bae\u6b65\u9aa4: \u9605\u8bfb Nocalhost \u7684 \u6838\u5fc3\u6982\u5ff5 \u8bbf\u95ee\u6211\u4eec\u7684 Github \u52a0\u5165\u6211\u4eec\u7684 Slack \u6216\u626b\u7801\u6dfb\u52a0\u5c0f\u52a9\u624b\u540e\u7533\u8bf7\u52a0\u5165\u5fae\u4fe1\u7fa4","title":"\u4e0b\u4e00\u6b65"},{"location":"zh/installation/","text":"Tip \u5728\u5b89\u88c5 Nocalhost IDE \u63d2\u4ef6\u65f6\uff0c\u63d2\u4ef6\u4f1a\u81ea\u52a8\u5e2e\u60a8\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684 nhctl \u5b89\u88c5 VScode \u63d2\u4ef6 \u901a\u8fc7\u7f16\u8f91\u5668\u5e94\u7528\u5e02\u573a\u5b89\u88c5 \u6253\u5f00 VScode \u7f16\u8f91\u5668\uff0c\u7136\u540e\u5355\u51fb\u5de6\u4fa7\u680f\u4e2d\u7684 \u56fe\u6807 \u5728\u641c\u7d22\u8f93\u5165\u6846\u4e2d\u952e\u5165 nocalhost \u9009\u62e9 nocalhost-vscode-plugin\uff0c\u7136\u540e\u5355\u51fb \u201c\u5b89\u88c5\u201d \u6309\u94ae\u8fdb\u884c\u5b89\u88c5\u3002 \u624b\u52a8\u5b89\u88c5 \u4e0b\u8f7d\u6700\u65b0\u7248\u672c \u7684 VSCode \u63d2\u4ef6 \u6253\u5f00 VScode \u7f16\u8f91\u5668\uff0c\u7136\u540e\u5355\u51fb\u5de6\u4fa7\u680f\u4e2d\u7684 \u56fe\u6807 \u70b9\u51fb \u56fe\u6807\uff0c\u9009\u62e9 \u4ece VSIX \u6587\u4ef6\u5b89\u88c5... \uff0c\u9009\u62e9\u521a\u624d\u4e0b\u8f7d\u7684 VSIX \u6587\u4ef6\u5f00\u59cb\u5b89\u88c5 \u5b89\u88c5 JetBrains \u63d2\u4ef6 \u901a\u8fc7\u7f16\u8f91\u5668\u5e94\u7528\u5e02\u573a\u5b89\u88c5 Windows \u7cfb\u7edf \u6587\u4ef6 > \u8bbe\u7f6e > \u63d2\u4ef6 > \u6d4f\u89c8\u4ed3\u5e93... > \u641c\u7d22 nocalhost > \u5b89\u88c5\u63d2\u4ef6 MacOS \u7cfb\u7edf \u9996\u9009\u9879 > \u8bbe\u7f6e > \u63d2\u4ef6 > \u6d4f\u89c8\u4ed3\u5e93... > \u641c\u7d22 nocalhost > \u5b89\u88c5\u63d2\u4ef6 \u624b\u52a8\u5b89\u88c5 \u4e0b\u8f7d \u6700\u65b0\u7248\u672c \u5b89\u88c5\u63d2\u4ef6\uff1a \u9996\u9009\u9879 > \u63d2\u4ef6 > \u4ece\u78c1\u76d8\u5b89\u88c5\u63d2\u4ef6... \u7f16\u8f91\u5668\u63d2\u4ef6\u5347\u7ea7 Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u5728\u6bcf\u6b21\u7f16\u8f91\u5668\u542f\u52a8\u65f6\u5982\u68c0\u67e5\u5230\u6709\u65b0\u7684\u7248\u672c\uff0cNocalhost \u63d2\u4ef6\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u66f4\u65b0\u63d2\u4ef6\u548c nhctl \u4e0b\u4e00\u6b65 \u4f7f\u7528 Nocalhost \u63d2\u4ef6 \u4f53\u9a8c \u4fbf\u6377\u7684\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5e94\u7528\u7684\u5f00\u53d1\u8fc7\u7a0b","title":"\u5b89\u88c5 IDE \u63d2\u4ef6"},{"location":"zh/installation/#vscode","text":"\u901a\u8fc7\u7f16\u8f91\u5668\u5e94\u7528\u5e02\u573a\u5b89\u88c5 \u6253\u5f00 VScode \u7f16\u8f91\u5668\uff0c\u7136\u540e\u5355\u51fb\u5de6\u4fa7\u680f\u4e2d\u7684 \u56fe\u6807 \u5728\u641c\u7d22\u8f93\u5165\u6846\u4e2d\u952e\u5165 nocalhost \u9009\u62e9 nocalhost-vscode-plugin\uff0c\u7136\u540e\u5355\u51fb \u201c\u5b89\u88c5\u201d \u6309\u94ae\u8fdb\u884c\u5b89\u88c5\u3002 \u624b\u52a8\u5b89\u88c5 \u4e0b\u8f7d\u6700\u65b0\u7248\u672c \u7684 VSCode \u63d2\u4ef6 \u6253\u5f00 VScode \u7f16\u8f91\u5668\uff0c\u7136\u540e\u5355\u51fb\u5de6\u4fa7\u680f\u4e2d\u7684 \u56fe\u6807 \u70b9\u51fb \u56fe\u6807\uff0c\u9009\u62e9 \u4ece VSIX \u6587\u4ef6\u5b89\u88c5... \uff0c\u9009\u62e9\u521a\u624d\u4e0b\u8f7d\u7684 VSIX \u6587\u4ef6\u5f00\u59cb\u5b89\u88c5","title":"\u5b89\u88c5 VScode \u63d2\u4ef6"},{"location":"zh/installation/#jetbrains","text":"\u901a\u8fc7\u7f16\u8f91\u5668\u5e94\u7528\u5e02\u573a\u5b89\u88c5","title":"\u5b89\u88c5 JetBrains \u63d2\u4ef6"},{"location":"zh/installation/#windows","text":"\u6587\u4ef6 > \u8bbe\u7f6e > \u63d2\u4ef6 > \u6d4f\u89c8\u4ed3\u5e93... > \u641c\u7d22 nocalhost > \u5b89\u88c5\u63d2\u4ef6","title":"Windows \u7cfb\u7edf"},{"location":"zh/installation/#macos","text":"\u9996\u9009\u9879 > \u8bbe\u7f6e > \u63d2\u4ef6 > \u6d4f\u89c8\u4ed3\u5e93... > \u641c\u7d22 nocalhost > \u5b89\u88c5\u63d2\u4ef6 \u624b\u52a8\u5b89\u88c5 \u4e0b\u8f7d \u6700\u65b0\u7248\u672c \u5b89\u88c5\u63d2\u4ef6\uff1a \u9996\u9009\u9879 > \u63d2\u4ef6 > \u4ece\u78c1\u76d8\u5b89\u88c5\u63d2\u4ef6...","title":"MacOS \u7cfb\u7edf"},{"location":"zh/installation/#_1","text":"Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u5728\u6bcf\u6b21\u7f16\u8f91\u5668\u542f\u52a8\u65f6\u5982\u68c0\u67e5\u5230\u6709\u65b0\u7684\u7248\u672c\uff0cNocalhost \u63d2\u4ef6\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u66f4\u65b0\u63d2\u4ef6\u548c nhctl","title":"\u7f16\u8f91\u5668\u63d2\u4ef6\u5347\u7ea7"},{"location":"zh/installation/#_2","text":"\u4f7f\u7528 Nocalhost \u63d2\u4ef6 \u4f53\u9a8c \u4fbf\u6377\u7684\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5e94\u7528\u7684\u5f00\u53d1\u8fc7\u7a0b","title":"\u4e0b\u4e00\u6b65"},{"location":"zh/introduction/","text":"\u8ba9\u4e91\u539f\u751f\u5f00\u53d1\u66f4\u9ad8\u6548 \u52a8\u673a \u56e0\u4e3a\u5fae\u670d\u52a1\u5e26\u6765\u5f00\u53d1\u548c\u90e8\u7f72\u4e0a\u7684\u7075\u6d3b\u6027\u548c\u6280\u672f\u591a\u5411\u6027\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u4f01\u4e1a\u9009\u62e9\u4f7f\u7528\u5fae\u670d\u52a1\u67b6\u6784\u6784\u5efa\u5e94\u7528\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4e91\u539f\u751f\u6280\u672f\u548c Kubernetes \u7684\u9ad8\u901f\u53d1\u5c55\u548c\u666e\u53ca\uff0c\u4e5f\u8fdb\u4e00\u6b65\u89e3\u51b3\u4e86\u5fae\u670d\u52a1\u7684\u670d\u52a1\u8c03\u7528\u7684\u5f00\u9500\u3001\u5206\u5e03\u5f0f\u7cfb\u4e8b\u52a1\u3001\u8c03\u8bd5\u4e0e\u670d\u52a1\u6cbb\u7406\u7b49\u65b9\u9762\u7684\u96be\u9898\u3002\u56e0\u6b64\uff0c\u73b0\u4ee3\u5e94\u7528\u7684\u53d1\u5c55\u8d8b\u52bf\u4ece\u539f\u6765\u7684 \u201c\u5355\u4f53\u5e94\u7528 + \u4e91\u201d \u671d\u7740 \u201c\u5fae\u670d\u52a1 + \u4e91\u539f\u751f\u201d \u4e0d\u65ad\u6f14\u8fdb\u3002 \u8fd9\u4e2a\u5e94\u7528\u7684\u53d1\u5c55\u8d8b\u52bf\u867d\u7136\u6781\u5927\u63d0\u5347\u4e86\u5e94\u7528\u7684\u8fd0\u7ef4\u548c\u90e8\u7f72\u7684\u6548\u7387\uff0c\u4f46\u4e00\u4e2a\u5173\u952e\u8282\u70b9\u88ab\u5ffd\u7565\u4e86\uff1a\u5f00\u53d1\u9636\u6bb5 \u9996\u5148\uff0c\u867d\u7136 Kubernetes \u5728\u5e95\u5c42\u57fa\u7840\u67b6\u6784\u7ba1\u7406\u65b9\u9762\u8868\u73b0\u51fa\u8272\uff0c\u4f46\u5e26\u6765\u4e86\u989d\u5916\u7684\u590d\u6742\u6027\u548c\u9661\u5ced\u7684\u5b66\u4e60\u66f2\u7ebf\u3002Kubernetes \u7f3a\u4e4f\u9762\u5411\u5f00\u53d1\u4eba\u5458\u7684\u62bd\u8c61\u5f71\u54cd\u4e86\u5f00\u53d1\u4f53\u9a8c\uff0c\u964d\u4f4e\u4e86\u5f00\u53d1\u6548\u7387\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u4e0d\u5f97\u4e0d\u82b1\u8d39\u5927\u91cf\u7cbe\u529b\u5728\u6982\u5ff5\u5b66\u4e60\u3001\u7cfb\u7edf\u914d\u7f6e\u3001\u73af\u5883\u90e8\u7f72\u548c\u8d44\u6e90\u7ba1\u7406\u4e0a\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u4eca\u5f88\u591a\u4f01\u4e1a\u5728\u8fdb\u884c\u201c\u5fae\u670d\u52a1\u5316\u201d\u7684\u5b9e\u8df5\u4e2d\uff0c\u62c6\u5206\u7c92\u5ea6\u8fc7\u7ec6\uff0c\u5bfc\u81f4\u5fae\u670d\u52a1\u6570\u91cf\u8fdb\u4e00\u6b65\u5267\u589e\uff0c\u5404\u670d\u52a1\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u4e5f\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u5404\u79cd\u95ee\u9898\u5728\u60f3\u8981\u65b0\u589e\u9700\u6c42\u65f6\u5c24\u4e3a\u7a81\u51fa\u3002\u8fd9\u5bfc\u81f4\u5f00\u53d1\u4eba\u5458\u548c\u7ba1\u7406\u4eba\u5458\u9762\u4e34\u4e0b\u5217\u96be\u9898\uff1a \u5f00\u53d1\u4eba\u5458 \u5982\u4f55\u5feb\u901f\u542f\u52a8\u5b8c\u6574\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5982\u4f55\u5feb\u901f\u8c03\u8bd5\u8fd9\u4e9b\u51e0\u5341\u751a\u81f3\u6570\u767e\u7684\u5fae\u670d\u52a1\uff1f\u5f00\u53d1\u7684\u9700\u6c42\u4f9d\u8d56\u4e8e\u5176\u4ed6\u540c\u4e8b\u8be5\u600e\u4e48\u8054\u8c03\uff1f \u4e0e\u6b64\u540c\u65f6\uff0c\u5bb9\u5668\u5316\u6280\u672f\u867d\u7136\u89e3\u51b3\u4e86\u5fae\u670d\u52a1\u5e94\u7528\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u9636\u6bb5\u73af\u5883\u4e00\u81f4\u6027\u7684\u95ee\u9898\uff0c\u4f46\u968f\u4e4b\u800c\u6765\u7684\u5f00\u53d1\u53cd\u9988\u5faa\u73af\u6548\u7387\u95ee\u9898\u8ba9\u5f88\u591a\u5f00\u53d1\u56e2\u961f\u5934\u75db\u4e0d\u5df2\u3002\u6bcf\u6b21\u4ee3\u7801\u4fee\u6539\u540e\u5230\u53ef\u4ee5\u5728\u7ebf\u8c03\u8bd5\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u52a8\u8f84\u9700\u8981\u6570\u5206\u949f\u751a\u81f3\u5341\u5206\u949f\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u6781\u5927\u62d6\u7d2f\u4e86\u5f00\u53d1\u6548\u7387\u3002 \u56e0\u6b64\uff0c\u5c3d\u7ba1\u4f01\u4e1a\u53ef\u4ee5\u4ece \u201c\u5fae\u670d\u52a1 + \u4e91\u539f\u751f\u201d \u4e2d\u5f97\u76ca\uff0c\u4f46\u5b9e\u9645\u4e0a\u8bb8\u591a\u5f00\u53d1\u56e2\u961f\u7684\u5f00\u53d1\u6548\u7387\u4e0d\u5347\u53cd\u964d\uff0c\u5e76\u4e0d\u80fd\u4f53\u9a8c\u5230\u4e91\u539f\u751f\u6280\u672f\u5e26\u6765\u7684\u201c\u964d\u672c\u589e\u6548\u201d\u3002 \u6700\u7ec8\u7ed3\u679c\u662f\uff0c\u5bfc\u81f4\u4eba\u4eec\u5f00\u59cb\u8d28\u7591 Kubernetes \u5bf9\u5f00\u53d1\u4eba\u5458\u672c\u8eab\u7684\u4ef7\u503c\uff1a\u201c\u4e3a\u4ec0\u4e48\u8981\u70e6\u607c\u8fd9\u4e9b\u6240\u6709\u7684\u7ec6\u8282\u800c\u4e0d\u662f\u4e13\u6ce8\u4e8e\u4ee3\u7801\u5b9e\u73b0\uff1f\u201d\u3002 \u4ec0\u4e48\u662f Nocalhost? \u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u800c\u8a00 Nocalhost \u662f\u4e00\u6b3e\u57fa\u4e8e IDE \u7684\u4e91\u539f\u751f\u5f00\u53d1\u5de5\u5177\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e91\u539f\u751f\u7684\u4e91\u7aef\u89e3\u51b3\u65b9\u6848\uff0c\u8ba9\u4e91\u539f\u751f\u5f00\u53d1\u66f4\u9ad8\u6548 \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883 \u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u4e00\u952e\u914d\u7f6e\u597d\u8fdc\u7aef Kubernetes \u5f00\u53d1\u73af\u5883\uff0c\u6446\u8131\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u90e8\u7f72\u590d\u6742\u5f00\u53d1\u73af\u5883\u7684\u70e6\u607c\u3002 \u65e0\u9700\u91cd\u5efa\u955c\u50cf\u6216\u91cd\u542f\u5bb9\u5668 \u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u672c\u5730\u4ee3\u7801\u4fee\u6539\u90fd\u4f1a\u7acb\u5373\u540c\u6b65\u5230\u8fdc\u7aef\u73af\u5883\uff0c\u5e76\u4e0d\u9700\u8981\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u6216\u91cd\u542f\u5bb9\u5668\uff0c\u5927\u5e45\u964d\u4f4e\u5f00\u53d1\u4eba\u5458\u5728\u4e91\u539f\u751f\u73af\u5883\u4e0b\u5f00\u53d1\u7684\u5faa\u73af\u53cd\u9988\u3002 \u72ec\u7acb\u9694\u79bb\u7684\u5f00\u53d1\u7a7a\u95f4 \u6bcf\u4f4d\u5f00\u53d1\u4eba\u5458\u90fd\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u5f00\u53d1\u7a7a\u95f4\uff0c\u4ee5\u786e\u4fdd\u5728\u5f00\u53d1\u5408\u548c\u6d4b\u8bd5\u8fc7\u7a0b\u548c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u53d7\u5230\u4ed6\u4eba\u7684\u5e72\u6270\u3002 \u53ef\u89c6\u5316\u672c\u5730\u7f16\u8f91\u5668\u63d2\u4ef6 Nocalhost \u4e3a JetBrains \u548c VSCode \u63d0\u4f9b\u4e86\u6613\u4e8e\u4f7f\u7528\u7684\u672c\u5730\u7f16\u8f91\u5668\u63d2\u4ef6\uff0c\u5f00\u53d1\u4eba\u5458\u65e0\u9700\u719f\u6089 kubectl \u547d\u4ee4\u5373\u53ef\u5feb\u901f\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u5feb\u901f\u5bf9\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5e94\u7528\u8fdb\u884c\u5f00\u53d1\u548c\u8fdc\u7a0b\u8c03\u8bd5\u3002 \u67b6\u6784 Nocalhost \u7684\u6574\u4f53\u5de5\u4f5c\u793a\u610f\u56fe\u5982\u4e0b\uff1a IDE \u63d2\u4ef6 IDE \u63d2\u4ef6\u901a\u8fc7 nhctl \u548c nocalhost-api \u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u5f00\u53d1\u4f53\u9a8c\u3002\u4e3b\u8981\u63d0\u4f9b\u4e00\u952e\u5316\u529f\u80fd\uff0c\u5982\uff1a\u8fdb\u5165\u548c\u9000\u51fa\u5f00\u53d1\u6a21\u5f0f\uff0c\u6587\u4ef6\u540c\u6b65\uff0c\u7aef\u53e3\u8f6c\u53d1\u7b49 nhctl nhctl \u662f Nocalhost \u7684\u6838\u5fc3\u7ec4\u4ef6 nocalhost-web nocalhost-web \u63d0\u4f9b\u4e86\u4e00\u4e2a Web \u754c\u9762\u6765\u7ba1\u7406\u7528\u6237\uff0ckubernetes \u96c6\u7fa4\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpaces\u3002 nocalhost-api Nocalhost-api \u901a\u8fc7 Kubernetest api-server \u7ba1\u7406 kubernetes \u96c6\u7fa4\u4e2d\u7684 serviceAccount\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpace\uff0c\u5e76\u6301\u4e45\u5b58\u50a8\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4e3a IDE \u63d2\u4ef6\u7684\u4f7f\u7528\u63d0\u4f9b\u6570\u636e\u652f\u6301\u3002 nocalhost-dep nocalhost-dep \u4f7f\u7528 Kubernetes Admission Webhook\uff08\u7c7b\u4f3c\u4e8e Istio \u6ce8\u5165 Sidecar\uff09 \u53ef\u4ee5\u63a7\u5236\u542f\u52a8\u987a\u5e8f\uff0c\u4ee5\u89e3\u51b3\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u90e8\u7f72\u5fae\u670d\u52a1\u65f6\uff0c\u65e0\u6cd5\u63a7\u5236\u5fae\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u548c\u4f9d\u8d56\u6027\u7684\u95ee\u9898\u3002 \u90e8\u7f72\u5e94\u7528\u65f6\uff0cnocalhost-dep \u5c06\u81ea\u52a8\u5c06 InitContainers \u6ce8\u5165 workloads\u3002 \u6839\u636e\u58f0\u660e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0cnocalhost-dep \u4f1a\u7ee7\u7eed\u7b49\u5f85\u4f9d\u8d56\u670d\u52a1\u7684\u53ef\u7528\u6027\u3002 \u4e00\u65e6\u6240\u6709\u4f9d\u8d56\u670d\u52a1\u53ef\u7528\uff0cInitContainer \u9000\u51fa\uff0c\u7136\u540e\u542f\u52a8\u5bb9\u5668\u4e1a\u52a1\u903b\u8f91\u7684\u5bb9\u5668\u3002 \u6ca1\u6709\u91cd\u542f\uff0c\u8fd9\u610f\u5473\u7740\u7b49\u5f85\u542f\u52a8\u7684\u65f6\u95f4\u6700\u5c11\u3002 \u4e0b\u4e00\u6b65 \u901a\u8fc7 \u5feb\u901f\u5f00\u59cb \u4fbf\u6377\u7684\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5e94\u7528\u7684\u5f00\u53d1\u8fc7\u7a0b","title":"\u7b80\u4ecb"},{"location":"zh/introduction/#_1","text":"\u56e0\u4e3a\u5fae\u670d\u52a1\u5e26\u6765\u5f00\u53d1\u548c\u90e8\u7f72\u4e0a\u7684\u7075\u6d3b\u6027\u548c\u6280\u672f\u591a\u5411\u6027\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u4f01\u4e1a\u9009\u62e9\u4f7f\u7528\u5fae\u670d\u52a1\u67b6\u6784\u6784\u5efa\u5e94\u7528\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4e91\u539f\u751f\u6280\u672f\u548c Kubernetes \u7684\u9ad8\u901f\u53d1\u5c55\u548c\u666e\u53ca\uff0c\u4e5f\u8fdb\u4e00\u6b65\u89e3\u51b3\u4e86\u5fae\u670d\u52a1\u7684\u670d\u52a1\u8c03\u7528\u7684\u5f00\u9500\u3001\u5206\u5e03\u5f0f\u7cfb\u4e8b\u52a1\u3001\u8c03\u8bd5\u4e0e\u670d\u52a1\u6cbb\u7406\u7b49\u65b9\u9762\u7684\u96be\u9898\u3002\u56e0\u6b64\uff0c\u73b0\u4ee3\u5e94\u7528\u7684\u53d1\u5c55\u8d8b\u52bf\u4ece\u539f\u6765\u7684 \u201c\u5355\u4f53\u5e94\u7528 + \u4e91\u201d \u671d\u7740 \u201c\u5fae\u670d\u52a1 + \u4e91\u539f\u751f\u201d \u4e0d\u65ad\u6f14\u8fdb\u3002 \u8fd9\u4e2a\u5e94\u7528\u7684\u53d1\u5c55\u8d8b\u52bf\u867d\u7136\u6781\u5927\u63d0\u5347\u4e86\u5e94\u7528\u7684\u8fd0\u7ef4\u548c\u90e8\u7f72\u7684\u6548\u7387\uff0c\u4f46\u4e00\u4e2a\u5173\u952e\u8282\u70b9\u88ab\u5ffd\u7565\u4e86\uff1a\u5f00\u53d1\u9636\u6bb5 \u9996\u5148\uff0c\u867d\u7136 Kubernetes \u5728\u5e95\u5c42\u57fa\u7840\u67b6\u6784\u7ba1\u7406\u65b9\u9762\u8868\u73b0\u51fa\u8272\uff0c\u4f46\u5e26\u6765\u4e86\u989d\u5916\u7684\u590d\u6742\u6027\u548c\u9661\u5ced\u7684\u5b66\u4e60\u66f2\u7ebf\u3002Kubernetes \u7f3a\u4e4f\u9762\u5411\u5f00\u53d1\u4eba\u5458\u7684\u62bd\u8c61\u5f71\u54cd\u4e86\u5f00\u53d1\u4f53\u9a8c\uff0c\u964d\u4f4e\u4e86\u5f00\u53d1\u6548\u7387\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u4e0d\u5f97\u4e0d\u82b1\u8d39\u5927\u91cf\u7cbe\u529b\u5728\u6982\u5ff5\u5b66\u4e60\u3001\u7cfb\u7edf\u914d\u7f6e\u3001\u73af\u5883\u90e8\u7f72\u548c\u8d44\u6e90\u7ba1\u7406\u4e0a\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u4eca\u5f88\u591a\u4f01\u4e1a\u5728\u8fdb\u884c\u201c\u5fae\u670d\u52a1\u5316\u201d\u7684\u5b9e\u8df5\u4e2d\uff0c\u62c6\u5206\u7c92\u5ea6\u8fc7\u7ec6\uff0c\u5bfc\u81f4\u5fae\u670d\u52a1\u6570\u91cf\u8fdb\u4e00\u6b65\u5267\u589e\uff0c\u5404\u670d\u52a1\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u4e5f\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u5404\u79cd\u95ee\u9898\u5728\u60f3\u8981\u65b0\u589e\u9700\u6c42\u65f6\u5c24\u4e3a\u7a81\u51fa\u3002\u8fd9\u5bfc\u81f4\u5f00\u53d1\u4eba\u5458\u548c\u7ba1\u7406\u4eba\u5458\u9762\u4e34\u4e0b\u5217\u96be\u9898\uff1a \u5f00\u53d1\u4eba\u5458 \u5982\u4f55\u5feb\u901f\u542f\u52a8\u5b8c\u6574\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5982\u4f55\u5feb\u901f\u8c03\u8bd5\u8fd9\u4e9b\u51e0\u5341\u751a\u81f3\u6570\u767e\u7684\u5fae\u670d\u52a1\uff1f\u5f00\u53d1\u7684\u9700\u6c42\u4f9d\u8d56\u4e8e\u5176\u4ed6\u540c\u4e8b\u8be5\u600e\u4e48\u8054\u8c03\uff1f \u4e0e\u6b64\u540c\u65f6\uff0c\u5bb9\u5668\u5316\u6280\u672f\u867d\u7136\u89e3\u51b3\u4e86\u5fae\u670d\u52a1\u5e94\u7528\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u9636\u6bb5\u73af\u5883\u4e00\u81f4\u6027\u7684\u95ee\u9898\uff0c\u4f46\u968f\u4e4b\u800c\u6765\u7684\u5f00\u53d1\u53cd\u9988\u5faa\u73af\u6548\u7387\u95ee\u9898\u8ba9\u5f88\u591a\u5f00\u53d1\u56e2\u961f\u5934\u75db\u4e0d\u5df2\u3002\u6bcf\u6b21\u4ee3\u7801\u4fee\u6539\u540e\u5230\u53ef\u4ee5\u5728\u7ebf\u8c03\u8bd5\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u52a8\u8f84\u9700\u8981\u6570\u5206\u949f\u751a\u81f3\u5341\u5206\u949f\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u6781\u5927\u62d6\u7d2f\u4e86\u5f00\u53d1\u6548\u7387\u3002 \u56e0\u6b64\uff0c\u5c3d\u7ba1\u4f01\u4e1a\u53ef\u4ee5\u4ece \u201c\u5fae\u670d\u52a1 + \u4e91\u539f\u751f\u201d \u4e2d\u5f97\u76ca\uff0c\u4f46\u5b9e\u9645\u4e0a\u8bb8\u591a\u5f00\u53d1\u56e2\u961f\u7684\u5f00\u53d1\u6548\u7387\u4e0d\u5347\u53cd\u964d\uff0c\u5e76\u4e0d\u80fd\u4f53\u9a8c\u5230\u4e91\u539f\u751f\u6280\u672f\u5e26\u6765\u7684\u201c\u964d\u672c\u589e\u6548\u201d\u3002 \u6700\u7ec8\u7ed3\u679c\u662f\uff0c\u5bfc\u81f4\u4eba\u4eec\u5f00\u59cb\u8d28\u7591 Kubernetes \u5bf9\u5f00\u53d1\u4eba\u5458\u672c\u8eab\u7684\u4ef7\u503c\uff1a\u201c\u4e3a\u4ec0\u4e48\u8981\u70e6\u607c\u8fd9\u4e9b\u6240\u6709\u7684\u7ec6\u8282\u800c\u4e0d\u662f\u4e13\u6ce8\u4e8e\u4ee3\u7801\u5b9e\u73b0\uff1f\u201d\u3002","title":"\u52a8\u673a"},{"location":"zh/introduction/#nocalhost","text":"","title":"\u4ec0\u4e48\u662f Nocalhost?"},{"location":"zh/introduction/#_2","text":"Nocalhost \u662f\u4e00\u6b3e\u57fa\u4e8e IDE \u7684\u4e91\u539f\u751f\u5f00\u53d1\u5de5\u5177\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e91\u539f\u751f\u7684\u4e91\u7aef\u89e3\u51b3\u65b9\u6848\uff0c\u8ba9\u4e91\u539f\u751f\u5f00\u53d1\u66f4\u9ad8\u6548 \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883 \u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u4e00\u952e\u914d\u7f6e\u597d\u8fdc\u7aef Kubernetes \u5f00\u53d1\u73af\u5883\uff0c\u6446\u8131\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u90e8\u7f72\u590d\u6742\u5f00\u53d1\u73af\u5883\u7684\u70e6\u607c\u3002 \u65e0\u9700\u91cd\u5efa\u955c\u50cf\u6216\u91cd\u542f\u5bb9\u5668 \u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u672c\u5730\u4ee3\u7801\u4fee\u6539\u90fd\u4f1a\u7acb\u5373\u540c\u6b65\u5230\u8fdc\u7aef\u73af\u5883\uff0c\u5e76\u4e0d\u9700\u8981\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u6216\u91cd\u542f\u5bb9\u5668\uff0c\u5927\u5e45\u964d\u4f4e\u5f00\u53d1\u4eba\u5458\u5728\u4e91\u539f\u751f\u73af\u5883\u4e0b\u5f00\u53d1\u7684\u5faa\u73af\u53cd\u9988\u3002 \u72ec\u7acb\u9694\u79bb\u7684\u5f00\u53d1\u7a7a\u95f4 \u6bcf\u4f4d\u5f00\u53d1\u4eba\u5458\u90fd\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u5f00\u53d1\u7a7a\u95f4\uff0c\u4ee5\u786e\u4fdd\u5728\u5f00\u53d1\u5408\u548c\u6d4b\u8bd5\u8fc7\u7a0b\u548c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u53d7\u5230\u4ed6\u4eba\u7684\u5e72\u6270\u3002 \u53ef\u89c6\u5316\u672c\u5730\u7f16\u8f91\u5668\u63d2\u4ef6 Nocalhost \u4e3a JetBrains \u548c VSCode \u63d0\u4f9b\u4e86\u6613\u4e8e\u4f7f\u7528\u7684\u672c\u5730\u7f16\u8f91\u5668\u63d2\u4ef6\uff0c\u5f00\u53d1\u4eba\u5458\u65e0\u9700\u719f\u6089 kubectl \u547d\u4ee4\u5373\u53ef\u5feb\u901f\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u5feb\u901f\u5bf9\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5e94\u7528\u8fdb\u884c\u5f00\u53d1\u548c\u8fdc\u7a0b\u8c03\u8bd5\u3002","title":"\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u800c\u8a00"},{"location":"zh/introduction/#_3","text":"Nocalhost \u7684\u6574\u4f53\u5de5\u4f5c\u793a\u610f\u56fe\u5982\u4e0b\uff1a","title":"\u67b6\u6784"},{"location":"zh/introduction/#ide","text":"IDE \u63d2\u4ef6\u901a\u8fc7 nhctl \u548c nocalhost-api \u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u5f00\u53d1\u4f53\u9a8c\u3002\u4e3b\u8981\u63d0\u4f9b\u4e00\u952e\u5316\u529f\u80fd\uff0c\u5982\uff1a\u8fdb\u5165\u548c\u9000\u51fa\u5f00\u53d1\u6a21\u5f0f\uff0c\u6587\u4ef6\u540c\u6b65\uff0c\u7aef\u53e3\u8f6c\u53d1\u7b49","title":"IDE \u63d2\u4ef6"},{"location":"zh/introduction/#nhctl","text":"nhctl \u662f Nocalhost \u7684\u6838\u5fc3\u7ec4\u4ef6","title":"nhctl"},{"location":"zh/introduction/#nocalhost-web","text":"nocalhost-web \u63d0\u4f9b\u4e86\u4e00\u4e2a Web \u754c\u9762\u6765\u7ba1\u7406\u7528\u6237\uff0ckubernetes \u96c6\u7fa4\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpaces\u3002","title":"nocalhost-web"},{"location":"zh/introduction/#nocalhost-api","text":"Nocalhost-api \u901a\u8fc7 Kubernetest api-server \u7ba1\u7406 kubernetes \u96c6\u7fa4\u4e2d\u7684 serviceAccount\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpace\uff0c\u5e76\u6301\u4e45\u5b58\u50a8\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4e3a IDE \u63d2\u4ef6\u7684\u4f7f\u7528\u63d0\u4f9b\u6570\u636e\u652f\u6301\u3002","title":"nocalhost-api"},{"location":"zh/introduction/#nocalhost-dep","text":"nocalhost-dep \u4f7f\u7528 Kubernetes Admission Webhook\uff08\u7c7b\u4f3c\u4e8e Istio \u6ce8\u5165 Sidecar\uff09 \u53ef\u4ee5\u63a7\u5236\u542f\u52a8\u987a\u5e8f\uff0c\u4ee5\u89e3\u51b3\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u90e8\u7f72\u5fae\u670d\u52a1\u65f6\uff0c\u65e0\u6cd5\u63a7\u5236\u5fae\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u548c\u4f9d\u8d56\u6027\u7684\u95ee\u9898\u3002 \u90e8\u7f72\u5e94\u7528\u65f6\uff0cnocalhost-dep \u5c06\u81ea\u52a8\u5c06 InitContainers \u6ce8\u5165 workloads\u3002 \u6839\u636e\u58f0\u660e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0cnocalhost-dep \u4f1a\u7ee7\u7eed\u7b49\u5f85\u4f9d\u8d56\u670d\u52a1\u7684\u53ef\u7528\u6027\u3002 \u4e00\u65e6\u6240\u6709\u4f9d\u8d56\u670d\u52a1\u53ef\u7528\uff0cInitContainer \u9000\u51fa\uff0c\u7136\u540e\u542f\u52a8\u5bb9\u5668\u4e1a\u52a1\u903b\u8f91\u7684\u5bb9\u5668\u3002 \u6ca1\u6709\u91cd\u542f\uff0c\u8fd9\u610f\u5473\u7740\u7b49\u5f85\u542f\u52a8\u7684\u65f6\u95f4\u6700\u5c11\u3002","title":"nocalhost-dep"},{"location":"zh/introduction/#_4","text":"\u901a\u8fc7 \u5feb\u901f\u5f00\u59cb \u4fbf\u6377\u7684\u4e91\u539f\u751f\u5fae\u670d\u52a1\u5e94\u7528\u7684\u5f00\u53d1\u8fc7\u7a0b","title":"\u4e0b\u4e00\u6b65"},{"location":"zh/Blog/compare-with-x/","text":"Nocalhsot vs. Other Software \u8981\u5bf9\u6bd4\u4e0d\u540c\u8f6f\u4ef6\u4e4b\u95f4\u7684\u5dee\u522b\u662f\u56f0\u96be\u7684\uff0c\u5c24\u5176\u662f\u5f53\u95ee\u5230\u662f\u5426\u53ef\u4ee5\u7528\u5176\u4ed6\u8f6f\u4ef6\u6765\u66ff\u4ee3\uff1f\u4ee5\u53ca\u4e0d\u540c\u7684\u8f6f\u4ef6\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u534f\u540c\u5417\uff1f \u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06 Nocalhost \u4e0e\u5176\u4ed6\u7684\u8f6f\u4ef6\u8fdb\u884c\u6bd4\u8f83. \u5efa\u8bae\u5148\u9605\u8bfb \u201cNocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\u201d \uff0c\u4ed6\u4eec\u6709\u52a9\u4e8e\u7406\u89e3 Nocalhost \u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u8981\u52a0\u901f\u5728 Kubernetes \u73af\u5883\u4e0b\u7684\u5f00\u53d1\u76ee\u524d\u6709\u4e09\u79cd\u601d\u8def\uff1a \u76d1\u542c\u672c\u5730\u4ee3\u7801\u53d8\u66f4\uff0c\u53d1\u751f\u4fee\u6539\u540e\u7acb\u5373\u5728\u672c\u5730\u6267\u884c CI/CD \u6d41\u6c34\u7ebf\uff0c\u91cd\u65b0\u6784\u5efa\u5fae\u670d\u52a1\u955c\u50cf\u5e76\u4e14\u81ea\u52a8\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa4\u3002\u8fd9\u662f Google Cloud Code \u3001 Skaffold \u3001 Tilt \u7684\u505a\u6cd5\u3002 \u5c06\u8981\u5f00\u53d1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66ff\u6362\u4e3a Proxy \u7f51\u7edc\u4ee3\u7406\u5bb9\u5668\uff0c\u8f6c\u53d1\u96c6\u7fa4\u5185\u7684\u6d41\u91cf\u5230\u672c\u5730\uff0c\u4ee5\u53ca\u8f6c\u53d1\u672c\u5730\u7684\u6d41\u91cf\u5230\u96c6\u7fa4\u3002\u672c\u5730\u4f7f\u7528 docker run \u8fd0\u884c\u5fae\u670d\u52a1\u5bb9\u5668\u3002\u8fd9\u662f Telepresence \u7684\u505a\u6cd5\u3002 \u5c06\u8981\u5f00\u53d1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66ff\u6362\u4e3a\u5f00\u53d1\u5bb9\u5668\uff0c\u5e76\u5c06\u672c\u5730\u4ee3\u7801\u548c\u8fdc\u7aef\u76ee\u5f55\u6620\u5c04\uff0c\u6784\u5efa\u548c\u8fd0\u884c\u5fae\u670d\u52a1\u90fd\u5728\u8fdc\u7aef\u5bb9\u5668\u5185\u3002\u8fd9\u662f Nocalhost \u7684\u505a\u6cd5\u3002 \u6b64\u5916\uff0c Nocalhost \u8fd8\u63d0\u4f9b\u4e86\u5e94\u7528\u7ba1\u7406\u3001\u5f00\u53d1\u73af\u5883\u7ba1\u7406\u3001VS Code \u63d2\u4ef6\u3001IDEA \u63d2\u4ef6\u7b49\u6709\u5229\u4e8e\u6807\u51c6\u5316\u4ee5\u53ca\u52a0\u901f\u5f00\u53d1\u7684\u80fd\u529b\u3002 \u60a8\u53ef\u4ee5\u70b9\u51fb\u5de6\u4fa7\u7684\u83dc\u5355\u6d4f\u89c8 Nocalhost \u4e0e\u7279\u5b9a\u8f6f\u4ef6\u7684\u5bf9\u6bd4\u3002 \u8fd9\u4e9b\u6bd4\u8f83\u5e76\u4e0d\u662f\u8bf4\u670d\u60a8\u4f7f\u7528 Nocalhost\uff0c\u4e5f\u4e0d\u662f\u6709\u610f\u8d2c\u4f4e\u5176\u4ed6\u7684\u8f6f\u4ef6\u3002\u6211\u4eec\u7684\u76ee\u6807\u53ea\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3 Nocalhost \u4e0e\u5176\u4ed6\u8f6f\u4ef6\u5728\u529f\u80fd\u4e0a\u7684\u5dee\u5f02\uff0c\u5982\u679c\u60a8\u8ba4\u4e3a\u4efb\u4f55\u9648\u8ff0\u7684\u4e8b\u5b9e\u4e0d\u6b63\u786e\uff0c\u6b22\u8fce\u63d0\u4ea4 PR \u6539\u8fdb\u3002 Telepresence Telepresence \u901a\u8fc7\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u7f51\u7edc\u4ee3\u7406\u7684 Pod\uff0c\u8be5 Pod \u4f1a\u5c06 Kubernetes \u73af\u5883\u7684\u6570\u636e\uff08\u4f8b\u5982\uff1aTCP \u8fde\u63a5\u3001\u73af\u5883\u53d8\u91cf\u3001\u5377\uff09\u4ee3\u7406\u5230\u672c\u5730\u8fdb\u7a0b\u3002\u672c\u5730\u8fdb\u7a0b\u901a\u8fc7\u4ee3\u7406\u7684\u65b9\u5f0f\u8fde\u63a5\u5230\u8fdc\u7aef Kubernetes \u96c6\u7fa4\uff0c\u4ee5\u4fbf\u76f4\u63a5\u901a\u8fc7 DNS \u65b9\u5f0f\u8bbf\u95ee\u8fdc\u7aef\u5fae\u670d\u52a1\u3002 Telepresence \u7684\u7406\u5ff5\u975e\u5e38\u597d\uff0c\u4f46\u5177\u6709\u4ee5\u4e0b\u7f3a\u70b9\uff1a \u5728\u67d0\u4e9b\u53d7\u63a7\u7684\u7f51\u7edc\u73af\u5883\u4e0b\u53ef\u80fd\u65e0\u6cd5\u4e0e\u8fdc\u7aef\u96c6\u7fa4\u5efa\u7acb VPN \u8fde\u63a5\u3002 \u672c\u5730\u4f7f\u7528 Docker Run \u7684\u65b9\u5f0f\u8fd0\u884c\u670d\u52a1\uff0c\u53ef\u80fd\u548c Pod \u7684\u8fd0\u884c\u65b9\u5f0f\u5b58\u5728\u4e00\u5b9a\u5dee\u5f02\uff0c\u4f8b\u5982\u65e0\u6cd5\u6a21\u62df InitContainer \u4f7f\u7528 sshfs \u6765\u6302\u8f7d\u8fdc\u7aef\u7684\u5377\uff0c\u65e0\u6cd5\u652f\u6301\u6ca1\u6709 WSL \u7684 Windows\u3002 \u5f00\u53d1\u3001\u8c03\u8bd5\u6d41\u7a0b\u4e0d\u8fde\u7eed\uff0c\u9700\u8981\u5728\u4e0d\u540c\u9636\u6bb5\u4eba\u5de5\u6267\u884c\u6570\u6761\u547d\u4ee4\u3002 Tilt, Skaffold, Google Cloud Code Tilt, Skaffold, Google Cloud Code \u90fd\u53ef\u4ee5\u81ea\u52a8\u6267\u884c\u4ece\u672c\u5730\u4ee3\u7801\u66f4\u6539\u5230\u66f4\u65b0\u8fc7\u7a0b\u7684\u6240\u6709\u6b65\u9aa4\uff1a\u76d1\u89c6\u672c\u5730\u6587\u4ef6\uff0c\u91cd\u65b0\u6784\u5efa\u5bb9\u5668\u6620\u50cf\u5e76\u66f4\u65b0\u73af\u5883\uff0c\u5c31\u50cf\u662f\u81ea\u52a8\u5316\u7684 docker build && docker push && kubectl apply \u6216 docker-compose up \uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u672c\u5730\u7684 CI/CD \u5de5\u5177\u3002 \u4ed6\u4eec\u90fd\u65e0\u6cd5\u907f\u514d\u6bcf\u6b21\u66f4\u65b0\u4ee3\u7801\u90fd\u9700\u8981\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u5e76\u66f4\u65b0\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8fc7\u7a0b\u3002Tilt\u63a8\u51fa\u4e86\u4e00\u79cd\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u7684\u65b9\u6cd5 \u201clive_update\u201d \uff0c\u914d\u7f6e\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u5e76\u4e14\u4e5f\u53ea\u662f\u7f29\u77ed\u4e86 docker build \u7684\u65f6\u95f4\u3002 Skaffold \u5177\u6709 beta \u7248\u7684\u6587\u4ef6\u540c\u6b65\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u672c\u5730\u7684\u6539\u52a8\u6253\u5305\u6210 tar \u5e76\u540c\u6b65\u5230\u5bb9\u5668\u4e2d\uff0c\u65e0\u9700\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u3001\u91cd\u65b0\u90e8\u7f72\u548c\u91cd\u542f POD\uff0c\u4f46\u76ee\u524d\u4ecd\u7136\u6709\u4e00\u4e9b\u4f7f\u7528\u9650\u5236\u3002 Google Cloud Code \u9664\u4e86\u80fd\u591f\u81ea\u52a8\u8fdb\u884c CI/CD \u6d41\u7a0b\u4ee5\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4fbf\u4e8e\u5f00\u53d1\u7684 VS Code \u548c IDEA \u63d2\u4ef6\uff0c\u4f46\u5176\u4e0e Google \u7684\u4e91\u670d\u52a1\u6709\u8f83\u5f3a\u7684\u7ed1\u5b9a\u3002","title":"\u548c\u5176\u5b83\u8f6f\u4ef6\u7684\u5bf9\u6bd4"},{"location":"zh/Blog/compare-with-x/#nocalhsot-vs-other-software","text":"\u8981\u5bf9\u6bd4\u4e0d\u540c\u8f6f\u4ef6\u4e4b\u95f4\u7684\u5dee\u522b\u662f\u56f0\u96be\u7684\uff0c\u5c24\u5176\u662f\u5f53\u95ee\u5230\u662f\u5426\u53ef\u4ee5\u7528\u5176\u4ed6\u8f6f\u4ef6\u6765\u66ff\u4ee3\uff1f\u4ee5\u53ca\u4e0d\u540c\u7684\u8f6f\u4ef6\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u534f\u540c\u5417\uff1f \u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06 Nocalhost \u4e0e\u5176\u4ed6\u7684\u8f6f\u4ef6\u8fdb\u884c\u6bd4\u8f83. \u5efa\u8bae\u5148\u9605\u8bfb \u201cNocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\u201d \uff0c\u4ed6\u4eec\u6709\u52a9\u4e8e\u7406\u89e3 Nocalhost \u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u8981\u52a0\u901f\u5728 Kubernetes \u73af\u5883\u4e0b\u7684\u5f00\u53d1\u76ee\u524d\u6709\u4e09\u79cd\u601d\u8def\uff1a \u76d1\u542c\u672c\u5730\u4ee3\u7801\u53d8\u66f4\uff0c\u53d1\u751f\u4fee\u6539\u540e\u7acb\u5373\u5728\u672c\u5730\u6267\u884c CI/CD \u6d41\u6c34\u7ebf\uff0c\u91cd\u65b0\u6784\u5efa\u5fae\u670d\u52a1\u955c\u50cf\u5e76\u4e14\u81ea\u52a8\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa4\u3002\u8fd9\u662f Google Cloud Code \u3001 Skaffold \u3001 Tilt \u7684\u505a\u6cd5\u3002 \u5c06\u8981\u5f00\u53d1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66ff\u6362\u4e3a Proxy \u7f51\u7edc\u4ee3\u7406\u5bb9\u5668\uff0c\u8f6c\u53d1\u96c6\u7fa4\u5185\u7684\u6d41\u91cf\u5230\u672c\u5730\uff0c\u4ee5\u53ca\u8f6c\u53d1\u672c\u5730\u7684\u6d41\u91cf\u5230\u96c6\u7fa4\u3002\u672c\u5730\u4f7f\u7528 docker run \u8fd0\u884c\u5fae\u670d\u52a1\u5bb9\u5668\u3002\u8fd9\u662f Telepresence \u7684\u505a\u6cd5\u3002 \u5c06\u8981\u5f00\u53d1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66ff\u6362\u4e3a\u5f00\u53d1\u5bb9\u5668\uff0c\u5e76\u5c06\u672c\u5730\u4ee3\u7801\u548c\u8fdc\u7aef\u76ee\u5f55\u6620\u5c04\uff0c\u6784\u5efa\u548c\u8fd0\u884c\u5fae\u670d\u52a1\u90fd\u5728\u8fdc\u7aef\u5bb9\u5668\u5185\u3002\u8fd9\u662f Nocalhost \u7684\u505a\u6cd5\u3002 \u6b64\u5916\uff0c Nocalhost \u8fd8\u63d0\u4f9b\u4e86\u5e94\u7528\u7ba1\u7406\u3001\u5f00\u53d1\u73af\u5883\u7ba1\u7406\u3001VS Code \u63d2\u4ef6\u3001IDEA \u63d2\u4ef6\u7b49\u6709\u5229\u4e8e\u6807\u51c6\u5316\u4ee5\u53ca\u52a0\u901f\u5f00\u53d1\u7684\u80fd\u529b\u3002 \u60a8\u53ef\u4ee5\u70b9\u51fb\u5de6\u4fa7\u7684\u83dc\u5355\u6d4f\u89c8 Nocalhost \u4e0e\u7279\u5b9a\u8f6f\u4ef6\u7684\u5bf9\u6bd4\u3002 \u8fd9\u4e9b\u6bd4\u8f83\u5e76\u4e0d\u662f\u8bf4\u670d\u60a8\u4f7f\u7528 Nocalhost\uff0c\u4e5f\u4e0d\u662f\u6709\u610f\u8d2c\u4f4e\u5176\u4ed6\u7684\u8f6f\u4ef6\u3002\u6211\u4eec\u7684\u76ee\u6807\u53ea\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3 Nocalhost \u4e0e\u5176\u4ed6\u8f6f\u4ef6\u5728\u529f\u80fd\u4e0a\u7684\u5dee\u5f02\uff0c\u5982\u679c\u60a8\u8ba4\u4e3a\u4efb\u4f55\u9648\u8ff0\u7684\u4e8b\u5b9e\u4e0d\u6b63\u786e\uff0c\u6b22\u8fce\u63d0\u4ea4 PR \u6539\u8fdb\u3002","title":"Nocalhsot vs. Other Software"},{"location":"zh/Blog/compare-with-x/#telepresence","text":"Telepresence \u901a\u8fc7\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u7f51\u7edc\u4ee3\u7406\u7684 Pod\uff0c\u8be5 Pod \u4f1a\u5c06 Kubernetes \u73af\u5883\u7684\u6570\u636e\uff08\u4f8b\u5982\uff1aTCP \u8fde\u63a5\u3001\u73af\u5883\u53d8\u91cf\u3001\u5377\uff09\u4ee3\u7406\u5230\u672c\u5730\u8fdb\u7a0b\u3002\u672c\u5730\u8fdb\u7a0b\u901a\u8fc7\u4ee3\u7406\u7684\u65b9\u5f0f\u8fde\u63a5\u5230\u8fdc\u7aef Kubernetes \u96c6\u7fa4\uff0c\u4ee5\u4fbf\u76f4\u63a5\u901a\u8fc7 DNS \u65b9\u5f0f\u8bbf\u95ee\u8fdc\u7aef\u5fae\u670d\u52a1\u3002 Telepresence \u7684\u7406\u5ff5\u975e\u5e38\u597d\uff0c\u4f46\u5177\u6709\u4ee5\u4e0b\u7f3a\u70b9\uff1a \u5728\u67d0\u4e9b\u53d7\u63a7\u7684\u7f51\u7edc\u73af\u5883\u4e0b\u53ef\u80fd\u65e0\u6cd5\u4e0e\u8fdc\u7aef\u96c6\u7fa4\u5efa\u7acb VPN \u8fde\u63a5\u3002 \u672c\u5730\u4f7f\u7528 Docker Run \u7684\u65b9\u5f0f\u8fd0\u884c\u670d\u52a1\uff0c\u53ef\u80fd\u548c Pod \u7684\u8fd0\u884c\u65b9\u5f0f\u5b58\u5728\u4e00\u5b9a\u5dee\u5f02\uff0c\u4f8b\u5982\u65e0\u6cd5\u6a21\u62df InitContainer \u4f7f\u7528 sshfs \u6765\u6302\u8f7d\u8fdc\u7aef\u7684\u5377\uff0c\u65e0\u6cd5\u652f\u6301\u6ca1\u6709 WSL \u7684 Windows\u3002 \u5f00\u53d1\u3001\u8c03\u8bd5\u6d41\u7a0b\u4e0d\u8fde\u7eed\uff0c\u9700\u8981\u5728\u4e0d\u540c\u9636\u6bb5\u4eba\u5de5\u6267\u884c\u6570\u6761\u547d\u4ee4\u3002","title":"Telepresence"},{"location":"zh/Blog/compare-with-x/#tilt-skaffold-google-cloud-code","text":"Tilt, Skaffold, Google Cloud Code \u90fd\u53ef\u4ee5\u81ea\u52a8\u6267\u884c\u4ece\u672c\u5730\u4ee3\u7801\u66f4\u6539\u5230\u66f4\u65b0\u8fc7\u7a0b\u7684\u6240\u6709\u6b65\u9aa4\uff1a\u76d1\u89c6\u672c\u5730\u6587\u4ef6\uff0c\u91cd\u65b0\u6784\u5efa\u5bb9\u5668\u6620\u50cf\u5e76\u66f4\u65b0\u73af\u5883\uff0c\u5c31\u50cf\u662f\u81ea\u52a8\u5316\u7684 docker build && docker push && kubectl apply \u6216 docker-compose up \uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u672c\u5730\u7684 CI/CD \u5de5\u5177\u3002 \u4ed6\u4eec\u90fd\u65e0\u6cd5\u907f\u514d\u6bcf\u6b21\u66f4\u65b0\u4ee3\u7801\u90fd\u9700\u8981\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u5e76\u66f4\u65b0\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8fc7\u7a0b\u3002Tilt\u63a8\u51fa\u4e86\u4e00\u79cd\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u7684\u65b9\u6cd5 \u201clive_update\u201d \uff0c\u914d\u7f6e\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u5e76\u4e14\u4e5f\u53ea\u662f\u7f29\u77ed\u4e86 docker build \u7684\u65f6\u95f4\u3002 Skaffold \u5177\u6709 beta \u7248\u7684\u6587\u4ef6\u540c\u6b65\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u672c\u5730\u7684\u6539\u52a8\u6253\u5305\u6210 tar \u5e76\u540c\u6b65\u5230\u5bb9\u5668\u4e2d\uff0c\u65e0\u9700\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u3001\u91cd\u65b0\u90e8\u7f72\u548c\u91cd\u542f POD\uff0c\u4f46\u76ee\u524d\u4ecd\u7136\u6709\u4e00\u4e9b\u4f7f\u7528\u9650\u5236\u3002 Google Cloud Code \u9664\u4e86\u80fd\u591f\u81ea\u52a8\u8fdb\u884c CI/CD \u6d41\u7a0b\u4ee5\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4fbf\u4e8e\u5f00\u53d1\u7684 VS Code \u548c IDEA \u63d2\u4ef6\uff0c\u4f46\u5176\u4e0e Google \u7684\u4e91\u670d\u52a1\u6709\u8f83\u5f3a\u7684\u7ed1\u5b9a\u3002","title":"Tilt, Skaffold, Google Cloud Code"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/","text":"Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883 \u524d\u8a00 \u968f\u7740\u4e1a\u52a1\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u6280\u672f\u90e8\u95e8\u7684\u7ec4\u7ec7\u67b6\u6784\u5728\u6a2a\u5411\u53ca\u7eb5\u5411\u4e0d\u65ad\u6269\u5927\u548c\u8c03\u6574\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u4f01\u4e1a\u7684\u751f\u4ea7\u8d44\u6599\uff1a\u5e94\u7528\u7cfb\u7edf\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u5e9e\u5927\u3002\u4e3a\u4e86\u8ba9\u5e94\u7528\u7cfb\u7edf\u9002\u914d\u4f01\u4e1a\u7ec4\u7ec7\u67b6\u6784\u7684\u8c03\u6574\uff0c\u68b3\u7406\u7ec4\u7ec7\u67b6\u6784\u5bf9\u4e8e\u5e94\u7528\u6743\u8d23\u7684\u8fb9\u754c\uff0c\u5927\u90e8\u5206\u7ec4\u7ec7\u4f1a\u9009\u62e9\u4f7f\u7528\u201c\u5fae\u670d\u52a1\u201d\u67b6\u6784\u6765\u5bf9\u5e94\u7528\u7cfb\u7edf\u8fdb\u884c\u6a2a\u5411\u62c6\u5206\uff0c\u4f7f\u5f97\u5e94\u7528\u7cfb\u7edf\u7684\u7ef4\u62a4\u8fb9\u754c\u9002\u914d\u7ec4\u7ec7\u67b6\u6784\u7684\u6743\u8d23\u8fb9\u754c\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u8d8a\u5e9e\u5927\u7684\u7ec4\u7ec7\u67b6\u6784\uff0c\u5e94\u7528\u7cfb\u7edf\u4f1a\u88ab\u62c6\u5206\u5730\u8d8a\u6765\u8d8a\u7ec6\uff0c\u201c\u5fae\u670d\u52a1\u201d\u7684\u6570\u91cf\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u591a\u3002\u800c\u5728\u201c\u5fae\u670d\u52a1\u201d\u7684\u62c6\u5206\u7684\u5b9e\u8df5\u4e2d\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u5c06\u7ec4\u7ec7\u67b6\u6784\u7684\u6743\u8d23\u8fb9\u754c\u4e00\u80a1\u8111\u5730\u5bf9\u6807\u5230\u201c\u5fae\u670d\u52a1\u201d\b\u7684\u62c6\u5206\u7c92\u5ea6\u4e2d\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u201c\u5fae\u670d\u52a1\u201d\u62c6\u5206\u7c92\u5ea6\u8fc7\u7ec6\uff0c\u6570\u91cf\u8fdb\u4e00\u6b65\u5267\u589e\u7684\u95ee\u9898\u3002\u6700\u7ec8\uff0c\u201c\u5fae\u670d\u52a1\u201d\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u5c31\u50cf\u8de8\u90e8\u95e8\u534f\u4f5c\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u95ee\u9898\u5728\u60f3\u8981\u65b0\u589e\u9700\u6c42\u65f6\u5c24\u4e3a\u7a81\u51fa\u3002 \u201c\u5fae\u670d\u52a1\u201d\u5e26\u6765\u4fbf\u5229\u7684\u540c\u65f6\uff0c\u5bf9\u5f00\u53d1\u4eba\u5458\u800c\u8a00\uff0c\u8fd8\u5e26\u6765\u4e86\u989d\u5916\u7684\u6311\u6218\uff1a\u5982\u4f55\u5feb\u901f\u542f\u52a8\u5b8c\u6574\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5f00\u53d1\u7684\u9700\u6c42\u4f9d\u8d56\u4e8e\u5176\u4ed6\u540c\u4e8b\u600e\u4e48\u8054\u8c03\uff1f\u5982\u4f55\u5feb\u901f\u8c03\u8bd5\u8fd9\u4e9b\u5fae\u670d\u52a1\uff1f \u800c\u5bf9\u4e8e\u7ba1\u7406\u4eba\u5458\u6765\u8bf4\uff0c\u4e5f\u540c\u6837\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u7684\u6311\u6218\uff1a\u5982\u4f55\u7ba1\u7406\u5f00\u53d1\u4eba\u5458\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5982\u4f55\u8ba9\u65b0\u5165\u804c\u7684\u540c\u4e8b\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\uff1f \u8bd5\u60f3\u4e00\u4e0b\uff0c\u8981\u5f00\u53d1\u7531 200 \u4e2a\u201c\u5fae\u670d\u52a1\u201d\u7ec4\u6210\u7684\u4e91\u539f\u751f\u5e94\u7528\uff0c\u4f1a\u9047\u5230\u54ea\u4e9b\u56f0\u96be\u5462\uff1f Localhost \u65f6\u4ee3 \u5728\u5355\u4f53\u5e94\u7528\u7684\u65f6\u4ee3\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u6781\u4e3a\u53cb\u597d\u7684\uff0c\b\u5f00\u53d1\u8005\u4f7f\u7528\u672c\u673a\u8fd0\u884c\u5e94\u7528\uff0c\u4fee\u6539\u4ee3\u7801\u540e\u5b9e\u65f6\u751f\u6548\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee Localhost \u5b9e\u65f6\u67e5\u770b\u4ee3\u7801\u6548\u679c\u3002 \u5355\u4f53\u5e94\u7528\u548c\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u4e0d\u540c\uff0c\u5355\u4f53\u5e94\u7528\u662f \u201cALL-IN-ONE\u201d \u7ec4\u7ec7\u65b9\u5f0f\uff0c\u6240\u6709\u7684\u8c03\u7528\u5173\u7cfb\u4ec5\u9650\u4e8e\u5728\u81ea\u8eab\u7684\u7c7b\u548c\u51fd\u6570\uff0c\u5e94\u7528\u5bf9\u786c\u4ef6\u7684\u8981\u6c42\u4e00\u822c\u4e5f\u4e0d\u4f1a\u592a\u9ad8\u3002 \u800c\u5f00\u53d1\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u5219\u5927\u4e0d\u76f8\u540c\uff0c\u7531\u4e8e\u76f8\u4e92\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u9700\u8981\u5f00\u53d1\u67d0\u4e00\u4e2a\u529f\u80fd\u6216\u5fae\u670d\u52a1\u65f6\uff0c\u4e0d\u5f97\u4e0d\u5c06\u6240\u6709\u4f9d\u8d56\u7684\u670d\u52a1\u90fd\u542f\u52a8\u8d77\u6765\u3002\u968f\u7740\u5fae\u670d\u52a1\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5f00\u53d1\u5e94\u7528\u6240\u9700\u8981\u7684\u672c\u5730\u8d44\u6e90\u8d8a\u6765\u8d8a\u591a\uff0c\u6700\u7ec8\u5bfc\u81f4\u672c\u5730\u65e0\u6cd5\u6ee1\u8db3\u5f00\u53d1\u7684\u914d\u7f6e\u9700\u6c42\u3002 \u4e91\u539f\u751f\u89e3\u653e\u4e86\u90e8\u7f72\u548c\u8fd0\u7ef4\uff0c\u5f00\u53d1\u5462\uff1f \u4e91\u539f\u751f\u548c Kubernetes \u7684\u666e\u53ca\uff0c\u8fdb\u4e00\u6b65\u5c4f\u853d\u4e86\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u4e3b\u8981\u4f53\u73b0\u5728\u90e8\u7f72\u548c\u8fd0\u7ef4\u9636\u6bb5\u3002 \u4e3a\u4e86\u89e3\u51b3\u5fae\u670d\u52a1\u5e94\u7528\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u9636\u6bb5\u73af\u5883\u4e00\u81f4\u6027\u7684\u95ee\u9898\uff0c\u73b0\u4ee3\u7684\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1\uff0c\u90fd\u4f1a\u5c06\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u6253\u5305\u6210 Docker \u955c\u50cf\uff0c\u5e76\u4ee5\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f62\u5f0f\u5bf9\u5176\u8fdb\u884c\u90e8\u7f72\u3002\u5229\u7528 DevOps \u6d41\u6c34\u7ebf\u4e2d\u7684\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u90e8\u7f72\uff0c\u914d\u5408 Kubernetes \u63a2\u9488\u3001HPA\u3001\u5e94\u7528\u81ea\u6108\u7684\u80fd\u529b\uff0c\u5f7b\u5e95\u89e3\u653e\u4e86\u5fae\u670d\u52a1\u5e94\u7528\u7684\u90e8\u7f72\u548c\u8fd0\u7ef4\u73af\u8282\u3002 \u4f46\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4e2a\u5173\u952e\u8282\u70b9\uff1a\u5f00\u53d1\u9636\u6bb5 \u5fae\u670d\u52a1\u5e94\u7528\u4f7f\u7528 Kubernetes \u5de5\u4f5c\u8d1f\u8f7d\u5c01\u88c5\u540e\uff0c\u89e3\u51b3\u4e86\u5f00\u53d1\u8fc7\u7a0b\u5e94\u7528\u7684\u5feb\u901f\u542f\u52a8\u95ee\u9898\uff0c\u5f00\u53d1\u4eba\u5458\u53ea\u9700\u8981\u5728\u672c\u5730\u5b89\u88c5\u5355\u8282\u70b9\u7684 Kubernetes \u96c6\u7fa4\uff0c\u4f8b\u5982 Minikube\u3001Kind \u7b49\u5373\u53ef\u5feb\u901f\u542f\u52a8\u5fae\u670d\u52a1\u5e94\u7528\u3002 \u4f46\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u539f\u6765\u5355\u4f53\u5e94\u7528\u7684\u5f00\u53d1\u4f53\u9a8c\u53d8\u5f97\u4e0d\u590d\u5b58\u5728\uff0c\u7531\u4e8e\u5e94\u7528\u5f88\u96be\u5728 Docker \u5bb9\u5668\u4e4b\u5916\u8fd0\u884c\uff0c\u6240\u4ee5\u6bcf\u6b21\u4ee3\u7801\u4fee\u6539\uff0c\u90fd\u9700\u8981\u7ecf\u5386\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u6267\u884c docker build \u6784\u5efa\u955c\u50cf \u6267\u884c docker tag \u5bf9\u955c\u50cf\u8fdb\u884c\u6807\u8bb0 \u6267\u884c docker push \u63a8\u9001\u955c\u50cf\u5230\u4ed3\u5e93 \u4fee\u6539 Kubernetes \u5de5\u4f5c\u8d1f\u8f7d\u7684\u955c\u50cf\u7248\u672c \u7b49\u5f85\u955c\u50cf\u62c9\u53d6\u7ed3\u675f \u7b49\u5f85 Pod \u91cd\u5efa \u67e5\u770b\u4fee\u6539\u540e\u7684\u4ee3\u7801\u6548\u679c \u8fd9\u76f4\u63a5\u62d6\u6162\u4e86\u5f00\u53d1\u7684\u5faa\u73af\u53cd\u9988\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u4fee\u6539\uff0c\u52a8\u8f84\u9700\u8981\u6570\u5206\u949f\u751a\u81f3\u5341\u5206\u949f\u7684\u7b49\u5f85\u65f6\u95f4\u3002 Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883 Nocalhost \u662f\u4e00\u4e2a\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u5e0c\u671b\u8ba9\u5f00\u53d1\u4e91\u539f\u751f\u5e94\u7528\u50cf\u5f00\u53d1\u5355\u4f53\u5e94\u7528\u539f\u59cb\u53c8\u7b80\u5355\u3002 Nocalhost \u91cd\u65b0\u68b3\u7406\u4e86\u5f00\u53d1\u8fc7\u7a0b\u6240\u6d89\u53ca\u5230\u7684\u89d2\u8272\u548c\u8d44\u6e90\uff1a \u56e2\u961f\u7ba1\u7406\u4eba\u5458 \u5f00\u53d1\u8005 \u5e94\u7528 \u96c6\u7fa4 \u5f00\u53d1\u7a7a\u95f4 \u901a\u8fc7\u5bf9\u8fd9\u4e9b\u89d2\u8272\u548c\u8d44\u6e90\u7684\u91cd\u65b0\u6574\u5408\uff0cNocalhost \u91cd\u65b0\u5b9a\u4e49\u4e86\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u5e76\u5e26\u6765\u4e86\u5168\u65b0\u7684\u4e91\u539f\u751f\u5f00\u53d1\u4f53\u9a8c\u3002 \u4e3a\u4e86\u5feb\u901f\u7406\u89e3 Nocalhost \u91cd\u65b0\u5b9a\u4e49\u7684\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u7ad9\u5728\u4e0d\u540c\u7684\u89d2\u8272\u6765\u770b Nocalhost \u80fd\u7ed9\u4ed6\u4eec\u5e26\u6765\u4ec0\u4e48\u3002 \u5f00\u53d1\u4eba\u5458\uff1a \u6446\u8131\u6bcf\u6b21\u4fee\u6539\u9700\u8981\u91cd\u65b0 build \u65b0\u955c\u50cf\u4ee5\u53ca\u957f\u65f6\u95f4\u7684\u5faa\u73af\u53cd\u9988\uff0c\u4fee\u6539\u4ee3\u7801\u7acb\u5373\u751f\u6548 \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883\uff0c\u6446\u8131\u672c\u5730\u73af\u5883\u642d\u5efa\u548c\u8d44\u6e90\u4e0d\u8db3\u7684\u9650\u5236 \u672c\u5730 IDE \u7f16\u8f91\u5668\u548c\u5f00\u53d1\u73af\u5883\u8054\u52a8\uff0c\u652f\u6301\u8fdc\u7a0b\u8c03\u8bd5 \u56fe\u5f62\u5316\u7684 IDE \u63d2\u4ef6\uff0c\u65e0\u9700\u719f\u6089 kubectl \u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u4e91\u539f\u751f\u73af\u5883\u4e0b\u7684\u5f00\u53d1 \u7ba1\u7406\u4eba\u5458\uff1a \u7edf\u4e00\u7ba1\u7406\u5fae\u670d\u52a1\u5e94\u7528\u5305\uff0c\u964d\u4f4e\u5e94\u7528\u7684\u7ef4\u62a4\u6210\u672c \u7edf\u4e00\u7ba1\u7406\u5f00\u53d1\u73af\u5883\u548c\u96c6\u7fa4\uff0c\u63d0\u9ad8\u96c6\u7fa4\u8d44\u6e90\u7684\u5229\u7528\u7387\uff0c\u540c\u65f6\u5177\u5907\u9694\u79bb\u7279\u6027 \u4e3a\u65b0\u5458\u5de5\u5feb\u901f\u5206\u914d\u5f00\u53d1\u73af\u5883\uff0c\u5206\u914d\u73af\u5883\u540e\u7acb\u523b\u80fd\u8fdb\u884c\u5e94\u7528\u5f00\u53d1 \u5f39\u6027\u7684\u5f00\u53d1\u73af\u5883\u8d44\u6e90\uff0c\u7528\u5b8c\u9500\u6bc1\uff0c\u964d\u4f4e\u5f00\u53d1\u6210\u672c \u4ee5 Nocalhost \u5185\u7f6e\u7684 Demo \uff1a Bookinfo \u4e3a\u4f8b\uff0c\u5f00\u53d1 Productpage \u5fae\u670d\u52a1\uff0c\u53d8\u6210\u4e86\u4ee5\u4e0b\u7b80\u5355\u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883 \u73af\u5883\u90e8\u7f72\u5b8c\u6210\uff0c\u9009\u62e9\u8981\u5f00\u53d1\u7684\u7ec4\u4ef6\uff0c\u70b9\u51fb\u201c\u9524\u5b50\u201d\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f \u514b\u9686\u4e1a\u52a1\u4ee3\u7801\u6216\u9009\u62e9\u672c\u5730\u4ee3\u7801\u76ee\u5f55\u6253\u5f00 \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\uff0c\u672c\u5730\u4fee\u6539\u4ee3\u7801\u5e76\u4fdd\u5b58\uff0c\u65e0\u9700\u91cd\u65b0\u6784\u5efa\u955c\u50cf\uff0c\u8fdc\u7aef\u5f00\u53d1\u73af\u5883\u5b9e\u65f6\u751f\u6548\uff0c\u652f\u6301\u8fdc\u7a0b\u8c03\u8bd5 \u843d\u5730\u6848\u4f8b \u76ee\u524d\uff0c\u817e\u8baf\u4e91 CODING DevOps\uff08\u8fd1 200 \u5fae\u670d\u52a1\uff09\u6b63\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u8df5\u9a8c\u8bc1 Nocalhost \u80fd\u591f\u5927\u5927\u63d0\u9ad8\u5f00\u53d1\b\u6548\u7387\uff0c\u7f29\u77ed\u5faa\u73af\u53cd\u9988\u3002 \u5f00\u6e90\u4e0e\u793e\u533a\u5171\u5efa Nocalhost \u76ee\u524d\u662f 100% \u5f00\u6e90\u7684\uff0c\u4ee3\u7801\u6258\u7ba1\u5728 Github\uff1ahttps://github.com/nocalhost/nocalhost.git\uff0c\u5e76\u9075\u5faa Apache-2.0 \u5f00\u6e90\u534f\u8bae\uff0c\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002 \u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Nocalhost \u7684\u4fe1\u606f\uff0c\u6b22\u8fce\u8bbf\u95ee\u5b98\u7f51\uff1ahttps://nocalhost.dev \u83b7\u53d6\u3002","title":"Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#nocalhost-","text":"","title":"Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#_1","text":"\u968f\u7740\u4e1a\u52a1\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u6280\u672f\u90e8\u95e8\u7684\u7ec4\u7ec7\u67b6\u6784\u5728\u6a2a\u5411\u53ca\u7eb5\u5411\u4e0d\u65ad\u6269\u5927\u548c\u8c03\u6574\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u4f01\u4e1a\u7684\u751f\u4ea7\u8d44\u6599\uff1a\u5e94\u7528\u7cfb\u7edf\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u5e9e\u5927\u3002\u4e3a\u4e86\u8ba9\u5e94\u7528\u7cfb\u7edf\u9002\u914d\u4f01\u4e1a\u7ec4\u7ec7\u67b6\u6784\u7684\u8c03\u6574\uff0c\u68b3\u7406\u7ec4\u7ec7\u67b6\u6784\u5bf9\u4e8e\u5e94\u7528\u6743\u8d23\u7684\u8fb9\u754c\uff0c\u5927\u90e8\u5206\u7ec4\u7ec7\u4f1a\u9009\u62e9\u4f7f\u7528\u201c\u5fae\u670d\u52a1\u201d\u67b6\u6784\u6765\u5bf9\u5e94\u7528\u7cfb\u7edf\u8fdb\u884c\u6a2a\u5411\u62c6\u5206\uff0c\u4f7f\u5f97\u5e94\u7528\u7cfb\u7edf\u7684\u7ef4\u62a4\u8fb9\u754c\u9002\u914d\u7ec4\u7ec7\u67b6\u6784\u7684\u6743\u8d23\u8fb9\u754c\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u8d8a\u5e9e\u5927\u7684\u7ec4\u7ec7\u67b6\u6784\uff0c\u5e94\u7528\u7cfb\u7edf\u4f1a\u88ab\u62c6\u5206\u5730\u8d8a\u6765\u8d8a\u7ec6\uff0c\u201c\u5fae\u670d\u52a1\u201d\u7684\u6570\u91cf\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u591a\u3002\u800c\u5728\u201c\u5fae\u670d\u52a1\u201d\u7684\u62c6\u5206\u7684\u5b9e\u8df5\u4e2d\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u5c06\u7ec4\u7ec7\u67b6\u6784\u7684\u6743\u8d23\u8fb9\u754c\u4e00\u80a1\u8111\u5730\u5bf9\u6807\u5230\u201c\u5fae\u670d\u52a1\u201d\b\u7684\u62c6\u5206\u7c92\u5ea6\u4e2d\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u201c\u5fae\u670d\u52a1\u201d\u62c6\u5206\u7c92\u5ea6\u8fc7\u7ec6\uff0c\u6570\u91cf\u8fdb\u4e00\u6b65\u5267\u589e\u7684\u95ee\u9898\u3002\u6700\u7ec8\uff0c\u201c\u5fae\u670d\u52a1\u201d\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u5c31\u50cf\u8de8\u90e8\u95e8\u534f\u4f5c\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u95ee\u9898\u5728\u60f3\u8981\u65b0\u589e\u9700\u6c42\u65f6\u5c24\u4e3a\u7a81\u51fa\u3002 \u201c\u5fae\u670d\u52a1\u201d\u5e26\u6765\u4fbf\u5229\u7684\u540c\u65f6\uff0c\u5bf9\u5f00\u53d1\u4eba\u5458\u800c\u8a00\uff0c\u8fd8\u5e26\u6765\u4e86\u989d\u5916\u7684\u6311\u6218\uff1a\u5982\u4f55\u5feb\u901f\u542f\u52a8\u5b8c\u6574\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5f00\u53d1\u7684\u9700\u6c42\u4f9d\u8d56\u4e8e\u5176\u4ed6\u540c\u4e8b\u600e\u4e48\u8054\u8c03\uff1f\u5982\u4f55\u5feb\u901f\u8c03\u8bd5\u8fd9\u4e9b\u5fae\u670d\u52a1\uff1f \u800c\u5bf9\u4e8e\u7ba1\u7406\u4eba\u5458\u6765\u8bf4\uff0c\u4e5f\u540c\u6837\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u7684\u6311\u6218\uff1a\u5982\u4f55\u7ba1\u7406\u5f00\u53d1\u4eba\u5458\u7684\u5f00\u53d1\u73af\u5883\uff1f\u5982\u4f55\u8ba9\u65b0\u5165\u804c\u7684\u540c\u4e8b\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\uff1f \u8bd5\u60f3\u4e00\u4e0b\uff0c\u8981\u5f00\u53d1\u7531 200 \u4e2a\u201c\u5fae\u670d\u52a1\u201d\u7ec4\u6210\u7684\u4e91\u539f\u751f\u5e94\u7528\uff0c\u4f1a\u9047\u5230\u54ea\u4e9b\u56f0\u96be\u5462\uff1f","title":"\u524d\u8a00"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#localhost","text":"\u5728\u5355\u4f53\u5e94\u7528\u7684\u65f6\u4ee3\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u6781\u4e3a\u53cb\u597d\u7684\uff0c\b\u5f00\u53d1\u8005\u4f7f\u7528\u672c\u673a\u8fd0\u884c\u5e94\u7528\uff0c\u4fee\u6539\u4ee3\u7801\u540e\u5b9e\u65f6\u751f\u6548\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee Localhost \u5b9e\u65f6\u67e5\u770b\u4ee3\u7801\u6548\u679c\u3002 \u5355\u4f53\u5e94\u7528\u548c\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u4e0d\u540c\uff0c\u5355\u4f53\u5e94\u7528\u662f \u201cALL-IN-ONE\u201d \u7ec4\u7ec7\u65b9\u5f0f\uff0c\u6240\u6709\u7684\u8c03\u7528\u5173\u7cfb\u4ec5\u9650\u4e8e\u5728\u81ea\u8eab\u7684\u7c7b\u548c\u51fd\u6570\uff0c\u5e94\u7528\u5bf9\u786c\u4ef6\u7684\u8981\u6c42\u4e00\u822c\u4e5f\u4e0d\u4f1a\u592a\u9ad8\u3002 \u800c\u5f00\u53d1\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u5219\u5927\u4e0d\u76f8\u540c\uff0c\u7531\u4e8e\u76f8\u4e92\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u9700\u8981\u5f00\u53d1\u67d0\u4e00\u4e2a\u529f\u80fd\u6216\u5fae\u670d\u52a1\u65f6\uff0c\u4e0d\u5f97\u4e0d\u5c06\u6240\u6709\u4f9d\u8d56\u7684\u670d\u52a1\u90fd\u542f\u52a8\u8d77\u6765\u3002\u968f\u7740\u5fae\u670d\u52a1\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5f00\u53d1\u5e94\u7528\u6240\u9700\u8981\u7684\u672c\u5730\u8d44\u6e90\u8d8a\u6765\u8d8a\u591a\uff0c\u6700\u7ec8\u5bfc\u81f4\u672c\u5730\u65e0\u6cd5\u6ee1\u8db3\u5f00\u53d1\u7684\u914d\u7f6e\u9700\u6c42\u3002","title":"Localhost \u65f6\u4ee3"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#_2","text":"\u4e91\u539f\u751f\u548c Kubernetes \u7684\u666e\u53ca\uff0c\u8fdb\u4e00\u6b65\u5c4f\u853d\u4e86\u201c\u5fae\u670d\u52a1\u201d\u5e94\u7528\u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u4e3b\u8981\u4f53\u73b0\u5728\u90e8\u7f72\u548c\u8fd0\u7ef4\u9636\u6bb5\u3002 \u4e3a\u4e86\u89e3\u51b3\u5fae\u670d\u52a1\u5e94\u7528\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u9636\u6bb5\u73af\u5883\u4e00\u81f4\u6027\u7684\u95ee\u9898\uff0c\u73b0\u4ee3\u7684\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1\uff0c\u90fd\u4f1a\u5c06\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u6253\u5305\u6210 Docker \u955c\u50cf\uff0c\u5e76\u4ee5\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f62\u5f0f\u5bf9\u5176\u8fdb\u884c\u90e8\u7f72\u3002\u5229\u7528 DevOps \u6d41\u6c34\u7ebf\u4e2d\u7684\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u90e8\u7f72\uff0c\u914d\u5408 Kubernetes \u63a2\u9488\u3001HPA\u3001\u5e94\u7528\u81ea\u6108\u7684\u80fd\u529b\uff0c\u5f7b\u5e95\u89e3\u653e\u4e86\u5fae\u670d\u52a1\u5e94\u7528\u7684\u90e8\u7f72\u548c\u8fd0\u7ef4\u73af\u8282\u3002 \u4f46\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4e2a\u5173\u952e\u8282\u70b9\uff1a\u5f00\u53d1\u9636\u6bb5 \u5fae\u670d\u52a1\u5e94\u7528\u4f7f\u7528 Kubernetes \u5de5\u4f5c\u8d1f\u8f7d\u5c01\u88c5\u540e\uff0c\u89e3\u51b3\u4e86\u5f00\u53d1\u8fc7\u7a0b\u5e94\u7528\u7684\u5feb\u901f\u542f\u52a8\u95ee\u9898\uff0c\u5f00\u53d1\u4eba\u5458\u53ea\u9700\u8981\u5728\u672c\u5730\u5b89\u88c5\u5355\u8282\u70b9\u7684 Kubernetes \u96c6\u7fa4\uff0c\u4f8b\u5982 Minikube\u3001Kind \u7b49\u5373\u53ef\u5feb\u901f\u542f\u52a8\u5fae\u670d\u52a1\u5e94\u7528\u3002 \u4f46\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u539f\u6765\u5355\u4f53\u5e94\u7528\u7684\u5f00\u53d1\u4f53\u9a8c\u53d8\u5f97\u4e0d\u590d\u5b58\u5728\uff0c\u7531\u4e8e\u5e94\u7528\u5f88\u96be\u5728 Docker \u5bb9\u5668\u4e4b\u5916\u8fd0\u884c\uff0c\u6240\u4ee5\u6bcf\u6b21\u4ee3\u7801\u4fee\u6539\uff0c\u90fd\u9700\u8981\u7ecf\u5386\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u6267\u884c docker build \u6784\u5efa\u955c\u50cf \u6267\u884c docker tag \u5bf9\u955c\u50cf\u8fdb\u884c\u6807\u8bb0 \u6267\u884c docker push \u63a8\u9001\u955c\u50cf\u5230\u4ed3\u5e93 \u4fee\u6539 Kubernetes \u5de5\u4f5c\u8d1f\u8f7d\u7684\u955c\u50cf\u7248\u672c \u7b49\u5f85\u955c\u50cf\u62c9\u53d6\u7ed3\u675f \u7b49\u5f85 Pod \u91cd\u5efa \u67e5\u770b\u4fee\u6539\u540e\u7684\u4ee3\u7801\u6548\u679c \u8fd9\u76f4\u63a5\u62d6\u6162\u4e86\u5f00\u53d1\u7684\u5faa\u73af\u53cd\u9988\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u4fee\u6539\uff0c\u52a8\u8f84\u9700\u8981\u6570\u5206\u949f\u751a\u81f3\u5341\u5206\u949f\u7684\u7b49\u5f85\u65f6\u95f4\u3002","title":"\u4e91\u539f\u751f\u89e3\u653e\u4e86\u90e8\u7f72\u548c\u8fd0\u7ef4\uff0c\u5f00\u53d1\u5462\uff1f"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#nocalhost-_1","text":"Nocalhost \u662f\u4e00\u4e2a\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u5e0c\u671b\u8ba9\u5f00\u53d1\u4e91\u539f\u751f\u5e94\u7528\u50cf\u5f00\u53d1\u5355\u4f53\u5e94\u7528\u539f\u59cb\u53c8\u7b80\u5355\u3002 Nocalhost \u91cd\u65b0\u68b3\u7406\u4e86\u5f00\u53d1\u8fc7\u7a0b\u6240\u6d89\u53ca\u5230\u7684\u89d2\u8272\u548c\u8d44\u6e90\uff1a \u56e2\u961f\u7ba1\u7406\u4eba\u5458 \u5f00\u53d1\u8005 \u5e94\u7528 \u96c6\u7fa4 \u5f00\u53d1\u7a7a\u95f4 \u901a\u8fc7\u5bf9\u8fd9\u4e9b\u89d2\u8272\u548c\u8d44\u6e90\u7684\u91cd\u65b0\u6574\u5408\uff0cNocalhost \u91cd\u65b0\u5b9a\u4e49\u4e86\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u5e76\u5e26\u6765\u4e86\u5168\u65b0\u7684\u4e91\u539f\u751f\u5f00\u53d1\u4f53\u9a8c\u3002 \u4e3a\u4e86\u5feb\u901f\u7406\u89e3 Nocalhost \u91cd\u65b0\u5b9a\u4e49\u7684\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u7ad9\u5728\u4e0d\u540c\u7684\u89d2\u8272\u6765\u770b Nocalhost \u80fd\u7ed9\u4ed6\u4eec\u5e26\u6765\u4ec0\u4e48\u3002 \u5f00\u53d1\u4eba\u5458\uff1a \u6446\u8131\u6bcf\u6b21\u4fee\u6539\u9700\u8981\u91cd\u65b0 build \u65b0\u955c\u50cf\u4ee5\u53ca\u957f\u65f6\u95f4\u7684\u5faa\u73af\u53cd\u9988\uff0c\u4fee\u6539\u4ee3\u7801\u7acb\u5373\u751f\u6548 \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883\uff0c\u6446\u8131\u672c\u5730\u73af\u5883\u642d\u5efa\u548c\u8d44\u6e90\u4e0d\u8db3\u7684\u9650\u5236 \u672c\u5730 IDE \u7f16\u8f91\u5668\u548c\u5f00\u53d1\u73af\u5883\u8054\u52a8\uff0c\u652f\u6301\u8fdc\u7a0b\u8c03\u8bd5 \u56fe\u5f62\u5316\u7684 IDE \u63d2\u4ef6\uff0c\u65e0\u9700\u719f\u6089 kubectl \u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u4e91\u539f\u751f\u73af\u5883\u4e0b\u7684\u5f00\u53d1 \u7ba1\u7406\u4eba\u5458\uff1a \u7edf\u4e00\u7ba1\u7406\u5fae\u670d\u52a1\u5e94\u7528\u5305\uff0c\u964d\u4f4e\u5e94\u7528\u7684\u7ef4\u62a4\u6210\u672c \u7edf\u4e00\u7ba1\u7406\u5f00\u53d1\u73af\u5883\u548c\u96c6\u7fa4\uff0c\u63d0\u9ad8\u96c6\u7fa4\u8d44\u6e90\u7684\u5229\u7528\u7387\uff0c\u540c\u65f6\u5177\u5907\u9694\u79bb\u7279\u6027 \u4e3a\u65b0\u5458\u5de5\u5feb\u901f\u5206\u914d\u5f00\u53d1\u73af\u5883\uff0c\u5206\u914d\u73af\u5883\u540e\u7acb\u523b\u80fd\u8fdb\u884c\u5e94\u7528\u5f00\u53d1 \u5f39\u6027\u7684\u5f00\u53d1\u73af\u5883\u8d44\u6e90\uff0c\u7528\u5b8c\u9500\u6bc1\uff0c\u964d\u4f4e\u5f00\u53d1\u6210\u672c \u4ee5 Nocalhost \u5185\u7f6e\u7684 Demo \uff1a Bookinfo \u4e3a\u4f8b\uff0c\u5f00\u53d1 Productpage \u5fae\u670d\u52a1\uff0c\u53d8\u6210\u4e86\u4ee5\u4e0b\u7b80\u5355\u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4e00\u952e\u90e8\u7f72\u5f00\u53d1\u73af\u5883 \u73af\u5883\u90e8\u7f72\u5b8c\u6210\uff0c\u9009\u62e9\u8981\u5f00\u53d1\u7684\u7ec4\u4ef6\uff0c\u70b9\u51fb\u201c\u9524\u5b50\u201d\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f \u514b\u9686\u4e1a\u52a1\u4ee3\u7801\u6216\u9009\u62e9\u672c\u5730\u4ee3\u7801\u76ee\u5f55\u6253\u5f00 \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\uff0c\u672c\u5730\u4fee\u6539\u4ee3\u7801\u5e76\u4fdd\u5b58\uff0c\u65e0\u9700\u91cd\u65b0\u6784\u5efa\u955c\u50cf\uff0c\u8fdc\u7aef\u5f00\u53d1\u73af\u5883\u5b9e\u65f6\u751f\u6548\uff0c\u652f\u6301\u8fdc\u7a0b\u8c03\u8bd5","title":"Nocalhost - \u91cd\u65b0\u5b9a\u4e49\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#_3","text":"\u76ee\u524d\uff0c\u817e\u8baf\u4e91 CODING DevOps\uff08\u8fd1 200 \u5fae\u670d\u52a1\uff09\u6b63\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u8df5\u9a8c\u8bc1 Nocalhost \u80fd\u591f\u5927\u5927\u63d0\u9ad8\u5f00\u53d1\b\u6548\u7387\uff0c\u7f29\u77ed\u5faa\u73af\u53cd\u9988\u3002","title":"\u843d\u5730\u6848\u4f8b"},{"location":"zh/Blog/redefine-cloud-native-dev-environment/#_4","text":"Nocalhost \u76ee\u524d\u662f 100% \u5f00\u6e90\u7684\uff0c\u4ee3\u7801\u6258\u7ba1\u5728 Github\uff1ahttps://github.com/nocalhost/nocalhost.git\uff0c\u5e76\u9075\u5faa Apache-2.0 \u5f00\u6e90\u534f\u8bae\uff0c\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002 \u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Nocalhost \u7684\u4fe1\u606f\uff0c\u6b22\u8fce\u8bbf\u95ee\u5b98\u7f51\uff1ahttps://nocalhost.dev \u83b7\u53d6\u3002","title":"\u5f00\u6e90\u4e0e\u793e\u533a\u5171\u5efa"},{"location":"zh/FAQ/faq-installation/","text":"Kubernetes \u7248\u672c\u652f\u6301 Nocalhost \u652f\u6301 Major:\"1\", Minor:\"12+\" \u4ee5\u4e0a\u7684 k8s \u7248\u672c\uff0c\u4e0d\u8fc7\u6211\u4eec\u63a8\u8350\u4f7f\u7528 v1.16+\u3002 \u56e0\u4e3a 1.16+ \u53ef\u4ee5\u652f\u6301 \u670d\u52a1\u4f9d\u8d56\u529f\u80fd \uff1a Ensure that the Kubernetes cluster is at least as new as v1.16 (to use admissionregistration.k8s.io/v1 ), or v1.9 (to use admissionregistration.k8s.io/v1beta1 ). Ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled. Here is a recommended set of admission controllers to enable in general. Ensure that the admissionregistration.k8s.io/v1 or admissionregistration.k8s.io/v1beta1 API is enabled. \u53ef\u4ee5\u770b\u770b k8s \u7684\u6587\u6863 adminssion web hooks . \u589e\u52a0 Inotify Limit \u5982\u679c\u4f60\u7684\u6587\u4ef6\u5728 linux \u4e2d\u540c\u6b65\u592a\u6162\uff0c\u5f88\u53ef\u80fd\u662f\u7531\u4e8e inotify \u9650\u5236\u3002 \u5982\u4f55\u589e\u52a0 inotify limit \u786e\u4fdd filesystem watcher \u6b63\u5e38\u5de5\u4f5c\uff1f Linux \u901a\u5e38\u9650\u5236\u6bcf\u4e2a\u7528\u6237\u7684\u76d1\u89c6\u6570\u91cf\uff08\u901a\u5e38\u4e3a 8192\uff09\u3002 \u5f53\u60a8\u6709\u66f4\u591a\u76ee\u5f55\u65f6\uff0c\u60a8\u9700\u8981\u8c03\u6574\u8be5\u6570\u5b57\u3002 \u5728\u8bb8\u591a Linux \u53d1\u884c\u7248\u4e0a\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4fee\u590d\u5b83\uff1a echo \"fs.inotify.max_user_watches=204800\" | sudo tee -a /etc/sysctl.conf \u5728 Arch Linux \u548c\u5176\u4ed6\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u5c06\u6b64\u884c\u5199\u5165\u5355\u72ec\u7684\u6587\u4ef6\uff0c\u5373\u60a8\u5e94\u8be5\u8fd0\u884c\uff1a echo \"fs.inotify.max_user_watches=204800\" | sudo tee -a /etc/sysctl.d/90-override.conf \u8fd9\u4ec5\u5728\u91cd\u65b0\u542f\u52a8\u540e\u751f\u6548\u3002 \u8981\u7acb\u5373\u8c03\u6574\u9650\u5236\uff0c\u8bf7\u8fd0\u884c\uff1a sudo sh -c 'echo 204800 > /proc/sys/fs/inotify/max_user_watches' Nocalhost \u4e3a\u4ec0\u4e48\u65e0\u6cd5\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u514b\u9686\u4ee3\u7801\uff1f \u76ee\u524d\u4e0d\u652f\u6301\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002 \u65e0\u53ef\u7528\u7684 pv \u6211\u4eec\u4e0d\u4f1a\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa pv \uff0c\u5982\u679c\u4f60\u7684 pvc \u5904\u4e8e pending \u72b6\u6001\uff0c\u663e\u793a no persistent volumes available for this claim and no storage class is set \uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u6839\u636e\u4e0b\u9762\u914d\u7f6e\u6765\u521b\u5efa\u4e00\u4e2a pv\uff1a apiVersion: v1 kind: PersistentVolume metadata: name: nocalhost-mariadb-pv-volume labels: type: local spec: storageClassName: \"\" persistentVolumeReclaimPolicy: Recycle volumeMode: Filesystem capacity: storage: 20Gi accessModes: - ReadWriteOnce hostPath: path: \"/foo/bar\" \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c storageClassName \u5fc5\u987b\u662f\u7a7a\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u7ed1\u5b9a\u3002\u53e6\u5916\uff0c\u6ce8\u610f storage \u9700\u8981\u5927\u4e8e 10G\uff08\u5927\u4e8e pvc \u6240\u58f0\u660e\u7684\u5927\u5c0f\uff09 nocalhost \u9700\u8981\u7528\u5230 mariadb \uff0c\u800c\u4e14\u5b83\u9ed8\u8ba4\u4f7f\u7528\u7684\u7528\u6237\u662f mysql . \u6240\u4ee5\u4f60\u9700\u8981\u4fee\u6539 pv \u6302\u8f7d\u76ee\u5f55\u7684\u6743\u9650\uff1a chown -R 1001:1001 /foo/bar","title":"\u5b89\u88c5\u4e2d\u5e38\u89c1\u95ee\u9898"},{"location":"zh/FAQ/faq-installation/#kubernetes","text":"Nocalhost \u652f\u6301 Major:\"1\", Minor:\"12+\" \u4ee5\u4e0a\u7684 k8s \u7248\u672c\uff0c\u4e0d\u8fc7\u6211\u4eec\u63a8\u8350\u4f7f\u7528 v1.16+\u3002 \u56e0\u4e3a 1.16+ \u53ef\u4ee5\u652f\u6301 \u670d\u52a1\u4f9d\u8d56\u529f\u80fd \uff1a Ensure that the Kubernetes cluster is at least as new as v1.16 (to use admissionregistration.k8s.io/v1 ), or v1.9 (to use admissionregistration.k8s.io/v1beta1 ). Ensure that MutatingAdmissionWebhook and ValidatingAdmissionWebhook admission controllers are enabled. Here is a recommended set of admission controllers to enable in general. Ensure that the admissionregistration.k8s.io/v1 or admissionregistration.k8s.io/v1beta1 API is enabled. \u53ef\u4ee5\u770b\u770b k8s \u7684\u6587\u6863 adminssion web hooks .","title":"Kubernetes \u7248\u672c\u652f\u6301"},{"location":"zh/FAQ/faq-installation/#inotify-limit","text":"\u5982\u679c\u4f60\u7684\u6587\u4ef6\u5728 linux \u4e2d\u540c\u6b65\u592a\u6162\uff0c\u5f88\u53ef\u80fd\u662f\u7531\u4e8e inotify \u9650\u5236\u3002","title":"\u589e\u52a0 Inotify Limit"},{"location":"zh/FAQ/faq-installation/#inotify-limit-filesystem-watcher","text":"Linux \u901a\u5e38\u9650\u5236\u6bcf\u4e2a\u7528\u6237\u7684\u76d1\u89c6\u6570\u91cf\uff08\u901a\u5e38\u4e3a 8192\uff09\u3002 \u5f53\u60a8\u6709\u66f4\u591a\u76ee\u5f55\u65f6\uff0c\u60a8\u9700\u8981\u8c03\u6574\u8be5\u6570\u5b57\u3002 \u5728\u8bb8\u591a Linux \u53d1\u884c\u7248\u4e0a\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u4fee\u590d\u5b83\uff1a echo \"fs.inotify.max_user_watches=204800\" | sudo tee -a /etc/sysctl.conf \u5728 Arch Linux \u548c\u5176\u4ed6\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u5c06\u6b64\u884c\u5199\u5165\u5355\u72ec\u7684\u6587\u4ef6\uff0c\u5373\u60a8\u5e94\u8be5\u8fd0\u884c\uff1a echo \"fs.inotify.max_user_watches=204800\" | sudo tee -a /etc/sysctl.d/90-override.conf \u8fd9\u4ec5\u5728\u91cd\u65b0\u542f\u52a8\u540e\u751f\u6548\u3002 \u8981\u7acb\u5373\u8c03\u6574\u9650\u5236\uff0c\u8bf7\u8fd0\u884c\uff1a sudo sh -c 'echo 204800 > /proc/sys/fs/inotify/max_user_watches'","title":"\u5982\u4f55\u589e\u52a0 inotify limit \u786e\u4fdd filesystem watcher \u6b63\u5e38\u5de5\u4f5c\uff1f"},{"location":"zh/FAQ/faq-installation/#nocalhost-ssh","text":"\u76ee\u524d\u4e0d\u652f\u6301\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"Nocalhost \u4e3a\u4ec0\u4e48\u65e0\u6cd5\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u514b\u9686\u4ee3\u7801\uff1f"},{"location":"zh/FAQ/faq-installation/#pv","text":"\u6211\u4eec\u4e0d\u4f1a\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa pv \uff0c\u5982\u679c\u4f60\u7684 pvc \u5904\u4e8e pending \u72b6\u6001\uff0c\u663e\u793a no persistent volumes available for this claim and no storage class is set \uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u6839\u636e\u4e0b\u9762\u914d\u7f6e\u6765\u521b\u5efa\u4e00\u4e2a pv\uff1a apiVersion: v1 kind: PersistentVolume metadata: name: nocalhost-mariadb-pv-volume labels: type: local spec: storageClassName: \"\" persistentVolumeReclaimPolicy: Recycle volumeMode: Filesystem capacity: storage: 20Gi accessModes: - ReadWriteOnce hostPath: path: \"/foo/bar\" \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c storageClassName \u5fc5\u987b\u662f\u7a7a\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u7ed1\u5b9a\u3002\u53e6\u5916\uff0c\u6ce8\u610f storage \u9700\u8981\u5927\u4e8e 10G\uff08\u5927\u4e8e pvc \u6240\u58f0\u660e\u7684\u5927\u5c0f\uff09 nocalhost \u9700\u8981\u7528\u5230 mariadb \uff0c\u800c\u4e14\u5b83\u9ed8\u8ba4\u4f7f\u7528\u7684\u7528\u6237\u662f mysql . \u6240\u4ee5\u4f60\u9700\u8981\u4fee\u6539 pv \u6302\u8f7d\u76ee\u5f55\u7684\u6743\u9650\uff1a chown -R 1001:1001 /foo/bar","title":"\u65e0\u53ef\u7528\u7684 pv"},{"location":"zh/FAQ/faq-using/","text":"Nocalhost \u5982\u4f55\u786e\u5b9a\u7531 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u5e94\u4e8e\u914d\u7f6e\u4e2d\u7684\u54ea\u4e2a\u670d\u52a1\uff1f \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNocalhost \u901a\u8fc7\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u540d\u79f0\u6765\u8bc6\u522b\u670d\u52a1\u7684\u3002\u4f46\u901a\u8fc7 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u6709\u53ef\u80fd\u662f\u901a\u8fc7 Chart \u6a21\u677f\u751f\u6210\u7684\u3002 \u5982\u679c Chart \u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0cNocalhost \u4f1a\u901a\u8fc7\u67e5\u627e\u4ee5 <release-name>-<service-name> \u5f62\u5f0f\u547d\u540d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6765\u4f5c\u4e3a\u5bf9\u5e94\u7684\u670d\u52a1\u3002\u4f8b\u5982\uff0cconfig.yaml \u5b9a\u4e49\u4e86\u5982\u4e0b\u7684\u670d\u52a1\uff1a ... services: - name: productpage serviceType: deployment \u5f53\u6211\u4eec\u901a\u8fc7 nhctl (Helm) \u5b89\u88c5\u4e0b\u9762\u7684\u5e94\u7528\uff1a $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s \u5982\u679c\u96c6\u7fa4\u4e2d\u6ca1\u6709\u540d\u4e3a productpage \u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5219 Nocalhost \u4f1a\u628a dev-productpage \u8ba4\u4e3a\u662f\u7528\u6237\u5728 config.yaml \u4e2d\u914d\u7f6e\u7684 productpage \u670d\u52a1\u3002 \u5982\u679c Chart \u4e0d\u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0c\u6216\u5de5\u4f5c\u8d1f\u8f7d\u4e0d\u662f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u5b89\u88c5\u7684\uff0cNocalhost \u5219\u65e0\u6cd5\u786e\u5b9a config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u6240\u5bf9\u5e94\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u914d\u7f6e\u51c6\u786e\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002 \u5efa\u8bae\u5728 Helm Chart \u4e2d\u4f7f\u7528\u9759\u6001\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002 Nocalhost \u652f\u6301\u5f00\u53d1\u8fd0\u884c\u591a\u5bb9\u5668 Pod \u7684\u7ec4\u4ef6\uff08\u670d\u52a1\uff09\u5417\uff1f \u5728 V2 \u7248\u672c\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u53ef\u4ee5\u5bf9\u540c\u4e00\u4e2a Pod \u7684\u591a\u4e2a\u5bb9\u5668\u58f0\u660e\u5f00\u53d1\u914d\u7f6e\u5373\u53ef\u6307\u5b9a\u5f00\u53d1\u54ea\u4e2a\u5bb9\u5668\u3002 \u4e3a\u4ec0\u4e48\u5728 Windows \u4e0b\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u65e0\u6cd5\u7f16\u8bd1\u4ee3\u7801\uff1f \u8fd9\u79cd\u60c5\u51b5\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u6362\u884c\u7b26\u4e0d\u540c\u5bfc\u81f4\u7684\u3002\u4f8b\u5982\uff0c\u7f16\u8bd1\u76ee\u6807\u73af\u5883\u4e3a Linux \u7684\u4ee3\u7801\uff0c\u6362\u884c\u7b26\u4e3a \\n \uff0c\u800c\u5728 Windows \u4e0b\u68c0\u51fa\u3001\u7f16\u8bd1\u6216\u683c\u5f0f\u5316\u7b49\u64cd\u4f5c\u90fd\u6709\u53ef\u80fd\u5bfc\u81f4\u4ee3\u7801\u7684\u6362\u884c\u7b26\u88ab\u8f6c\u6362\u6210 \\r\\n \u3002\u6362\u884c\u7b26\u7684\u53d8\u5316\u4f1a\u5bfc\u81f4\u90e8\u5206\u6784\u5efa\u5de5\u5177\uff08\u5982 Gradle\uff09\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u6240\u4ee5\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u524d\uff0c\u8bf7\u5148\u6839\u636e\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u597d\u672c\u5730\u5f00\u53d1\u73af\u5883\u3002 git: Windows \u4e0b\u9ed8\u8ba4\u4f1a\u5f00\u542f\u6362\u884c\u7b26\u81ea\u52a8\u8f6c\u6362\uff0c\u5373 git checkout \u65f6\u5c06 \\n \u8f6c\u6362\u6210 \\r\\n \uff0c git commit \u65f6\u5c06 \\r\\n \u8f6c\u6362\u6210 \\n \u3002\u5982\u9700\u914d\u7f6e\uff0c\u8bf7\u53c2\u8003 Git \u5b98\u65b9\u6587\u6863 \uff1b Visual Studio Code: Windows \u4e0b\u9ed8\u8ba4\u4f7f\u7528 \\r\\n \u3002\u5982\u9700\u4fee\u6539\u5168\u5c40\u914d\u7f6e\uff0c\u4f9d\u6b21\u8fdb\u5165 File -> Preferences -> Settings -> Text Editor -> Files -> Eol\uff1b\u5982\u9700\u4fee\u6539\u5355\u4e2a\u6587\u4ef6\u914d\u7f6e\uff0c\u76f4\u63a5\u5355\u51fb\u53f3\u4e0b\u89d2\u72b6\u6001\u680f\u4e0a\u7684 CRLF \u6216 LF \u8fdb\u884c\u5207\u6362\uff1b IntelliJ IDEA: Windows \u4e0b\u9ed8\u8ba4\u4f7f\u7528 \\r\\n \u3002\u5982\u9700\u4fee\u6539\u914d\u7f6e\uff0c\u4f9d\u6b21\u8fdb\u5165 File -> Settings -> Editor -> Code Style -> Line seperator\u3002 Nocalhost \u652f\u6301\u5f00\u53d1\u5177\u5907 HPA (Horizontal Pod Autoscaler) \u63a7\u5236\u7684 Deployment \u5417\uff1f \u4e0d\u652f\u6301\u3002\u5efa\u8bae\u5728\u90e8\u7f72\u5e94\u7528\u5b8c\u6bd5\u540e\uff0c\u5148\u53bb\u5220\u9664 HPA \u63a7\u5236\u5668\uff0c\u518d\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5bf9\u6307\u5b9a\u670d\u52a1\u8fdb\u884c\u5f00\u53d1\u3002 \u4e3a\u4ec0\u4e48\u6ca1\u6709\u6ce8\u518c\u94fe\u63a5\uff1f\u600e\u4e48\u767b\u5f55 Nocalhost Web\uff1f Nocalhost \u4e0d\u652f\u6301\u7528\u6237\u6ce8\u518c\u3002Nocalhost \u670d\u52a1\u5668\u76ee\u524d\u662f\u8bbe\u8ba1\u7ed9\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u8d26\u6237\u90ae\u7bb1\u5bc6\u7801\u767b\u5f55\u3002 \u9ed8\u8ba4\u90ae\u7bb1\uff1a admin@admin.com \u9ed8\u8ba4\u5bc6\u7801\uff1a 123456 \u767b\u5f55\u540e\uff0c\u7ba1\u7406\u5458\u53ef\u4fee\u6539\u8d26\u6237\u90ae\u7bb1\u548c\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u7528\u6237\u3001\u96c6\u7fa4\u548c\u5e94\u7528\u8fdb\u884c\u7ba1\u7406\u3002 Nocalhost \u652f\u6301\u5f00\u53d1\u4f9d\u8d56 Namespace\u3001ClusterRole \u7b49\u96c6\u7fa4\u8d44\u6e90\u7684\u5e94\u7528\u5417\uff1f Visual Studio Code \u63d2\u4ef6\u548c Nocalhost \u670d\u52a1\u5668\u4e0d\u652f\u6301\uff0c\u4f46 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl \u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002 \u8bef\u5220 ~/.nh \u76ee\u5f55\uff0c\u63d2\u4ef6\u65e0\u6cd5\u4f7f\u7528\u600e\u4e48\u529e\uff1f \u91cd\u542f Visual Studio Code \u5373\u53ef\u3002 \u63d2\u4ef6\u7aef\u5df2\u7ecf\u505a \u5e94\u7528\u5378\u8f7d \u64cd\u4f5c\uff0ckubernetes \u96c6\u7fa4\u5de5\u4f5c\u8d1f\u8f7d\u6ca1\u6709\u91ca\u653e \u56e0\u4e3a\u4f60\u7684\u767b\u5f55\u7684\u8d26\u53f7\u53d1\u751f\u6539\u53d8\uff0ckubeconfig \u4e5f\u5c31\u53d1\u751f\u4e86\u6539\u53d8\u3002\u76ee\u524d\u6682\u65f6\u4e0d\u652f\u6301\u8d26\u53f7\u5207\u6362\u3002\u5982\u679c\u53d1\u751f\u4e86\u8be5\u60c5\u51b5\uff0c\u9700\u8981\u624b\u52a8\u5220\u9664\u4e4b\u524d\u8d44\u6e90\u3002","title":"\u4f7f\u7528\u4e2d\u5e38\u89c1\u95ee\u9898"},{"location":"zh/FAQ/faq-using/#nocalhost-helm","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNocalhost \u901a\u8fc7\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u540d\u79f0\u6765\u8bc6\u522b\u670d\u52a1\u7684\u3002\u4f46\u901a\u8fc7 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u6709\u53ef\u80fd\u662f\u901a\u8fc7 Chart \u6a21\u677f\u751f\u6210\u7684\u3002 \u5982\u679c Chart \u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0cNocalhost \u4f1a\u901a\u8fc7\u67e5\u627e\u4ee5 <release-name>-<service-name> \u5f62\u5f0f\u547d\u540d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6765\u4f5c\u4e3a\u5bf9\u5e94\u7684\u670d\u52a1\u3002\u4f8b\u5982\uff0cconfig.yaml \u5b9a\u4e49\u4e86\u5982\u4e0b\u7684\u670d\u52a1\uff1a ... services: - name: productpage serviceType: deployment \u5f53\u6211\u4eec\u901a\u8fc7 nhctl (Helm) \u5b89\u88c5\u4e0b\u9762\u7684\u5e94\u7528\uff1a $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s \u5982\u679c\u96c6\u7fa4\u4e2d\u6ca1\u6709\u540d\u4e3a productpage \u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5219 Nocalhost \u4f1a\u628a dev-productpage \u8ba4\u4e3a\u662f\u7528\u6237\u5728 config.yaml \u4e2d\u914d\u7f6e\u7684 productpage \u670d\u52a1\u3002 \u5982\u679c Chart \u4e0d\u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0c\u6216\u5de5\u4f5c\u8d1f\u8f7d\u4e0d\u662f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u5b89\u88c5\u7684\uff0cNocalhost \u5219\u65e0\u6cd5\u786e\u5b9a config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u6240\u5bf9\u5e94\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u914d\u7f6e\u51c6\u786e\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002 \u5efa\u8bae\u5728 Helm Chart \u4e2d\u4f7f\u7528\u9759\u6001\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002","title":"Nocalhost \u5982\u4f55\u786e\u5b9a\u7531 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u5e94\u4e8e\u914d\u7f6e\u4e2d\u7684\u54ea\u4e2a\u670d\u52a1\uff1f"},{"location":"zh/FAQ/faq-using/#nocalhost-pod","text":"\u5728 V2 \u7248\u672c\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u53ef\u4ee5\u5bf9\u540c\u4e00\u4e2a Pod \u7684\u591a\u4e2a\u5bb9\u5668\u58f0\u660e\u5f00\u53d1\u914d\u7f6e\u5373\u53ef\u6307\u5b9a\u5f00\u53d1\u54ea\u4e2a\u5bb9\u5668\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u8fd0\u884c\u591a\u5bb9\u5668 Pod \u7684\u7ec4\u4ef6\uff08\u670d\u52a1\uff09\u5417\uff1f"},{"location":"zh/FAQ/faq-using/#windows","text":"\u8fd9\u79cd\u60c5\u51b5\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u6362\u884c\u7b26\u4e0d\u540c\u5bfc\u81f4\u7684\u3002\u4f8b\u5982\uff0c\u7f16\u8bd1\u76ee\u6807\u73af\u5883\u4e3a Linux \u7684\u4ee3\u7801\uff0c\u6362\u884c\u7b26\u4e3a \\n \uff0c\u800c\u5728 Windows \u4e0b\u68c0\u51fa\u3001\u7f16\u8bd1\u6216\u683c\u5f0f\u5316\u7b49\u64cd\u4f5c\u90fd\u6709\u53ef\u80fd\u5bfc\u81f4\u4ee3\u7801\u7684\u6362\u884c\u7b26\u88ab\u8f6c\u6362\u6210 \\r\\n \u3002\u6362\u884c\u7b26\u7684\u53d8\u5316\u4f1a\u5bfc\u81f4\u90e8\u5206\u6784\u5efa\u5de5\u5177\uff08\u5982 Gradle\uff09\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u6240\u4ee5\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u524d\uff0c\u8bf7\u5148\u6839\u636e\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u597d\u672c\u5730\u5f00\u53d1\u73af\u5883\u3002 git: Windows \u4e0b\u9ed8\u8ba4\u4f1a\u5f00\u542f\u6362\u884c\u7b26\u81ea\u52a8\u8f6c\u6362\uff0c\u5373 git checkout \u65f6\u5c06 \\n \u8f6c\u6362\u6210 \\r\\n \uff0c git commit \u65f6\u5c06 \\r\\n \u8f6c\u6362\u6210 \\n \u3002\u5982\u9700\u914d\u7f6e\uff0c\u8bf7\u53c2\u8003 Git \u5b98\u65b9\u6587\u6863 \uff1b Visual Studio Code: Windows \u4e0b\u9ed8\u8ba4\u4f7f\u7528 \\r\\n \u3002\u5982\u9700\u4fee\u6539\u5168\u5c40\u914d\u7f6e\uff0c\u4f9d\u6b21\u8fdb\u5165 File -> Preferences -> Settings -> Text Editor -> Files -> Eol\uff1b\u5982\u9700\u4fee\u6539\u5355\u4e2a\u6587\u4ef6\u914d\u7f6e\uff0c\u76f4\u63a5\u5355\u51fb\u53f3\u4e0b\u89d2\u72b6\u6001\u680f\u4e0a\u7684 CRLF \u6216 LF \u8fdb\u884c\u5207\u6362\uff1b IntelliJ IDEA: Windows \u4e0b\u9ed8\u8ba4\u4f7f\u7528 \\r\\n \u3002\u5982\u9700\u4fee\u6539\u914d\u7f6e\uff0c\u4f9d\u6b21\u8fdb\u5165 File -> Settings -> Editor -> Code Style -> Line seperator\u3002","title":"\u4e3a\u4ec0\u4e48\u5728 Windows \u4e0b\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u65e0\u6cd5\u7f16\u8bd1\u4ee3\u7801\uff1f"},{"location":"zh/FAQ/faq-using/#nocalhost-hpa-horizontal-pod-autoscaler-deployment","text":"\u4e0d\u652f\u6301\u3002\u5efa\u8bae\u5728\u90e8\u7f72\u5e94\u7528\u5b8c\u6bd5\u540e\uff0c\u5148\u53bb\u5220\u9664 HPA \u63a7\u5236\u5668\uff0c\u518d\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5bf9\u6307\u5b9a\u670d\u52a1\u8fdb\u884c\u5f00\u53d1\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u5177\u5907 HPA (Horizontal Pod Autoscaler) \u63a7\u5236\u7684 Deployment \u5417\uff1f"},{"location":"zh/FAQ/faq-using/#nocalhost-web","text":"Nocalhost \u4e0d\u652f\u6301\u7528\u6237\u6ce8\u518c\u3002Nocalhost \u670d\u52a1\u5668\u76ee\u524d\u662f\u8bbe\u8ba1\u7ed9\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u8d26\u6237\u90ae\u7bb1\u5bc6\u7801\u767b\u5f55\u3002 \u9ed8\u8ba4\u90ae\u7bb1\uff1a admin@admin.com \u9ed8\u8ba4\u5bc6\u7801\uff1a 123456 \u767b\u5f55\u540e\uff0c\u7ba1\u7406\u5458\u53ef\u4fee\u6539\u8d26\u6237\u90ae\u7bb1\u548c\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u7528\u6237\u3001\u96c6\u7fa4\u548c\u5e94\u7528\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6ce8\u518c\u94fe\u63a5\uff1f\u600e\u4e48\u767b\u5f55 Nocalhost Web\uff1f"},{"location":"zh/FAQ/faq-using/#nocalhost-namespaceclusterrole","text":"Visual Studio Code \u63d2\u4ef6\u548c Nocalhost \u670d\u52a1\u5668\u4e0d\u652f\u6301\uff0c\u4f46 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl \u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u4f9d\u8d56 Namespace\u3001ClusterRole \u7b49\u96c6\u7fa4\u8d44\u6e90\u7684\u5e94\u7528\u5417\uff1f"},{"location":"zh/FAQ/faq-using/#nh","text":"\u91cd\u542f Visual Studio Code \u5373\u53ef\u3002","title":"\u8bef\u5220 ~/.nh \u76ee\u5f55\uff0c\u63d2\u4ef6\u65e0\u6cd5\u4f7f\u7528\u600e\u4e48\u529e\uff1f"},{"location":"zh/FAQ/faq-using/#kubernetes","text":"\u56e0\u4e3a\u4f60\u7684\u767b\u5f55\u7684\u8d26\u53f7\u53d1\u751f\u6539\u53d8\uff0ckubeconfig \u4e5f\u5c31\u53d1\u751f\u4e86\u6539\u53d8\u3002\u76ee\u524d\u6682\u65f6\u4e0d\u652f\u6301\u8d26\u53f7\u5207\u6362\u3002\u5982\u679c\u53d1\u751f\u4e86\u8be5\u60c5\u51b5\uff0c\u9700\u8981\u624b\u52a8\u5220\u9664\u4e4b\u524d\u8d44\u6e90\u3002","title":"\u63d2\u4ef6\u7aef\u5df2\u7ecf\u505a \u5e94\u7528\u5378\u8f7d \u64cd\u4f5c\uff0ckubernetes \u96c6\u7fa4\u5de5\u4f5c\u8d1f\u8f7d\u6ca1\u6709\u91ca\u653e"},{"location":"zh/best-practice/application-best/","text":"Nocalhost \u652f\u6301\u901a\u8fc7\u4e0b\u9762\u4e09\u79cd\u7c7b\u578b\u8fdb\u884c\u5b89\u88c5\uff1a Manifest Helm Kustomize \u60a8\u53ef\u4ee5\u9009\u62e9\u5339\u914d\u7c7b\u578b\u7684\u90e8\u7f72\u65b9\u5f0f\u5728 Kubernetes \u4e2d\u90e8\u7f72\u60a8\u7684\u5e94\u7528\uff0c\u7136\u540e\u5728 Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u8fdb\u884c\u5f00\u53d1\u3002\u6216\u60a8\u4e5f\u53ef\u4ee5 \u4f7f\u7528 Nocalhost Server \u8fdb\u884c\u5e94\u7528\u7ba1\u7406 \u5bf9\u60a8 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5e94\u7528\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u3002 \u4f7f\u7528 Helm Chart \u90e8\u7f72\u5e94\u7528 \u60a8\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5df2\u6709\u7684 Helm Chart \u5728\u672c\u5730\u8fdb\u884c\u5e94\u7528\u90e8\u7f72\u3002 \u672c\u5730\u6216\u8fdc\u7aef\u4ed3\u5e93\u4e2d\u7684 Helm \u5e94\u7528 \u672c\u5730\u90e8\u7f72 \u5982\u679c\u5728\u672c\u5730\u5df2\u7ecf\u6709\u914d\u7f6e\u597d\u7684 Helm \u5e94\u7528\uff0c\u4e14 helm chart \u653e\u7f6e\u5728**\u76f8\u5bf9\u4e8e\u6839\u76ee\u5f55**\u7684 mychart/example/ \u6587\u4ef6\u4e0b\uff0c\u60a8\u53ef\u4ee5\u6267\u884c\u4e0b\u8ff0\u547d\u4ee4\u8fdb\u884c\u5e94\u7528\u90e8\u7f72 helm install helloworld /chart/example/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u8fdc\u7aef\u4ed3\u5e93\u90e8\u7f72 \u5982\u679c\u60a8\u6709\u4e00\u4e2a Helm \u5e94\u7528\u5b58\u653e\u5728\u4e00\u4e2a\u6709\u6743\u9650\u8bbf\u95ee\u7684\u8fdc\u7aef\u4ed3\u5e93\uff0c\u4f8b\u5982\uff1a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/example/ Chart.yaml values.yaml charts/ templates/ ... \u5bf9\u4e8e\u8fd9\u4e2a\u4ed3\u5e93\u6765\u8bf4\uff0c\u6211\u4eec\u5c06 Helm chart \u653e\u7f6e\u5728\u4e86**\u76f8\u5bf9\u4e8e\u6839\u76ee\u5f55**\u7684 mychart/example/ \u6587\u4ef6\u4e0b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fdb\u884c\u5e94\u7528\u90e8\u7f72\uff1a nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/example \\ --kubeconfig ~/.kube/barconfig \u4f7f\u7528\u81ea\u5df1\u7684 Helm Repo \u5982\u679c\u60a8\u6709\u81ea\u5df1\u7684 Helm Repo\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u5217\u547d\u4ee4\u8fdb\u884c\u90e8\u7f72\uff1a helm install helloworld \\ mychart \\ - repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u8ff0 nhctl \u547d\u4ee4\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\uff1a nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u4f7f\u7528 Kubernetes Manifest \u90e8\u7f72\u5e94\u7528 \u5047\u8bbe\u4f60\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5b83\u7684\u5730\u5740\u4e3a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \uff0c\u91cc\u9762\u5b58\u653e\u7740\u8bb8\u591a Kubernetes manifest yaml \u6587\u4ef6 \uff1a README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 \u4f60\u53ea\u60f3\u5e94\u7528\u76f8\u5bf9\u6839\u76ee\u5f55 what/ever/ \u4e0e support/all/dir/inside/ \u4e0b\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig \u5982\u679c\u4f60\u60f3\u5e94\u7528\u6240\u6709\u6587\u4ef6\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path. \\ --kubeconfig ~/.kube/barconfig Nocalhost \u5bf9\u539f\u751f Kubernetes \u5e94\u7528\u7684\u589e\u5f3a \u5728 Kubernetes \u7684\u57fa\u7840\u4e0a\uff0cNocalhost \u63d0\u4f9b\u4e86\u4e00\u4e9b\u5bf9\u5e94\u7528\u7684\u589e\u5f3a\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728\u4f60\u7684\u9879\u76ee\u4ed3\u5e93\u4e0b\u65b0\u589e .nocalhost/ \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u6587\u4ef6\u3002 \u65e0\u4fb5\u5165 Nocalhost \u5bf9\u7528\u6237\u7684 Kubernetes manifest \u914d\u7f6e\u65e0\u4fb5\u5165 Pre-Install Nocalhost \u5141\u8bb8\u7528\u6237\u5728\u5b89\u88c5\u90e8\u7f72\u5e94\u7528\u4e4b\u524d\uff0c\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u3002\u4ee5 bookinfo \u4e3a\u4f8b\uff0c\u5728\u5b89\u88c5\u5e94\u7528\u524d\uff0c\u6211\u4eec\u4f1a\u6267\u884c\u5982\u4e0b\u58f0\u660e\u7684\u51e0\u4e2a Job\uff0c\u7b49\u5f85 Job \u6267\u884c\u7ed3\u675f\u624d\u5b89\u88c5\u5e94\u7528\uff0c onPreInstall : -path : manifest/templates/pre-install/print-num-job-01.yaml weight : \"1\" -path : manifest/templates/pre-install/print-num-job-02.yaml weight : \"-5\" \u542f\u52a8\u4f9d\u8d56\u7ba1\u7406 Nocalhost \u53ef\u4ee5\u63a7\u5236\u5e94\u7528\u5185\u7684\u670d\u52a1\u542f\u52a8\u987a\u5e8f\u3002 \u4f8b\u5982\u4ee5\u4e0b\u8fd9\u4e2a\u914d\u7f6e\uff0c\u4ee3\u8868 ratings \u8fd9\u4e2a Deployment \uff0c\u9700\u8981\u7b49\u5f85 productpage \u7684 pod \u53ef\u7528\u540e\u624d\u4f1a\u542f\u52a8\u3002 name: ratings serviceType: deployment dependLabelSelector: pods: - productpage \u53ef\u4ee5\u67e5\u9605 Service \u6307\u5b9a\u542f\u52a8\u987a\u5e8f\u4f9d\u8d56\u5173\u7cfb \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u5f00\u53d1\u955c\u50cf\u914d\u7f6e Nocalhost \u5141\u8bb8\u6307\u5b9a\u5f00\u53d1\u5bb9\u5668\u7684\u955c\u50cf\uff0c\u4f8b\u5982\uff1a containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage ... \u5728\u4e0a\u8ff0\u914d\u7f6e\u4e2d\uff0c\u955c\u50cf python:3.7.7-slim-productpage \uff0c\u5c06\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\uff0c\u66ff\u4ee3\u539f\u955c\u50cf\u8fdb\u884c\u5f00\u53d1\u3002 \u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u9605 DevContainer \u6700\u4f73\u5b9e\u8df5 \u9ad8\u7ea7\u914d\u7f6e \u8fd9\u91cc\u4f1a\u8bf4\u660e\u4e00\u4e9b Application \u4e00\u4e9b\u989d\u5916\u7684\u7279\u6027\u6216\u8005\u8bbe\u8ba1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u4f1a\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u7684\u4f7f\u7528 Nocalhost\u3002 Application Name Nocalhost \u4f7f\u7528\u552f\u4e00\u7684 Application Name \u6765\u533a\u5206\u4e0d\u540c\u7684 Application\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7684 Nocalhost Server \uff08\u4f8b\u5982\u90e8\u7f72\u4e86\u4e24\u5957\u4ee5\u4e0a\u7684\uff09\uff0c\u4e0d\u652f\u6301\u76f8\u540c\u7684 Application Name \u5728\u540c\u4e00\u4e2a\u5f00\u53d1\u673a\u5668\u4e0a\u4f7f\u7528\u3002 ~/.nh \u76ee\u5f55 \u6ce8\u610f\uff0c\u5728 ~/.nh/ \u76ee\u5f55\u4e0b\uff0c nhctl \u548c IDE \u63d2\u4ef6\u4f1a\u5b58\u50a8\u4e00\u4e9b\u6587\u4ef6\u7528\u4ee5\u4fdd\u5b58\u5f53\u524d\u5e94\u7528\u90e8\u7f72\uff0c\u5f00\u53d1\u7b49\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u901a\u5e38\u4f60\u4e0d\u9700\u8981\u4e86\u89e3\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u4ed6\u4eec\u3002","title":"Application \u6700\u4f73\u5b9e\u8df5"},{"location":"zh/best-practice/application-best/#helm-chart","text":"\u60a8\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5df2\u6709\u7684 Helm Chart \u5728\u672c\u5730\u8fdb\u884c\u5e94\u7528\u90e8\u7f72\u3002","title":"\u4f7f\u7528 Helm Chart \u90e8\u7f72\u5e94\u7528"},{"location":"zh/best-practice/application-best/#helm","text":"","title":"\u672c\u5730\u6216\u8fdc\u7aef\u4ed3\u5e93\u4e2d\u7684 Helm \u5e94\u7528"},{"location":"zh/best-practice/application-best/#_1","text":"\u5982\u679c\u5728\u672c\u5730\u5df2\u7ecf\u6709\u914d\u7f6e\u597d\u7684 Helm \u5e94\u7528\uff0c\u4e14 helm chart \u653e\u7f6e\u5728**\u76f8\u5bf9\u4e8e\u6839\u76ee\u5f55**\u7684 mychart/example/ \u6587\u4ef6\u4e0b\uff0c\u60a8\u53ef\u4ee5\u6267\u884c\u4e0b\u8ff0\u547d\u4ee4\u8fdb\u884c\u5e94\u7528\u90e8\u7f72 helm install helloworld /chart/example/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig","title":"\u672c\u5730\u90e8\u7f72"},{"location":"zh/best-practice/application-best/#_2","text":"\u5982\u679c\u60a8\u6709\u4e00\u4e2a Helm \u5e94\u7528\u5b58\u653e\u5728\u4e00\u4e2a\u6709\u6743\u9650\u8bbf\u95ee\u7684\u8fdc\u7aef\u4ed3\u5e93\uff0c\u4f8b\u5982\uff1a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/example/ Chart.yaml values.yaml charts/ templates/ ... \u5bf9\u4e8e\u8fd9\u4e2a\u4ed3\u5e93\u6765\u8bf4\uff0c\u6211\u4eec\u5c06 Helm chart \u653e\u7f6e\u5728\u4e86**\u76f8\u5bf9\u4e8e\u6839\u76ee\u5f55**\u7684 mychart/example/ \u6587\u4ef6\u4e0b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fdb\u884c\u5e94\u7528\u90e8\u7f72\uff1a nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/example \\ --kubeconfig ~/.kube/barconfig","title":"\u8fdc\u7aef\u4ed3\u5e93\u90e8\u7f72"},{"location":"zh/best-practice/application-best/#helm-repo","text":"\u5982\u679c\u60a8\u6709\u81ea\u5df1\u7684 Helm Repo\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u5217\u547d\u4ee4\u8fdb\u884c\u90e8\u7f72\uff1a helm install helloworld \\ mychart \\ - repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u8ff0 nhctl \u547d\u4ee4\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\uff1a nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig","title":"\u4f7f\u7528\u81ea\u5df1\u7684 Helm Repo"},{"location":"zh/best-practice/application-best/#kubernetes-manifest","text":"\u5047\u8bbe\u4f60\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5b83\u7684\u5730\u5740\u4e3a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \uff0c\u91cc\u9762\u5b58\u653e\u7740\u8bb8\u591a Kubernetes manifest yaml \u6587\u4ef6 \uff1a README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 \u4f60\u53ea\u60f3\u5e94\u7528\u76f8\u5bf9\u6839\u76ee\u5f55 what/ever/ \u4e0e support/all/dir/inside/ \u4e0b\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig \u5982\u679c\u4f60\u60f3\u5e94\u7528\u6240\u6709\u6587\u4ef6\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path. \\ --kubeconfig ~/.kube/barconfig","title":"\u4f7f\u7528 Kubernetes Manifest \u90e8\u7f72\u5e94\u7528"},{"location":"zh/best-practice/application-best/#nocalhost-kubernetes","text":"\u5728 Kubernetes \u7684\u57fa\u7840\u4e0a\uff0cNocalhost \u63d0\u4f9b\u4e86\u4e00\u4e9b\u5bf9\u5e94\u7528\u7684\u589e\u5f3a\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728\u4f60\u7684\u9879\u76ee\u4ed3\u5e93\u4e0b\u65b0\u589e .nocalhost/ \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u6587\u4ef6\u3002 \u65e0\u4fb5\u5165 Nocalhost \u5bf9\u7528\u6237\u7684 Kubernetes manifest \u914d\u7f6e\u65e0\u4fb5\u5165","title":"Nocalhost \u5bf9\u539f\u751f Kubernetes \u5e94\u7528\u7684\u589e\u5f3a"},{"location":"zh/best-practice/application-best/#pre-install","text":"Nocalhost \u5141\u8bb8\u7528\u6237\u5728\u5b89\u88c5\u90e8\u7f72\u5e94\u7528\u4e4b\u524d\uff0c\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u3002\u4ee5 bookinfo \u4e3a\u4f8b\uff0c\u5728\u5b89\u88c5\u5e94\u7528\u524d\uff0c\u6211\u4eec\u4f1a\u6267\u884c\u5982\u4e0b\u58f0\u660e\u7684\u51e0\u4e2a Job\uff0c\u7b49\u5f85 Job \u6267\u884c\u7ed3\u675f\u624d\u5b89\u88c5\u5e94\u7528\uff0c onPreInstall : -path : manifest/templates/pre-install/print-num-job-01.yaml weight : \"1\" -path : manifest/templates/pre-install/print-num-job-02.yaml weight : \"-5\"","title":"Pre-Install"},{"location":"zh/best-practice/application-best/#_3","text":"Nocalhost \u53ef\u4ee5\u63a7\u5236\u5e94\u7528\u5185\u7684\u670d\u52a1\u542f\u52a8\u987a\u5e8f\u3002 \u4f8b\u5982\u4ee5\u4e0b\u8fd9\u4e2a\u914d\u7f6e\uff0c\u4ee3\u8868 ratings \u8fd9\u4e2a Deployment \uff0c\u9700\u8981\u7b49\u5f85 productpage \u7684 pod \u53ef\u7528\u540e\u624d\u4f1a\u542f\u52a8\u3002 name: ratings serviceType: deployment dependLabelSelector: pods: - productpage \u53ef\u4ee5\u67e5\u9605 Service \u6307\u5b9a\u542f\u52a8\u987a\u5e8f\u4f9d\u8d56\u5173\u7cfb \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"\u542f\u52a8\u4f9d\u8d56\u7ba1\u7406"},{"location":"zh/best-practice/application-best/#_4","text":"Nocalhost \u5141\u8bb8\u6307\u5b9a\u5f00\u53d1\u5bb9\u5668\u7684\u955c\u50cf\uff0c\u4f8b\u5982\uff1a containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage ... \u5728\u4e0a\u8ff0\u914d\u7f6e\u4e2d\uff0c\u955c\u50cf python:3.7.7-slim-productpage \uff0c\u5c06\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\uff0c\u66ff\u4ee3\u539f\u955c\u50cf\u8fdb\u884c\u5f00\u53d1\u3002 \u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u9605 DevContainer \u6700\u4f73\u5b9e\u8df5","title":"\u5f00\u53d1\u955c\u50cf\u914d\u7f6e"},{"location":"zh/best-practice/application-best/#_5","text":"\u8fd9\u91cc\u4f1a\u8bf4\u660e\u4e00\u4e9b Application \u4e00\u4e9b\u989d\u5916\u7684\u7279\u6027\u6216\u8005\u8bbe\u8ba1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u4f1a\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u7684\u4f7f\u7528 Nocalhost\u3002","title":"\u9ad8\u7ea7\u914d\u7f6e"},{"location":"zh/best-practice/application-best/#application-name","text":"Nocalhost \u4f7f\u7528\u552f\u4e00\u7684 Application Name \u6765\u533a\u5206\u4e0d\u540c\u7684 Application\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u4f7f\u7528\u4e0d\u540c\u7684 Nocalhost Server \uff08\u4f8b\u5982\u90e8\u7f72\u4e86\u4e24\u5957\u4ee5\u4e0a\u7684\uff09\uff0c\u4e0d\u652f\u6301\u76f8\u540c\u7684 Application Name \u5728\u540c\u4e00\u4e2a\u5f00\u53d1\u673a\u5668\u4e0a\u4f7f\u7528\u3002","title":"Application Name"},{"location":"zh/best-practice/application-best/#nh","text":"\u6ce8\u610f\uff0c\u5728 ~/.nh/ \u76ee\u5f55\u4e0b\uff0c nhctl \u548c IDE \u63d2\u4ef6\u4f1a\u5b58\u50a8\u4e00\u4e9b\u6587\u4ef6\u7528\u4ee5\u4fdd\u5b58\u5f53\u524d\u5e94\u7528\u90e8\u7f72\uff0c\u5f00\u53d1\u7b49\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u901a\u5e38\u4f60\u4e0d\u9700\u8981\u4e86\u89e3\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u4ed6\u4eec\u3002","title":"~/.nh \u76ee\u5f55"},{"location":"zh/best-practice/devcontainer-best/","text":"\u5728 Nocalhost \u63a7\u5236 Pod \u8fdb\u5165 \u5f00\u53d1\u6a21\u5f0f \u65f6\uff0c\u8bbe\u7f6e\u7684 \u5f00\u53d1\u5bb9\u5668\u955c\u50cf \u4f1a\u88ab\u542f\u52a8\u6210\u4e3a DevContainer \u66ff\u4ee3\u539f\u672c\u7684\u5bb9\u5668\u3002\u4e4b\u540e\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevContainer \u4e2d\u6784\u5efa\uff0c\u8fd0\u884c\uff0c\u8c03\u8bd5\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e86\u3002 \u5f00\u53d1\u5bb9\u5668\u955c\u50cf \u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u955c\u50cf\u6216\u81ea\u5df1\u6309\u9700\u5b9a\u5236\u3002 \u5173\u4e8e DevContainer \u955c\u50cf\u5236\u4f5c\u7684\u5efa\u8bae \u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 Docker \u955c\u50cf\u6765\u4f5c\u4e3a DevContainer \u955c\u50cf\uff0c\u53ea\u8981\u4ed6\u5305\u542b\u57fa\u672c\u7684 shell (/bin/sh) \u5373\u53ef\u3002 \u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5f3a\u70c8\u5efa\u8bae\u4e3a\u7279\u5b9a\u6280\u672f\u6808\u7684\u670d\u52a1\u63d0\u4f9b\u4e13\u5c5e\u7684 DevContainer \u955c\u50cf\u3002\u4e00\u4e2a\u597d\u7684 DevContainer \u955c\u50cf\u5e94\u8be5\uff1a \u63d0\u4f9b\u6613\u7528\u7684 shell\uff0c\u5982\uff1abash,zsh \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u57fa\u7840 SDK\uff0c\u5982 JDK \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u5de5\u5177\u94fe\uff0c\u5982 git\uff0cmaven\uff0cyarn\uff0cmake \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u6216\u8005\u81ea\u52a8\u4e0b\u8f7d\u914d\u7f6e\uff0c\u5982\u914d\u7f6e Maven \u955c\u50cf\u6e90 \u63d0\u4f9b\u5f00\u53d1\u8fc7\u7a0b\u9700\u8981\u7684\u5176\u4ed6\u8c03\u8bd5\u5de5\u5177\uff0c\u5982 gdb\uff0ccurl\uff0ctcpdump\uff0cmysql-client \u7b49 \u4e0d\u8981\u5305\u542b\u670d\u52a1\u7684\u6e90\u4ee3\u7801\uff08\u6e90\u4ee3\u7801\u5e94\u8be5\u901a\u8fc7\u6e90\u7801\u7ba1\u7406\u7cfb\u7edf\u68c0\u51fa\u5230\u672c\u5730\uff0c\u5e76\u540c\u6b65\u5230 DevContainer \u4e2d\u3002\uff09 Nocalhost \u63d0\u4f9b\u7684 DevContainer \u955c\u50cf \u53ef\u4ee5\u4ece DevContainer Image \u4e0b\u8f7d\u3002 \u5982\u4f55\u914d\u7f6e DevContainer \u9009\u62e9\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u70b9\u51fb \u5bf9\u8be5\u670d\u52a1\u8fdb\u884c\u914d\u7f6e \u5728\u4e0b\u8ff0\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4fee\u6539 image \u5b57\u6bb5\uff1a containers: - name: productpage install: env: [] envFrom: envFile: [] portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash \u5728\u8fdb\u884c\u8c03\u8bd5\u65f6\uff0cNocalhost \u4f1a\u5c06 DevContainer \u7684\u542f\u52a8\u547d\u4ee4\u8986\u76d6\u4e3a /bin/sh -c tail -f /dev/null \u4ee5\u786e\u4fdd DevContainer \u4e0d\u4f1a\u610f\u5916\u9000\u51fa\u3002\u5173\u4e8e DevMode \u4e0b\uff0cNocalhost \u505a\u7684\u5176\u4ed6\u53d8\u52a8\uff0c\u8bf7\u67e5\u770b DevMode \u3002","title":"DevContainer \u6700\u4f73\u5b9e\u8df5"},{"location":"zh/best-practice/devcontainer-best/#devcontainer","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 Docker \u955c\u50cf\u6765\u4f5c\u4e3a DevContainer \u955c\u50cf\uff0c\u53ea\u8981\u4ed6\u5305\u542b\u57fa\u672c\u7684 shell (/bin/sh) \u5373\u53ef\u3002 \u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5f3a\u70c8\u5efa\u8bae\u4e3a\u7279\u5b9a\u6280\u672f\u6808\u7684\u670d\u52a1\u63d0\u4f9b\u4e13\u5c5e\u7684 DevContainer \u955c\u50cf\u3002\u4e00\u4e2a\u597d\u7684 DevContainer \u955c\u50cf\u5e94\u8be5\uff1a \u63d0\u4f9b\u6613\u7528\u7684 shell\uff0c\u5982\uff1abash,zsh \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u57fa\u7840 SDK\uff0c\u5982 JDK \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u5de5\u5177\u94fe\uff0c\u5982 git\uff0cmaven\uff0cyarn\uff0cmake \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u6216\u8005\u81ea\u52a8\u4e0b\u8f7d\u914d\u7f6e\uff0c\u5982\u914d\u7f6e Maven \u955c\u50cf\u6e90 \u63d0\u4f9b\u5f00\u53d1\u8fc7\u7a0b\u9700\u8981\u7684\u5176\u4ed6\u8c03\u8bd5\u5de5\u5177\uff0c\u5982 gdb\uff0ccurl\uff0ctcpdump\uff0cmysql-client \u7b49 \u4e0d\u8981\u5305\u542b\u670d\u52a1\u7684\u6e90\u4ee3\u7801\uff08\u6e90\u4ee3\u7801\u5e94\u8be5\u901a\u8fc7\u6e90\u7801\u7ba1\u7406\u7cfb\u7edf\u68c0\u51fa\u5230\u672c\u5730\uff0c\u5e76\u540c\u6b65\u5230 DevContainer \u4e2d\u3002\uff09","title":"\u5173\u4e8e DevContainer \u955c\u50cf\u5236\u4f5c\u7684\u5efa\u8bae"},{"location":"zh/best-practice/devcontainer-best/#nocalhost-devcontainer","text":"\u53ef\u4ee5\u4ece DevContainer Image \u4e0b\u8f7d\u3002","title":"Nocalhost \u63d0\u4f9b\u7684 DevContainer \u955c\u50cf"},{"location":"zh/best-practice/devcontainer-best/#devcontainer_1","text":"\u9009\u62e9\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u70b9\u51fb \u5bf9\u8be5\u670d\u52a1\u8fdb\u884c\u914d\u7f6e \u5728\u4e0b\u8ff0\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4fee\u6539 image \u5b57\u6bb5\uff1a containers: - name: productpage install: env: [] envFrom: envFile: [] portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash \u5728\u8fdb\u884c\u8c03\u8bd5\u65f6\uff0cNocalhost \u4f1a\u5c06 DevContainer \u7684\u542f\u52a8\u547d\u4ee4\u8986\u76d6\u4e3a /bin/sh -c tail -f /dev/null \u4ee5\u786e\u4fdd DevContainer \u4e0d\u4f1a\u610f\u5916\u9000\u51fa\u3002\u5173\u4e8e DevMode \u4e0b\uff0cNocalhost \u505a\u7684\u5176\u4ed6\u53d8\u52a8\uff0c\u8bf7\u67e5\u770b DevMode \u3002","title":"\u5982\u4f55\u914d\u7f6e DevContainer"},{"location":"zh/best-practice/service-best/","text":"Service \u914d\u7f6e 1. \u4e0d\u8fdb\u884c\u4efb\u4f55 Service \u914d\u7f6e Service \u5e76\u4e0d\u662f\u5fc5\u987b\u914d\u7f6e\u7684\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55 Service \u76f8\u5173\u7684\u914d\u7f6e\u3002\u4f46\u60f3\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u524d\u5bf9\u5176\u8fdb\u884c\u914d\u7f6e\uff0cNocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u4f1a\u4e3a\u60a8\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\uff0c\u60a8\u9700\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u5e76\u4fdd\u5b58\u5373\u53ef\u3002 \u9009\u62e9\u4e00\u4e2a\u9700\u8981\u5f00\u53d1\u7684\u5fae\u670d\u52a1\uff0c\u70b9\u51fb \u5bf9\u8be5\u670d\u52a1\u8fdb\u884c\u914d\u7f6e 2. \u6dfb\u52a0 Service \u914d\u7f6e Nocalhost \u5bf9\u7528\u6237\u7684 Kubernetes manifest \u914d\u7f6e\u65e0\u4fb5\u5165\uff0c\u5982\u679c\u4f60\u9700\u8981\u914d\u7f6e Service \u3002\u8bf7\u5728\u5728\u4f60\u7684\u4ed3\u5e93\u4e0b\u65b0\u589e .nocalhost/ \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u6587\u4ef6\u3002\u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u5668\u5728\u672c\u5730\u8fdb\u884c\u4fee\u6539\uff0c \u8fd9\u4e9b\u4fee\u6539\u53ea\u5728\u672c\u5730\u751f\u6548 \u3002 \u4f8b\u5982\u6211\u4eec\u7684\u793a\u4f8b\u5e94\u7528 bookinfo \u5bf9 productpage \u7684 Service \u8fdb\u884c\u4e86\u4e0b\u8ff0\u914d\u7f6e\uff1a - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"dep-job\" containers: - name: productpage install: portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash workDir: /home/nocalhost-dev sync: type: send filePattern: - ./ ignoreFilePattern: - \".git\" - \".github\" - \".idea\" portForward: - 39080:9080 \u5f53\u7528\u6237\u6210\u529f\u90e8\u7f72\u8be5\u5e94\u7528\u540e\uff0cNocalhost \u80fd\u81ea\u52a8\u8bfb\u53d6\u5230\u8fd9\u4e9b\u9ed8\u8ba4\u914d\u7f6e\u5e76\u81ea\u52a8\u5e94\u7528\u5728\u90e8\u7f72\u548c\u5f00\u53d1\u6a21\u5f0f\u4e0a\u3002 Service \u5bf9\u5f00\u53d1\u6a21\u5f0f\u7684\u652f\u6301 \u6211\u4eec\u7528\u4e0b\u8ff0\u7684 productpage \u8fd9\u4e2a\u5fae\u670d\u52a1\u7684\u914d\u7f6e\u4e3a\u4f8b\uff0c\u6765\u8bf4\u660e Service \u5bf9 \u5f00\u53d1\u6a21\u5f0f \u8fdb\u884c\u652f\u6301\u7684\u51e0\u4e2a\u5173\u952e\u914d\u7f6e\u9879\uff1a - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"dep-job\" containers: - name: productpage install: portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash workDir: /home/nocalhost-dev sync: type: send filePattern: - ./ ignoreFilePattern: - \".git\" - \".github\" - \".idea\" portForward: - 39080:9080 name and serviceType \u5f53\u4f60\u60f3\u4f7f\u7528 Service \u65f6\uff0c name \u4e0e serviceType \u662f \u5fc5\u586b\u9879 \uff0c\u7528\u4e8e\u5b9a\u4f4d\u5230\u67d0\u4e2a manifest\uff0c\u76ee\u524d Nocalhost \u53ea\u652f\u6301 Deployment \u4e00\u79cd serviceType \u3002 \u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c productpage \u7684 serviceType \u5c31\u662f Deployment : - name: productpage serviceType: deployment gitUrl \u7528\u4e8e\u6807\u660e\u4e0e\u6b64\u5fae\u670d\u52a1\u5bf9\u5e94\u7684\u6e90\u7801\u5730\u5740\uff0c\u5728\u8fdb\u5165**\u5f00\u53d1\u6a21\u5f0f**\u65f6\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u5c06\u672c\u5730\u67d0\u4e2a\u76ee\u5f55\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4ece\u8fdc\u7aef\u4ed3\u5e93\u62c9\u53d6\u3002 \u5982\u679c\u5728\u5728\u8fdb\u5165**\u5f00\u53d1\u6a21\u5f0f**\u65f6\u5df2\u7ecf\u914d\u7f6e\u4e86 gitUrl \uff0c Nocalhost \u4f1a\u81ea\u52a8\u5e2e\u4f60\u4ece\u8fd9\u4e2a gitUrl \u5bfc\u51fa\u4ee3\u7801\u3002\u4f8b\u5982\uff1a containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git ... image \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u6240\u4f7f\u7528\u7684\u5bb9\u5668\u955c\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u955c\u50cf\uff0c\u4f8b\u5982\uff1a containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage ... workDir (Optional) \u53ef\u9009\u9879\uff0c\u7528\u4e8e\u6807\u660e\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u4ee5\u53ca\u540c\u6b65\u6587\u4ef6\u6240\u5b58\u653e\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u5c06\u4f7f\u7528 /home/nocalhost-dev \u3002 containers: ... dev: ... workDir: /home/nocalhost-dev ... ... sync (Optional) \u53ef\u9009\u4e00\u7ec4\u914d\u7f6e\u9879\uff0c\u9009\u62e9\u5c06\u6e90\u7801\u76ee\u5f55\u7684\u54ea\u4e9b\u6587\u4ef6\u5939\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u9ed8\u8ba4\u503c\u4e3a \".\" \u3002\u6587\u4ef6\u540c\u6b65\u7684\u7c7b\u578b\u53ef\u4ee5\u662f sent \u5355\u5411\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f sendreceive \u53cc\u5411\u7684\u3002 containers: ... sync: type: send filePattern: - ./ ignoreFilePattern: - .git - .github - .idea ... portForward \u5173\u4e8e\u7aef\u53e3\u8f6c\u53d1\u914d\u7f6e\u9879\u6709\u4e24\u5904 \u5e94\u7528\u5b89\u88c5\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 \u5728\u5e94\u7528\u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f1a\u81ea\u52a8\u5c06\u6b64 Pod \u7684\u8fdc\u7aef\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u7aef\u53e3\u4e0a\uff0c\u7136\u540e\u5373\u53ef\u901a\u8fc7\u672c\u5730\u7aef\u53e3\u5feb\u901f\u8bbf\u95ee\u8fdc\u7aef\u8fd0\u884c\u7ed3\u679c\uff0c\u8be5\u914d\u7f6e\u683c\u5f0f\u4e3a \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 \uff0c\u4f8b\u5982\uff1a ... containers: - name: productpage install: portForward: - 39080:9080 \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 \u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\uff0c\u4f1a\u81ea\u52a8\u5c06\u6b64 Pod \u7684\u8fdc\u7aef\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u7aef\u53e3\u4e0a\uff0c\u7136\u540e\u5373\u53ef\u901a\u8fc7\u672c\u5730\u7aef\u53e3\u5feb\u901f\u8bbf\u95ee\u8fdc\u7aef\u8fd0\u884c\u7ed3\u679c\uff0c\u8be5\u914d\u7f6e\u683c\u5f0f\u4e3a \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 \uff0c\u4f8b\u5982\uff1a containers: ... portForward: - 39080:9080 \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u652f\u6301\u4e0d\u6307\u5b9a\u672c\u5730\u7aef\u53e3\uff0c\u4f8b\u5982 :10000 \u8fd9\u79cd\u5199\u6cd5\u3002Nocalhost \u5c06\u968f\u673a\u628a\u6307\u5b9a\u7684\u8fdc\u7aef\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u7684\u67d0\u4e2a\u7aef\u53e3\u4e0a\u3002 \u66f4\u591a\u914d\u7f6e\u4fe1\u606f \u8bf7\u53c2\u8003 Nocalhost \u914d\u7f6e \u67e5\u770b Nocalhost \u66f4\u8be6\u7ec6\u7684\u914d\u7f6e\u4fe1\u606f\u3002 Service \u6307\u5b9a\u542f\u52a8\u987a\u5e8f\u4f9d\u8d56\u5173\u7cfb Nocalhost \u63a7\u5236\u652f\u6301\u57fa\u4e8e\u4f9d\u8d56\u9879\u7684\u90e8\u7f72\u542f\u52a8\u987a\u5e8f\u3002 Kubernetes \u7248\u672c\u9650\u5236 \u6b64\u529f\u80fd\u53d6\u51b3\u4e8e Kubernetes admission webhooks \uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd Kubernetes \u96c6\u7fa4\u7684\u6700\u4f4e\u7248\u672c\u8981\u5728 v1.16.0 \u6216\u4ee5\u4e0a\uff0c\u5e76\u786e\u4fdd\u542f\u7528 MutatingAdmissionWebhook \u548c ValidatingAdmissionWebhook \u63a7\u5236\u5668\u3002 dependLabelSelector \u670d\u52a1\u6240\u4f9d\u8d56\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6807\u7b7e\u9009\u62e9\u5668\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\u914d\u7f6e\u9879\uff1a pods \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) \u4f8b\u5982 productpage \u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u540d\u4e3a foo \u7684 Pod\uff0c\u90a3\u4e48\u53ef\u4ee5\u5bf9 productpage \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e: - name: productpage serviceType: deployment dependLabelSelector: pods: - \"name=foo\" - \"app.kubernetes.io/name=foo\" jobs \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) \u4f8b\u5982 productpage \u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u540d\u4e3a bar \u7684 Job\uff0c\u90a3\u4e48\u53ef\u4ee5\u5bf9 productpage \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e: - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"job-name=bar\" - \"app.kubernetes.io/name=bar\"","title":"Service \u6700\u4f73\u5b9e\u8df5"},{"location":"zh/best-practice/service-best/#service","text":"","title":"Service \u914d\u7f6e"},{"location":"zh/best-practice/service-best/#1-service","text":"Service \u5e76\u4e0d\u662f\u5fc5\u987b\u914d\u7f6e\u7684\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55 Service \u76f8\u5173\u7684\u914d\u7f6e\u3002\u4f46\u60f3\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u524d\u5bf9\u5176\u8fdb\u884c\u914d\u7f6e\uff0cNocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u4f1a\u4e3a\u60a8\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\uff0c\u60a8\u9700\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u5e76\u4fdd\u5b58\u5373\u53ef\u3002 \u9009\u62e9\u4e00\u4e2a\u9700\u8981\u5f00\u53d1\u7684\u5fae\u670d\u52a1\uff0c\u70b9\u51fb \u5bf9\u8be5\u670d\u52a1\u8fdb\u884c\u914d\u7f6e","title":"1. \u4e0d\u8fdb\u884c\u4efb\u4f55 Service \u914d\u7f6e"},{"location":"zh/best-practice/service-best/#2-service","text":"Nocalhost \u5bf9\u7528\u6237\u7684 Kubernetes manifest \u914d\u7f6e\u65e0\u4fb5\u5165\uff0c\u5982\u679c\u4f60\u9700\u8981\u914d\u7f6e Service \u3002\u8bf7\u5728\u5728\u4f60\u7684\u4ed3\u5e93\u4e0b\u65b0\u589e .nocalhost/ \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u6587\u4ef6\u3002\u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u5668\u5728\u672c\u5730\u8fdb\u884c\u4fee\u6539\uff0c \u8fd9\u4e9b\u4fee\u6539\u53ea\u5728\u672c\u5730\u751f\u6548 \u3002 \u4f8b\u5982\u6211\u4eec\u7684\u793a\u4f8b\u5e94\u7528 bookinfo \u5bf9 productpage \u7684 Service \u8fdb\u884c\u4e86\u4e0b\u8ff0\u914d\u7f6e\uff1a - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"dep-job\" containers: - name: productpage install: portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash workDir: /home/nocalhost-dev sync: type: send filePattern: - ./ ignoreFilePattern: - \".git\" - \".github\" - \".idea\" portForward: - 39080:9080 \u5f53\u7528\u6237\u6210\u529f\u90e8\u7f72\u8be5\u5e94\u7528\u540e\uff0cNocalhost \u80fd\u81ea\u52a8\u8bfb\u53d6\u5230\u8fd9\u4e9b\u9ed8\u8ba4\u914d\u7f6e\u5e76\u81ea\u52a8\u5e94\u7528\u5728\u90e8\u7f72\u548c\u5f00\u53d1\u6a21\u5f0f\u4e0a\u3002","title":"2. \u6dfb\u52a0 Service \u914d\u7f6e"},{"location":"zh/best-practice/service-best/#service_1","text":"\u6211\u4eec\u7528\u4e0b\u8ff0\u7684 productpage \u8fd9\u4e2a\u5fae\u670d\u52a1\u7684\u914d\u7f6e\u4e3a\u4f8b\uff0c\u6765\u8bf4\u660e Service \u5bf9 \u5f00\u53d1\u6a21\u5f0f \u8fdb\u884c\u652f\u6301\u7684\u51e0\u4e2a\u5173\u952e\u914d\u7f6e\u9879\uff1a - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"dep-job\" containers: - name: productpage install: portForward: - 39080:9080 dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage shell: bash workDir: /home/nocalhost-dev sync: type: send filePattern: - ./ ignoreFilePattern: - \".git\" - \".github\" - \".idea\" portForward: - 39080:9080","title":"Service \u5bf9\u5f00\u53d1\u6a21\u5f0f\u7684\u652f\u6301"},{"location":"zh/best-practice/service-best/#name-and-servicetype","text":"\u5f53\u4f60\u60f3\u4f7f\u7528 Service \u65f6\uff0c name \u4e0e serviceType \u662f \u5fc5\u586b\u9879 \uff0c\u7528\u4e8e\u5b9a\u4f4d\u5230\u67d0\u4e2a manifest\uff0c\u76ee\u524d Nocalhost \u53ea\u652f\u6301 Deployment \u4e00\u79cd serviceType \u3002 \u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c productpage \u7684 serviceType \u5c31\u662f Deployment : - name: productpage serviceType: deployment","title":"name and serviceType"},{"location":"zh/best-practice/service-best/#giturl","text":"\u7528\u4e8e\u6807\u660e\u4e0e\u6b64\u5fae\u670d\u52a1\u5bf9\u5e94\u7684\u6e90\u7801\u5730\u5740\uff0c\u5728\u8fdb\u5165**\u5f00\u53d1\u6a21\u5f0f**\u65f6\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u5c06\u672c\u5730\u67d0\u4e2a\u76ee\u5f55\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4ece\u8fdc\u7aef\u4ed3\u5e93\u62c9\u53d6\u3002 \u5982\u679c\u5728\u5728\u8fdb\u5165**\u5f00\u53d1\u6a21\u5f0f**\u65f6\u5df2\u7ecf\u914d\u7f6e\u4e86 gitUrl \uff0c Nocalhost \u4f1a\u81ea\u52a8\u5e2e\u4f60\u4ece\u8fd9\u4e2a gitUrl \u5bfc\u51fa\u4ee3\u7801\u3002\u4f8b\u5982\uff1a containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git ...","title":"gitUrl"},{"location":"zh/best-practice/service-best/#image","text":"\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u6240\u4f7f\u7528\u7684\u5bb9\u5668\u955c\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u955c\u50cf\uff0c\u4f8b\u5982\uff1a containers: ... dev: gitUrl: https://e.coding.net/codingcorp/nocalhost/bookinfo-productpage.git image: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage ...","title":"image"},{"location":"zh/best-practice/service-best/#workdir-optional","text":"\u53ef\u9009\u9879\uff0c\u7528\u4e8e\u6807\u660e\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u4ee5\u53ca\u540c\u6b65\u6587\u4ef6\u6240\u5b58\u653e\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u5c06\u4f7f\u7528 /home/nocalhost-dev \u3002 containers: ... dev: ... workDir: /home/nocalhost-dev ... ...","title":"workDir (Optional)"},{"location":"zh/best-practice/service-best/#sync-optional","text":"\u53ef\u9009\u4e00\u7ec4\u914d\u7f6e\u9879\uff0c\u9009\u62e9\u5c06\u6e90\u7801\u76ee\u5f55\u7684\u54ea\u4e9b\u6587\u4ef6\u5939\u540c\u6b65\u5230\u5f00\u53d1\u5bb9\u5668\u4e2d\uff0c\u9ed8\u8ba4\u503c\u4e3a \".\" \u3002\u6587\u4ef6\u540c\u6b65\u7684\u7c7b\u578b\u53ef\u4ee5\u662f sent \u5355\u5411\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f sendreceive \u53cc\u5411\u7684\u3002 containers: ... sync: type: send filePattern: - ./ ignoreFilePattern: - .git - .github - .idea ...","title":"sync (Optional)"},{"location":"zh/best-practice/service-best/#portforward","text":"\u5173\u4e8e\u7aef\u53e3\u8f6c\u53d1\u914d\u7f6e\u9879\u6709\u4e24\u5904","title":"portForward"},{"location":"zh/best-practice/service-best/#_1","text":"\u5728\u5e94\u7528\u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f1a\u81ea\u52a8\u5c06\u6b64 Pod \u7684\u8fdc\u7aef\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u7aef\u53e3\u4e0a\uff0c\u7136\u540e\u5373\u53ef\u901a\u8fc7\u672c\u5730\u7aef\u53e3\u5feb\u901f\u8bbf\u95ee\u8fdc\u7aef\u8fd0\u884c\u7ed3\u679c\uff0c\u8be5\u914d\u7f6e\u683c\u5f0f\u4e3a \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 \uff0c\u4f8b\u5982\uff1a ... containers: - name: productpage install: portForward: - 39080:9080","title":"\u5e94\u7528\u5b89\u88c5\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868"},{"location":"zh/best-practice/service-best/#_2","text":"\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\uff0c\u4f1a\u81ea\u52a8\u5c06\u6b64 Pod \u7684\u8fdc\u7aef\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u7aef\u53e3\u4e0a\uff0c\u7136\u540e\u5373\u53ef\u901a\u8fc7\u672c\u5730\u7aef\u53e3\u5feb\u901f\u8bbf\u95ee\u8fdc\u7aef\u8fd0\u884c\u7ed3\u679c\uff0c\u8be5\u914d\u7f6e\u683c\u5f0f\u4e3a \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 \uff0c\u4f8b\u5982\uff1a containers: ... portForward: - 39080:9080 \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u652f\u6301\u4e0d\u6307\u5b9a\u672c\u5730\u7aef\u53e3\uff0c\u4f8b\u5982 :10000 \u8fd9\u79cd\u5199\u6cd5\u3002Nocalhost \u5c06\u968f\u673a\u628a\u6307\u5b9a\u7684\u8fdc\u7aef\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u7684\u67d0\u4e2a\u7aef\u53e3\u4e0a\u3002 \u66f4\u591a\u914d\u7f6e\u4fe1\u606f \u8bf7\u53c2\u8003 Nocalhost \u914d\u7f6e \u67e5\u770b Nocalhost \u66f4\u8be6\u7ec6\u7684\u914d\u7f6e\u4fe1\u606f\u3002","title":"\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868"},{"location":"zh/best-practice/service-best/#service_2","text":"Nocalhost \u63a7\u5236\u652f\u6301\u57fa\u4e8e\u4f9d\u8d56\u9879\u7684\u90e8\u7f72\u542f\u52a8\u987a\u5e8f\u3002 Kubernetes \u7248\u672c\u9650\u5236 \u6b64\u529f\u80fd\u53d6\u51b3\u4e8e Kubernetes admission webhooks \uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd Kubernetes \u96c6\u7fa4\u7684\u6700\u4f4e\u7248\u672c\u8981\u5728 v1.16.0 \u6216\u4ee5\u4e0a\uff0c\u5e76\u786e\u4fdd\u542f\u7528 MutatingAdmissionWebhook \u548c ValidatingAdmissionWebhook \u63a7\u5236\u5668\u3002","title":"Service \u6307\u5b9a\u542f\u52a8\u987a\u5e8f\u4f9d\u8d56\u5173\u7cfb"},{"location":"zh/best-practice/service-best/#dependlabelselector","text":"\u670d\u52a1\u6240\u4f9d\u8d56\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6807\u7b7e\u9009\u62e9\u5668\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\u914d\u7f6e\u9879\uff1a","title":"dependLabelSelector"},{"location":"zh/best-practice/service-best/#pods","text":"\u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) \u4f8b\u5982 productpage \u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u540d\u4e3a foo \u7684 Pod\uff0c\u90a3\u4e48\u53ef\u4ee5\u5bf9 productpage \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e: - name: productpage serviceType: deployment dependLabelSelector: pods: - \"name=foo\" - \"app.kubernetes.io/name=foo\"","title":"pods"},{"location":"zh/best-practice/service-best/#jobs","text":"\u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) \u4f8b\u5982 productpage \u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u540d\u4e3a bar \u7684 Job\uff0c\u90a3\u4e48\u53ef\u4ee5\u5bf9 productpage \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e: - name: productpage serviceType: deployment dependLabelSelector: jobs: - \"job-name=bar\" - \"app.kubernetes.io/name=bar\"","title":"jobs"},{"location":"zh/cli/cli-apply/","text":"\u5e94\u7528 manifest \u7528\u6cd5 nhctl apply [NAME] [MANIFEST] [flags] \u793a\u4f8b: nhctl apply \u6807\u8bb0 -h, --help help for apply \u5168\u5c40\u6807\u8bb0 Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl apply"},{"location":"zh/cli/cli-apply/#_1","text":"nhctl apply [NAME] [MANIFEST] [flags] \u793a\u4f8b: nhctl apply","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-apply/#_2","text":"-h, --help help for apply","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-apply/#_3","text":"Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u5168\u5c40\u6807\u8bb0"},{"location":"zh/cli/cli-config/","text":"\u5e94\u7528/\u670d\u52a1\u914d\u7f6e\u6587\u4ef6\u76f8\u5173\u64cd\u4f5c \u7528\u6cd5: nhctl config [command] Available Commands: edit edit service config get get application/service config reload reload application/service config template get service config template nhctl config edit \u7f16\u8f91\u5e94\u7528/\u670d\u52a1\u7684\u914d\u7f6e nhctl config edit [Name] [flags] \u793a\u4f8b: \u6807\u8bb0 Flags: --app-config get application config -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for get Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl config get \u83b7\u53d6\u5e94\u7528/\u670d\u52a1\u7684\u914d\u7f6e nhctl config get [Name] [flags] \u793a\u4f8b: \u6807\u8bb0 Flags: --app-config get application config -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for get Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl config reload \u5237\u65b0\u5e94\u7528/\u670d\u52a1\u7684\u914d\u7f6e nhctl config reload [Name] [flags] \u793a\u4f8b: \u6807\u8bb0 Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for reload Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl config template \u83b7\u53d6\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u7248 nhctl config template [Name] [flags] \u793a\u4f8b: \u6807\u8bb0 Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for template Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl config"},{"location":"zh/cli/cli-config/#nhctl-config-edit","text":"\u7f16\u8f91\u5e94\u7528/\u670d\u52a1\u7684\u914d\u7f6e nhctl config edit [Name] [flags] \u793a\u4f8b:","title":"nhctl config edit"},{"location":"zh/cli/cli-config/#_1","text":"Flags: --app-config get application config -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for get Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-config/#nhctl-config-get","text":"\u83b7\u53d6\u5e94\u7528/\u670d\u52a1\u7684\u914d\u7f6e nhctl config get [Name] [flags] \u793a\u4f8b:","title":"nhctl config get"},{"location":"zh/cli/cli-config/#_2","text":"Flags: --app-config get application config -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for get Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-config/#nhctl-config-reload","text":"\u5237\u65b0\u5e94\u7528/\u670d\u52a1\u7684\u914d\u7f6e nhctl config reload [Name] [flags] \u793a\u4f8b:","title":"nhctl config reload"},{"location":"zh/cli/cli-config/#_3","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for reload Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-config/#nhctl-config-template","text":"\u83b7\u53d6\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u7248 nhctl config template [Name] [flags] \u793a\u4f8b:","title":"nhctl config template"},{"location":"zh/cli/cli-config/#_4","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for template Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-convert/","text":"\u5c06\u914d\u7f6e\u6587\u4ef6\u8f6c\u6362\u5230\u6307\u5b9a\u7248\u672c \u7528\u6cd5 nhctl convert [flags] \u6807\u8bb0 Flags: -d, --destFile string File saves converted config --from-version string From which version -h, --help help for convert -f, --srcFile string File needs to get converted --to-version string Convert to which version Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl convert"},{"location":"zh/cli/cli-convert/#_1","text":"nhctl convert [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-convert/#_2","text":"Flags: -d, --destFile string File saves converted config --from-version string From which version -h, --help help for convert -f, --srcFile string File needs to get converted --to-version string Convert to which version Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-daemon/","text":"nhctl \u5b88\u62a4\u8fdb\u7a0b\u76f8\u5173\u64cd\u4f5c \u7528\u6cd5: nhctl daemon [command] Available Commands: info Get nhctl daemon info restart Restart nhctl daemon start Start nhctl daemon status Get nhctl daemon status stop Stop nhctl daemon nhctl daemon info \u7528\u6cd5 nhctl daemon info \u793a\u4f8b: > nhctl daemon info > {\"Version\":\"v0.4.12\",\"CommitId\":\"0f02d7f90335076b502bca3f40ff42bd37ee55e6\",\"NhctlPath\":\".nh/bin/nhctl\",\"Upgrading\":false} \u6807\u8bb0 Flags: -h, --help help for restart --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl daemon restart \u91cd\u542f nhctl daemon \u7528\u6cd5 nhctl daemon restart \u793a\u4f8b: > nhctl daemon restart > RestartDaemonServerCommand has been sent \u6807\u8bb0 Flags: -h, --help help for restart --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl daemon start \u624b\u52a8\u542f\u52a8 nhctl daemon \u7528\u6cd5 nhctl daemon start [flags] \u6807\u8bb0 Flags: -d, --daemon Is run as daemon(background) -h, --help help for start --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl daemon status \u67e5\u770b nhctl daemon \u72b6\u6001 \u7528\u6cd5 nhctl daemon status \u793a\u4f8b: > nhctl daemon status > {\"portForwardList\":[]} \u6807\u8bb0 Flags: -h, --help help for status --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl daemon stop \u624b\u52a8\u505c\u6b62 nhctl daemon \u7528\u6cd5 nhctl daemon stop \u6807\u8bb0 Flags: -h, --help help for stop --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl daemon"},{"location":"zh/cli/cli-daemon/#nhctl-daemon-info","text":"","title":"nhctl daemon info"},{"location":"zh/cli/cli-daemon/#_1","text":"nhctl daemon info \u793a\u4f8b: > nhctl daemon info > {\"Version\":\"v0.4.12\",\"CommitId\":\"0f02d7f90335076b502bca3f40ff42bd37ee55e6\",\"NhctlPath\":\".nh/bin/nhctl\",\"Upgrading\":false}","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-daemon/#_2","text":"Flags: -h, --help help for restart --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-daemon/#nhctl-daemon-restart","text":"\u91cd\u542f nhctl daemon","title":"nhctl daemon restart"},{"location":"zh/cli/cli-daemon/#_3","text":"nhctl daemon restart \u793a\u4f8b: > nhctl daemon restart > RestartDaemonServerCommand has been sent","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-daemon/#_4","text":"Flags: -h, --help help for restart --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-daemon/#nhctl-daemon-start","text":"\u624b\u52a8\u542f\u52a8 nhctl daemon","title":"nhctl daemon start"},{"location":"zh/cli/cli-daemon/#_5","text":"nhctl daemon start [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-daemon/#_6","text":"Flags: -d, --daemon Is run as daemon(background) -h, --help help for start --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-daemon/#nhctl-daemon-status","text":"\u67e5\u770b nhctl daemon \u72b6\u6001","title":"nhctl daemon status"},{"location":"zh/cli/cli-daemon/#_7","text":"nhctl daemon status \u793a\u4f8b: > nhctl daemon status > {\"portForwardList\":[]}","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-daemon/#_8","text":"Flags: -h, --help help for status --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-daemon/#nhctl-daemon-stop","text":"\u624b\u52a8\u505c\u6b62 nhctl daemon","title":"nhctl daemon stop"},{"location":"zh/cli/cli-daemon/#_9","text":"nhctl daemon stop","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-daemon/#_10","text":"Flags: -h, --help help for stop --sudo Is run as sudo Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-db/","text":"leveldb \u76f8\u5173\u64cd\u4f5c \u7528\u6cd5: nhctl db [command] Available Commands: all Get all leveldb data compact compact leveldb data put update leveldb data size Get all leveldb data size nhctl db all \u83b7\u53d6\u6240\u6709 leveldb \u6570\u636e \u7528\u6cd5 nhctl db all [NAME] [flags] \u6807\u8bb0 Flags: --app string List leveldb data of specified application -h, --help help for all Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl db compact \u538b\u7f29\u6240\u6709 leveldb \u6570\u636e \u7528\u6cd5 nhctl db compact [NAME] [flags] \u6807\u8bb0 Flags: --app string Leveldb data of specified application -h, --help help for compact --key string The key of leveldb data Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl db put \u66f4\u65b0 leveldb \u6570\u636e \u7528\u6cd5 nhctl db put [flags] \u6807\u8bb0 Flags: --app string Leveldb data of specified application -f, --file string The value of leveldb data -h, --help help for put --key string The key of leveldb data --value string The value of leveldb data Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl db size \u83b7\u53d6\u6240\u6709 leveldb \u7684\u5927\u5c0f \u7528\u6cd5 nhctl db size [NAME] [flags] \u6807\u8bb0 Flags: --app string List leveldb data of specified application -h, --help help for size Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl db"},{"location":"zh/cli/cli-db/#nhctl-db-all","text":"\u83b7\u53d6\u6240\u6709 leveldb \u6570\u636e","title":"nhctl db all"},{"location":"zh/cli/cli-db/#_1","text":"nhctl db all [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-db/#_2","text":"Flags: --app string List leveldb data of specified application -h, --help help for all Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-db/#nhctl-db-compact","text":"\u538b\u7f29\u6240\u6709 leveldb \u6570\u636e","title":"nhctl db compact"},{"location":"zh/cli/cli-db/#_3","text":"nhctl db compact [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-db/#_4","text":"Flags: --app string Leveldb data of specified application -h, --help help for compact --key string The key of leveldb data Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-db/#nhctl-db-put","text":"\u66f4\u65b0 leveldb \u6570\u636e","title":"nhctl db put"},{"location":"zh/cli/cli-db/#_5","text":"nhctl db put [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-db/#_6","text":"Flags: --app string Leveldb data of specified application -f, --file string The value of leveldb data -h, --help help for put --key string The key of leveldb data --value string The value of leveldb data Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-db/#nhctl-db-size","text":"\u83b7\u53d6\u6240\u6709 leveldb \u7684\u5927\u5c0f","title":"nhctl db size"},{"location":"zh/cli/cli-db/#_7","text":"nhctl db size [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-db/#_8","text":"Flags: --app string List leveldb data of specified application -h, --help help for size Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-describe/","text":"\u63cf\u8ff0\u5e94\u7528\u4fe1\u606f \u7528\u6cd5 nhctl describe [NAME] [flags] \u6807\u8bb0 Flags: -d, --deployment string k8s deployment which your developing service exists -h, --help help for describe -t, --type string specify service type Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl describe"},{"location":"zh/cli/cli-describe/#_1","text":"nhctl describe [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-describe/#_2","text":"Flags: -d, --deployment string k8s deployment which your developing service exists -h, --help help for describe -t, --type string specify service type Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-dev/","text":"\u5f00\u53d1\u6a21\u5f0f\u76f8\u5173\u64cd\u4f5c \u7528\u6cd5: nhctl dev [command] Available Commands: associate associate service dev dir cmd Run cmd in dev container end end dev model reset reset service start Start DevMode terminal Enter dev container's terminal nhctl dev associate \u6307\u5b9a\u5f00\u53d1\u76ee\u5f55 \u7528\u6cd5 nhctl dev associate [Name] [flags] \u6807\u8bb0 Flags: -s, --associate string dev mode work directory -t, --controller-type string kind of k8s controller,such as deployment,statefulSet --de-associate de associate(for test) -d, --deployment string k8s deployment which your developing service exists -h, --help help for associate Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev cmd \u5728\u5f00\u53d1\u5bb9\u5668\u4e2d\u542f\u7528 terminal \u7528\u6cd5 nhctl dev cmd [NAME] [flags] \u6807\u8bb0 Flags: -c, --container string which container of pod to run command -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string K8s deployment which your developing service exists --dev-command-type string Dev command type can be: build, run, debug, hotReloadRun, hotReloadDebug -h, --help help for cmd Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev end \u9000\u51fa\u5f00\u53d1\u6a21\u5f0f \u7528\u6cd5 nhctl dev end [NAME] [flags] \u6807\u8bb0 Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for end Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev reset \u91cd\u7f6e\u670d\u52a1 \u7528\u6cd5 nhctl dev reset [NAME] [flags] \u6807\u8bb0 Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for reset Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev start \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f \u7528\u6cd5 nhctl dev start [NAME] [flags] \u6807\u8bb0 Flags: -c, --container string container to develop -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment your developing service exists -h, --help help for start -i, --image string image of DevContainer -s, --local-sync strings local directory to sync --priority-class string PriorityClass used by devContainer --shell string use current shell cmd to enter terminal while dev start success --sidecar-image string image of nocalhost-sidecar container --storage-class string StorageClass used by PV --syncthing-version string versions of syncthing and this flag is use for debug only --without-sync do not start file-sync while dev start success --without-terminal do not enter terminal directly while dev start success --work-dir string container's work directory Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl dev terminal \u8fdb\u5165\u5f00\u53d1\u5bb9\u5668\u7684 Terminal \u7528\u6cd5 nhctl dev terminal [NAME] [flags] \u6807\u8bb0 Flags: -c, --container string container to enter -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for terminal --pod string pod to enter --shell string shell cmd while enter dev container Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl dev"},{"location":"zh/cli/cli-dev/#nhctl-dev-associate","text":"\u6307\u5b9a\u5f00\u53d1\u76ee\u5f55","title":"nhctl dev associate"},{"location":"zh/cli/cli-dev/#_1","text":"nhctl dev associate [Name] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-dev/#_2","text":"Flags: -s, --associate string dev mode work directory -t, --controller-type string kind of k8s controller,such as deployment,statefulSet --de-associate de associate(for test) -d, --deployment string k8s deployment which your developing service exists -h, --help help for associate Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-dev/#nhctl-dev-cmd","text":"\u5728\u5f00\u53d1\u5bb9\u5668\u4e2d\u542f\u7528 terminal","title":"nhctl dev cmd"},{"location":"zh/cli/cli-dev/#_3","text":"nhctl dev cmd [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-dev/#_4","text":"Flags: -c, --container string which container of pod to run command -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string K8s deployment which your developing service exists --dev-command-type string Dev command type can be: build, run, debug, hotReloadRun, hotReloadDebug -h, --help help for cmd Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-dev/#nhctl-dev-end","text":"\u9000\u51fa\u5f00\u53d1\u6a21\u5f0f","title":"nhctl dev end"},{"location":"zh/cli/cli-dev/#_5","text":"nhctl dev end [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-dev/#_6","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for end Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-dev/#nhctl-dev-reset","text":"\u91cd\u7f6e\u670d\u52a1","title":"nhctl dev reset"},{"location":"zh/cli/cli-dev/#_7","text":"nhctl dev reset [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-dev/#_8","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for reset Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-dev/#nhctl-dev-start","text":"\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f","title":"nhctl dev start"},{"location":"zh/cli/cli-dev/#_9","text":"nhctl dev start [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-dev/#_10","text":"Flags: -c, --container string container to develop -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment your developing service exists -h, --help help for start -i, --image string image of DevContainer -s, --local-sync strings local directory to sync --priority-class string PriorityClass used by devContainer --shell string use current shell cmd to enter terminal while dev start success --sidecar-image string image of nocalhost-sidecar container --storage-class string StorageClass used by PV --syncthing-version string versions of syncthing and this flag is use for debug only --without-sync do not start file-sync while dev start success --without-terminal do not enter terminal directly while dev start success --work-dir string container's work directory Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-dev/#nhctl-dev-terminal","text":"\u8fdb\u5165\u5f00\u53d1\u5bb9\u5668\u7684 Terminal","title":"nhctl dev terminal"},{"location":"zh/cli/cli-dev/#_11","text":"nhctl dev terminal [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-dev/#_12","text":"Flags: -c, --container string container to enter -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for terminal --pod string pod to enter --shell string shell cmd while enter dev container Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-exec/","text":"\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u4e00\u6bb5\u547d\u4ee4 \u7528\u6cd5 nhctl exec [NAME] [flags] \u6807\u8bb0 Flags: -c, --command stringArray command to execute in container -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for exec Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl exec"},{"location":"zh/cli/cli-exec/#_1","text":"nhctl exec [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-exec/#_2","text":"Flags: -c, --command stringArray command to execute in container -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -h, --help help for exec Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-get/","text":"\u83b7\u53d6\u8d44\u6e90\u4fe1\u606f \u7528\u6cd5 nhctl get type [flags] \u793a\u4f8b: # \u83b7\u53d6\u6240\u6709\u5e94\u7528 nhctl get application --kubeconfig=kubeconfigfile # \u83b7\u53d6\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u5e94\u7528 nhctl get application -n namespaceName --kubeconfig=kubeoconfigpath # \u83b7\u53d6\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u5e94\u7528\u90e8\u7f72 nhctl get deployment -n namespaceName -a bookinfo --kubeconfig=kubeconfigpath \u6807\u8bb0 Flags: -a, --application string application name -h, --help help for get -o, --outputType string json or yaml -l, --selector stringToString Selector (label query) to filter on, only supports '='.(e.g. -l key1=value1,key2=value2) (default []) Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl get"},{"location":"zh/cli/cli-get/#_1","text":"nhctl get type [flags] \u793a\u4f8b: # \u83b7\u53d6\u6240\u6709\u5e94\u7528 nhctl get application --kubeconfig=kubeconfigfile # \u83b7\u53d6\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u5e94\u7528 nhctl get application -n namespaceName --kubeconfig=kubeoconfigpath # \u83b7\u53d6\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u5e94\u7528\u90e8\u7f72 nhctl get deployment -n namespaceName -a bookinfo --kubeconfig=kubeconfigpath","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-get/#_2","text":"Flags: -a, --application string application name -h, --help help for get -o, --outputType string json or yaml -l, --selector stringToString Selector (label query) to filter on, only supports '='.(e.g. -l key1=value1,key2=value2) (default []) Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-init/","text":"\u521d\u59cb\u5316\u64cd\u4f5c \u7528\u6cd5: nhctl init [command] Available Commands: demo Init Nocalhost with demo mode dep dep component nhctl init demo Nocalhost \u670d\u52a1\u7aef\uff08nocalhost-api, nocalhost-web, nocalhost-dep\uff09\u521d\u59cb\u5316 \u7528\u6cd5 nhctl init demo [flags] \u793a\u4f8b: nhctl init demo -n [DevSpace Name] -t nodeport -p [port] nhctl init demo -n [DevSpace Name] \u6807\u8bb0 Flags: --force force to init, warning: it will remove all nocalhost old data -h, --help help for demo --inject-user-amount int inject user amount, example 10, max is 999 --inject-user-offset int inject user id offset, default is 1 (default 1) --inject-user-template string inject users template, example Techo%d, max length is 15 -p, --port int for NodePort usage set ports (default 80) --set strings set values of helm -s, --source string (Deprecated) bookinfo source, github or coding, default is github -t, --type string set NodePort or LoadBalancer to expose nocalhost service Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl init dep Nocalhost\uff08nocalhost-dep\uff09\u7ec4\u4ef6\u521d\u59cb\u5316 \u7528\u6cd5 nhctl init dep [flags] \u6807\u8bb0 Flags: -h, --help help for dep Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl init"},{"location":"zh/cli/cli-init/#nhctl-init-demo","text":"Nocalhost \u670d\u52a1\u7aef\uff08nocalhost-api, nocalhost-web, nocalhost-dep\uff09\u521d\u59cb\u5316","title":"nhctl init demo"},{"location":"zh/cli/cli-init/#_1","text":"nhctl init demo [flags] \u793a\u4f8b: nhctl init demo -n [DevSpace Name] -t nodeport -p [port] nhctl init demo -n [DevSpace Name]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-init/#_2","text":"Flags: --force force to init, warning: it will remove all nocalhost old data -h, --help help for demo --inject-user-amount int inject user amount, example 10, max is 999 --inject-user-offset int inject user id offset, default is 1 (default 1) --inject-user-template string inject users template, example Techo%d, max length is 15 -p, --port int for NodePort usage set ports (default 80) --set strings set values of helm -s, --source string (Deprecated) bookinfo source, github or coding, default is github -t, --type string set NodePort or LoadBalancer to expose nocalhost service Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-init/#nhctl-init-dep","text":"Nocalhost\uff08nocalhost-dep\uff09\u7ec4\u4ef6\u521d\u59cb\u5316","title":"nhctl init dep"},{"location":"zh/cli/cli-init/#_3","text":"nhctl init dep [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-init/#_4","text":"Flags: -h, --help help for dep Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-install/","text":"\u5e94\u7528\u5b89\u88c5 \u7528\u6cd5 nhctl install [NAME] [flags] \u6807\u8bb0 Flags: --config string specify a config relative to .nocalhost dir -r, --git-ref string resources git ref -u, --git-url string resources git url --helm-chart-name string chart name --helm-repo-name string chart repository name --helm-repo-url string chart repository url where to locate the requested chart --helm-repo-version string chart repository version -f, --helm-values string helm's Value.yaml -h, --help help for install --ignore-pre-install ignore pre-install --local-path string local path for application -c, --outer-config string specify a config.yaml in local path --resource-path strings resources path --set strings set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -t, --type string nocalhost application type: helmRepo, helmGit, helmLocal, rawManifest, rawManifestGit, rawManifestLocal or kustomizeGit --wait wait for completion Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl install"},{"location":"zh/cli/cli-install/#_1","text":"nhctl install [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-install/#_2","text":"Flags: --config string specify a config relative to .nocalhost dir -r, --git-ref string resources git ref -u, --git-url string resources git url --helm-chart-name string chart name --helm-repo-name string chart repository name --helm-repo-url string chart repository url where to locate the requested chart --helm-repo-version string chart repository version -f, --helm-values string helm's Value.yaml -h, --help help for install --ignore-pre-install ignore pre-install --local-path string local path for application -c, --outer-config string specify a config.yaml in local path --resource-path strings resources path --set strings set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -t, --type string nocalhost application type: helmRepo, helmGit, helmLocal, rawManifest, rawManifestGit, rawManifestLocal or kustomizeGit --wait wait for completion Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-k/","text":"kubectl \u547d\u4ee4 \u7528\u6cd5: nhctl k [command] Available Commands: delete Delete resources by filenames, stdin, resources and names, or by resources and label selector. exec Execute a command in a container logs Print the logs for a container in a pod or specified resource nhctl k delete \u7528\u6cd5 nhctl k delete [flags] \u793a\u4f8b: nhctl k delete [podName] --namespace nocalhost-reserved --kubeconfig=[path] \u6807\u8bb0 Flags: --all Delete all resources, including uninitialized ones, in the namespace of the specified resource types. -A, --all-namespaces If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace. --cascade string[=\"background\"] Must be \"background\", \"orphan\", or \"foreground\". Selects the deletion cascading strategy for the dependents (e.g. Pods created by a ReplicationController). Defaults to background. (default \"background\") --dry-run string[=\"unchanged\"] Must be \"none\", \"server\", or \"client\". If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server-side request without persisting the resource. (default \"none\") --field-selector string Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type. -f, --filename strings containing the resource to delete. --force If true, immediately remove resources from API and bypass graceful deletion. Note that immediate deletion of some resources may result in inconsistency or data loss and requires confirmation. --grace-period int Period of time in seconds given to the resource to terminate gracefully. Ignored if negative. Set to 1 for immediate shutdown. Can only be set to 0 when --force is true (force deletion). (default -1) -h, --help help for delete --ignore-not-found Treat \"resource not found\" as a successful delete. Defaults to \"true\" when --all is specified. -k, --kustomize string Process a kustomization directory. This flag can't be used together with -f or -R. --now If true, resources are signaled for immediate shutdown (same as --grace-period=1). -o, --output string Output mode. Use \"-o name\" for shorter output (resource/name). --raw string Raw URI to DELETE to the server. Uses the transport specified by the kubeconfig file. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. -l, --selector string Selector (label query) to filter on, not including uninitialized ones. --timeout duration The length of time to wait before giving up on a delete, zero means determine a timeout from the size of the object --wait If true, wait for resources to be gone before returning. This waits for finalizers. (default true) Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl k exec \u7528\u6cd5 nhctl k exec [flags] \u793a\u4f8b: exec (POD | TYPE/NAME) [-c CONTAINER] [flags] -- COMMAND [args...] \u6807\u8bb0 Flags: -c, --container string Container name. If omitted, the first container in the pod will be chosen -h, --help help for exec -i, --stdin Pass stdin to the container -t, --tty Stdin is a TTY Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl k logs \u7528\u6cd5 nhctl k logs [flags] \u793a\u4f8b: nhctl logs [podName] -c [containerName] -f=true --tail=1 --namespace nocalhost-reserved --kubeconfig=[path] \u6807\u8bb0 Flags: --all-containers Get all containers' logs in the pod(s). -c, --container string Print the logs of this container -f, --follow Specify if the logs should be streamed. -h, --help help for logs --ignore-errors If watching / following pod logs, allow for any errors that occur to be non-fatal --insecure-skip-tls-verify-backend Skip verifying the identity of the kubelet that logs are requested from. In theory, an attacker could provide invalid log content back. You might want to use this if your kubelet serving certificates have expired. --limit-bytes int Maximum bytes of logs to return. Defaults to no limit. --max-log-requests int Specify maximum number of concurrent logs to follow when using by a selector. Defaults to 5. (default 5) --pod-running-timeout duration The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running (default 20s) --prefix Prefix each log line with the log source (pod name and container name) -p, --previous If true, print the logs for the previous instance of the container in a pod if it exists. -l, --selector string Selector (label query) to filter on. --since duration Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of since-time / since may be used. --since-time string Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of since-time / since may be used. --tail int Lines of recent log file to display. Defaults to -1 with no selector, showing all log lines otherwise 10, if a selector is provided. (default -1) --timestamps Include timestamps on each line in the log output Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl k"},{"location":"zh/cli/cli-k/#nhctl-k-delete","text":"","title":"nhctl k delete"},{"location":"zh/cli/cli-k/#_1","text":"nhctl k delete [flags] \u793a\u4f8b: nhctl k delete [podName] --namespace nocalhost-reserved --kubeconfig=[path]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-k/#_2","text":"Flags: --all Delete all resources, including uninitialized ones, in the namespace of the specified resource types. -A, --all-namespaces If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace. --cascade string[=\"background\"] Must be \"background\", \"orphan\", or \"foreground\". Selects the deletion cascading strategy for the dependents (e.g. Pods created by a ReplicationController). Defaults to background. (default \"background\") --dry-run string[=\"unchanged\"] Must be \"none\", \"server\", or \"client\". If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server-side request without persisting the resource. (default \"none\") --field-selector string Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type. -f, --filename strings containing the resource to delete. --force If true, immediately remove resources from API and bypass graceful deletion. Note that immediate deletion of some resources may result in inconsistency or data loss and requires confirmation. --grace-period int Period of time in seconds given to the resource to terminate gracefully. Ignored if negative. Set to 1 for immediate shutdown. Can only be set to 0 when --force is true (force deletion). (default -1) -h, --help help for delete --ignore-not-found Treat \"resource not found\" as a successful delete. Defaults to \"true\" when --all is specified. -k, --kustomize string Process a kustomization directory. This flag can't be used together with -f or -R. --now If true, resources are signaled for immediate shutdown (same as --grace-period=1). -o, --output string Output mode. Use \"-o name\" for shorter output (resource/name). --raw string Raw URI to DELETE to the server. Uses the transport specified by the kubeconfig file. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. -l, --selector string Selector (label query) to filter on, not including uninitialized ones. --timeout duration The length of time to wait before giving up on a delete, zero means determine a timeout from the size of the object --wait If true, wait for resources to be gone before returning. This waits for finalizers. (default true) Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-k/#nhctl-k-exec","text":"","title":"nhctl k exec"},{"location":"zh/cli/cli-k/#_3","text":"nhctl k exec [flags] \u793a\u4f8b: exec (POD | TYPE/NAME) [-c CONTAINER] [flags] -- COMMAND [args...]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-k/#_4","text":"Flags: -c, --container string Container name. If omitted, the first container in the pod will be chosen -h, --help help for exec -i, --stdin Pass stdin to the container -t, --tty Stdin is a TTY Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-k/#nhctl-k-logs","text":"","title":"nhctl k logs"},{"location":"zh/cli/cli-k/#_5","text":"nhctl k logs [flags] \u793a\u4f8b: nhctl logs [podName] -c [containerName] -f=true --tail=1 --namespace nocalhost-reserved --kubeconfig=[path]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-k/#_6","text":"Flags: --all-containers Get all containers' logs in the pod(s). -c, --container string Print the logs of this container -f, --follow Specify if the logs should be streamed. -h, --help help for logs --ignore-errors If watching / following pod logs, allow for any errors that occur to be non-fatal --insecure-skip-tls-verify-backend Skip verifying the identity of the kubelet that logs are requested from. In theory, an attacker could provide invalid log content back. You might want to use this if your kubelet serving certificates have expired. --limit-bytes int Maximum bytes of logs to return. Defaults to no limit. --max-log-requests int Specify maximum number of concurrent logs to follow when using by a selector. Defaults to 5. (default 5) --pod-running-timeout duration The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running (default 20s) --prefix Prefix each log line with the log source (pod name and container name) -p, --previous If true, print the logs for the previous instance of the container in a pod if it exists. -l, --selector string Selector (label query) to filter on. --since duration Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of since-time / since may be used. --since-time string Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of since-time / since may be used. --tail int Lines of recent log file to display. Defaults to -1 with no selector, showing all log lines otherwise 10, if a selector is provided. (default -1) --timestamps Include timestamps on each line in the log output Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-list/","text":"\u5217\u51fa\u6240\u6709\u5e94\u7528 \u7528\u6cd5 nhctl list [NAME] [flags] Aliases: list, ls \u6807\u8bb0 Flags: --full list application meta full -h, --help help for list --json use json as out put, only supports for 'nhctl list' --yaml use yaml as out put, only supports for 'nhctl list' Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl list"},{"location":"zh/cli/cli-list/#_1","text":"nhctl list [NAME] [flags] Aliases: list, ls","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-list/#_2","text":"Flags: --full list application meta full -h, --help help for list --json use json as out put, only supports for 'nhctl list' --yaml use yaml as out put, only supports for 'nhctl list' Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-port-forward/","text":"\u7aef\u53e3\u8f6c\u53d1 \u7528\u6cd5: nhctl port-forward [command] Available Commands: end stop port-forward list list port-forward start Forward local port to remote pod's port nhctl port-forward end \u7528\u6cd5 nhctl port-forward end [NAME] [flags] \u6807\u8bb0 Flags: -d, --deployment string k8s deployment which you want to forward to -h, --help help for end -p, --port string stop specify port-forward -t, --type string specify service type (default \"deployment\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl port-forward list \u7528\u6cd5 nhctl port-forward list [NAME] [flags] \u6807\u8bb0 Flags: -h, --help help for list --json use json as out put --yaml use yaml as out put Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl port-forward start \u7528\u6cd5 nhctl port-forward start [NAME] [flags] \u6807\u8bb0 Flags: -c, --container string which container of pod to run command -d, --deployment string k8s deployment which you want to forward to -p, --dev-port strings port-forward between pod and local, such 8080:8080 or :8080(random localPort) --follow stock here waiting for disconnect or return immediately -f, --forward forward actually, deprecated -h, --help help for start --pod string specify pod name -t, --type string specify service type (default \"deployment\") --way string specify port-forward way, deprecated (default \"manual\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl port-forward"},{"location":"zh/cli/cli-port-forward/#nhctl-port-forward-end","text":"","title":"nhctl port-forward end"},{"location":"zh/cli/cli-port-forward/#_1","text":"nhctl port-forward end [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-port-forward/#_2","text":"Flags: -d, --deployment string k8s deployment which you want to forward to -h, --help help for end -p, --port string stop specify port-forward -t, --type string specify service type (default \"deployment\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-port-forward/#nhctl-port-forward-list","text":"","title":"nhctl port-forward list"},{"location":"zh/cli/cli-port-forward/#_3","text":"nhctl port-forward list [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-port-forward/#_4","text":"Flags: -h, --help help for list --json use json as out put --yaml use yaml as out put Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-port-forward/#nhctl-port-forward-start","text":"","title":"nhctl port-forward start"},{"location":"zh/cli/cli-port-forward/#_5","text":"nhctl port-forward start [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-port-forward/#_6","text":"Flags: -c, --container string which container of pod to run command -d, --deployment string k8s deployment which you want to forward to -p, --dev-port strings port-forward between pod and local, such 8080:8080 or :8080(random localPort) --follow stock here waiting for disconnect or return immediately -f, --forward forward actually, deprecated -h, --help help for start --pod string specify pod name -t, --type string specify service type (default \"deployment\") --way string specify port-forward way, deprecated (default \"manual\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-profile/","text":"Profile \u7ba1\u7406 Usage: nhctl profile [command] Available Commands: get Get a config item of Profile set Set a config item of Profile nhctl profile get \u83b7\u53d6 Profile \u6c47\u603b\u7684\u4e00\u4e2a\u914d\u7f6e\u9879 \u7528\u6cd5 nhctl profile get [flags] \u6807\u8bb0 Flags: -c, --container string container name of pod -d, --deployment string k8s workload name -h, --help help for get -k, --key string key of dev config -t, --type string specify service type (default \"deployment\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl profile set \u914d\u7f6e Profile \u4e2d\u7684\u4e00\u4e2a\u914d\u7f6e\u9879 \u7528\u6cd5 nhctl profile set [flags] \u6807\u8bb0 Flags: -c, --container string container name of pod -d, --deployment string k8s workload name -h, --help help for set -k, --key string key of dev config -t, --type string specify service type (default \"deployment\") -v, --value string value of dev config Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl profile"},{"location":"zh/cli/cli-profile/#nhctl-profile-get","text":"\u83b7\u53d6 Profile \u6c47\u603b\u7684\u4e00\u4e2a\u914d\u7f6e\u9879","title":"nhctl profile get"},{"location":"zh/cli/cli-profile/#_1","text":"nhctl profile get [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-profile/#_2","text":"Flags: -c, --container string container name of pod -d, --deployment string k8s workload name -h, --help help for get -k, --key string key of dev config -t, --type string specify service type (default \"deployment\") Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-profile/#nhctl-profile-set","text":"\u914d\u7f6e Profile \u4e2d\u7684\u4e00\u4e2a\u914d\u7f6e\u9879","title":"nhctl profile set"},{"location":"zh/cli/cli-profile/#_3","text":"nhctl profile set [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-profile/#_4","text":"Flags: -c, --container string container name of pod -d, --deployment string k8s workload name -h, --help help for set -k, --key string key of dev config -t, --type string specify service type (default \"deployment\") -v, --value string value of dev config Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-pvc/","text":"\u7ba1\u7406\u6301\u4e45\u5316\u5377 \u7528\u6cd5: nhctl pvc [command] Available Commands: clean Clean up PersistVolumeClaims list List PersistVolumeClaims nhctl pvc clean \u6e05\u695a\u6301\u4e45\u5316\u5377 \u7528\u6cd5 nhctl pvc clean [flags] \u6807\u8bb0 Flags: --app string Clean up PVCs of specified application --controller string Clean up PVCs of specified service -h, --help help for clean --name string Clean up specified PVC Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl pvc list \u5217\u51fa\u6240\u6709\u7684\u6301\u4e45\u5316\u5377 \u7528\u6cd5 nhctl pvc list [flags] \u6807\u8bb0 Flags: --app string List PVCs of specified application -h, --help help for list --json Use json as the output format --svc string List PVCs of specified service --yaml Use yaml as the output format Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl pvc"},{"location":"zh/cli/cli-pvc/#nhctl-pvc-clean","text":"\u6e05\u695a\u6301\u4e45\u5316\u5377","title":"nhctl pvc clean"},{"location":"zh/cli/cli-pvc/#_1","text":"nhctl pvc clean [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-pvc/#_2","text":"Flags: --app string Clean up PVCs of specified application --controller string Clean up PVCs of specified service -h, --help help for clean --name string Clean up specified PVC Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-pvc/#nhctl-pvc-list","text":"\u5217\u51fa\u6240\u6709\u7684\u6301\u4e45\u5316\u5377","title":"nhctl pvc list"},{"location":"zh/cli/cli-pvc/#_3","text":"nhctl pvc list [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-pvc/#_4","text":"Flags: --app string List PVCs of specified application -h, --help help for list --json Use json as the output format --svc string List PVCs of specified service --yaml Use yaml as the output format Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-render/","text":"\u6e32\u67d3\u4e00\u4e2a\u6587\u4ef6\u5df2\u8fdb\u884c\u8c03\u8bd5 \u7528\u6cd5 nhctl render [NAME] [flags] \u6807\u8bb0 Flags: -e, --env path string the env file for render injection -h, --help help for render Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl render"},{"location":"zh/cli/cli-render/#_1","text":"nhctl render [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-render/#_2","text":"Flags: -e, --env path string the env file for render injection -h, --help help for render Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-reset/","text":"\u91cd\u7f6e\u5e94\u7528 \u7528\u6cd5 nhctl reset [NAME] [flags] \u6807\u8bb0 Flags: -h, --help help for reset Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl reset"},{"location":"zh/cli/cli-reset/#_1","text":"nhctl reset [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-reset/#_2","text":"Flags: -h, --help help for reset Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-sync-status/","text":"\u8ddf\u8e2a\u6587\u4ef6\u540c\u6b65\u72b6\u6001\uff0c\u5305\u62ec\u672c\u5730\u6587\u4ef6\u5939\u548c\u8fdc\u7aef \u7528\u6cd5 nhctl sync-status [NAME] [flags] \u6807\u8bb0 Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet (default \"deployment\") -d, --deployment string k8s deployment which your developing service exists (default \"deployment\") -h, --help help for sync-status --override override the remote changing according to the local sync folder Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl sync status"},{"location":"zh/cli/cli-sync-status/#_1","text":"nhctl sync-status [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-sync-status/#_2","text":"Flags: -t, --controller-type string kind of k8s controller,such as deployment,statefulSet (default \"deployment\") -d, --deployment string k8s deployment which your developing service exists (default \"deployment\") -h, --help help for sync-status --override override the remote changing according to the local sync folder Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-sync/","text":"\u5c06\u6587\u4ef6\u540c\u6b65\u5230\u8fdc\u7aef K8s \u7684 POD \u4e2d \u7528\u6cd5 nhctl sync [NAME] [flags] \u6807\u8bc6 Flags: --container string container name of pod to sync -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -b, --double if use double side sync -h, --help help for sync -i, --ignored-pattern strings local ignored pattern --overwrite override the remote changing according to the local sync folder while start up (default true) --resume resume file sync --stop stop file sync -s, --synced-pattern strings local synced pattern Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl sync"},{"location":"zh/cli/cli-sync/#_1","text":"nhctl sync [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-sync/#_2","text":"Flags: --container string container name of pod to sync -t, --controller-type string kind of k8s controller,such as deployment,statefulSet -d, --deployment string k8s deployment which your developing service exists -b, --double if use double side sync -h, --help help for sync -i, --ignored-pattern strings local ignored pattern --overwrite override the remote changing according to the local sync folder while start up (default true) --resume resume file sync --stop stop file sync -s, --synced-pattern strings local synced pattern Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bc6"},{"location":"zh/cli/cli-uninstall/","text":"\u5378\u8f7d\u5e94\u7528 \u7528\u6cd5 nhctl uninstall [NAME] [flags] \u6807\u8bb0 Flags: --force force to uninstall anyway -h, --help help for uninstall Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl-uninstall"},{"location":"zh/cli/cli-uninstall/#_1","text":"nhctl uninstall [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-uninstall/#_2","text":"Flags: --force force to uninstall anyway -h, --help help for uninstall Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-upgrade/","text":"\u5347\u7ea7\u4e00\u4e2a K8s \u5e94\u7528 \u7528\u6cd5 nhctl upgrade [NAME] [flags] \u6807\u8bb0 Flags: --config string specify a config relative to .nocalhost dir -r, --git-ref string resources git ref -u, --git-url string resources git url --helm-chart-name string chart name --helm-repo-name string chart repository name --helm-repo-url string chart repository url where to locate the requested chart --helm-repo-version string chart repository version -f, --helm-values string helm's Value.yaml -h, --help help for upgrade --local-path string local path for application -c, --outer-config string specify a config.yaml in local path --resource-path strings resources path --set strings set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)","title":"nhctl-upgrade"},{"location":"zh/cli/cli-upgrade/#_1","text":"nhctl upgrade [NAME] [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-upgrade/#_2","text":"Flags: --config string specify a config relative to .nocalhost dir -r, --git-ref string resources git ref -u, --git-url string resources git url --helm-chart-name string chart name --helm-repo-name string chart repository name --helm-repo-url string chart repository url where to locate the requested chart --helm-repo-version string chart repository version -f, --helm-values string helm's Value.yaml -h, --help help for upgrade --local-path string local path for application -c, --outer-config string specify a config.yaml in local path --resource-path strings resources path --set strings set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-version/","text":"\u83b7\u53d6 nhctl \u7684\u7248\u672c\u53f7 \u7528\u6cd5 nhctl version [flags] \u6807\u8bb0 Flags: -h, --help help for version Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl-version"},{"location":"zh/cli/cli-version/#_1","text":"nhctl version [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-version/#_2","text":"Flags: -h, --help help for version Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-yaml/","text":"Yaml \u5de5\u5177 Usage: nhctl yaml [command] Available Commands: from-json Convert json to yaml to-json Convert yaml to json nhctl yaml from-json \u5c06 json \u6587\u4ef6\u8f6c\u4e3a yaml \u6587\u4ef6 \u7528\u6cd5 nhctl yaml from-json [flags] \u6807\u8bb0 Flags: -h, --help help for from-json Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace nhctl yaml to-json \u5c06 yaml \u6587\u4ef6\u8f6c\u4e3a json \u6587\u4ef6 \u7528\u6cd5 nhctl yaml to-json [flags] \u6807\u8bb0 Flags: -h, --help help for yaml Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"nhctl-yaml"},{"location":"zh/cli/cli-yaml/#nhctl-yaml-from-json","text":"\u5c06 json \u6587\u4ef6\u8f6c\u4e3a yaml \u6587\u4ef6","title":"nhctl yaml from-json"},{"location":"zh/cli/cli-yaml/#_1","text":"nhctl yaml from-json [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-yaml/#_2","text":"Flags: -h, --help help for from-json Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/cli/cli-yaml/#nhctl-yaml-to-json","text":"\u5c06 yaml \u6587\u4ef6\u8f6c\u4e3a json \u6587\u4ef6","title":"nhctl yaml to-json"},{"location":"zh/cli/cli-yaml/#_3","text":"nhctl yaml to-json [flags]","title":"\u7528\u6cd5"},{"location":"zh/cli/cli-yaml/#_4","text":"Flags: -h, --help help for yaml Global Flags: --debug enable debug level log --kubeconfig string the path of the kubeconfig file -n, --namespace string kubernetes namespace","title":"\u6807\u8bb0"},{"location":"zh/ide/app/","text":"Apply VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Clear Persistent Data VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Config VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Upgrade App VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Load Resource VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Enter DevMode VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Exit DevMode VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Config VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Clear Persistent Data VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Associate Local Directory VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Copy Terminal VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Delete VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Logs VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Port Forward VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Port Forward List VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Reset VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Terminal VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"\u5e94\u7528\u548c\u5fae\u670d\u52a1"},{"location":"zh/ide/app/#apply","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Apply"},{"location":"zh/ide/app/#clear-persistent-data","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Clear Persistent Data"},{"location":"zh/ide/app/#config","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Config"},{"location":"zh/ide/app/#upgrade-app","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Upgrade App"},{"location":"zh/ide/app/#load-resource","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Load Resource"},{"location":"zh/ide/app/#enter-devmode","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Enter DevMode"},{"location":"zh/ide/app/#exit-devmode","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Exit DevMode"},{"location":"zh/ide/app/#config_1","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Config"},{"location":"zh/ide/app/#clear-persistent-data_1","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Clear Persistent Data"},{"location":"zh/ide/app/#associate-local-directory","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Associate Local Directory"},{"location":"zh/ide/app/#copy-terminal","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Copy Terminal"},{"location":"zh/ide/app/#delete","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Delete"},{"location":"zh/ide/app/#logs","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Logs"},{"location":"zh/ide/app/#port-forward","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Port Forward"},{"location":"zh/ide/app/#port-forward-list","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Port Forward List"},{"location":"zh/ide/app/#reset","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Reset"},{"location":"zh/ide/app/#terminal","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Terminal"},{"location":"zh/ide/cluster/","text":"\u8fde\u63a5\u96c6\u7fa4 Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u652f\u6301\u4e24\u79cd\u901a\u8fc7 kubeconfig \u8fde\u63a5\u96c6\u7fa4\u7684\u65b9\u5f0f 1. \u9009\u62e9 kubeconfig \u6587\u4ef6 \u5728\u4f60\u7684\u672c\u5730\u6587\u4ef6\u5939\u4e2d\u9009\u62e9\u4e00\u4e2a kubeconfig \u6587\u4ef6. \u9ed8\u8ba4\u8def\u5f84 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNocalhost \u63d2\u4ef6\u542f\u52a8\u65f6\u4f1a\u4ece ~/.kube/config \u8def\u5f84\u4e0b\u81ea\u52a8\u8bfb\u53d6\u60a8\u672c\u5730\u7684 kubeconfig\u3002\u60a8\u4e5f\u53ef\u4ee5\u66f4\u6362\u9ed8\u8ba4\u7684\u6587\u4ef6\u6240\u5728\u8def\u5f84\u3002 2. \u7c98\u8d34 kubeconfig \u6587\u672c \u7c98\u8d34 kubeconfig \u7684\u6587\u672c\u5185\u5bb9\u3002\u5728 kubeconfig \u88ab\u6210\u529f\u8bfb\u53d6\u540e\uff0c\u9009\u62e9\u9700\u8981\u8bbf\u95ee\u7684\u73af\u5883\uff0c\u7136\u540e\u8fde\u63a5\u96c6\u7fa4\u3002 \u83b7\u53d6 Kubeconfig \u4f60\u53ef\u4ee5\u901a\u8fc7\u5728 Kubernetes \u96c6\u7fa4\u6240\u5728\u7cfb\u7edf\u5185\u8fd0\u884c\u4e0b\u8ff0\u547d\u4ee4\u67e5\u770b kubeconfig\uff0c\u7136\u540e\u590d\u5236\u9ecf\u8d34\u5230\u63d2\u4ef6\u91cc\u3002 kubectl config view --minify --raw --flatten VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 \u70b9\u51fb \u8fde\u63a5\u7fa4\u96c6 \u70b9\u51fb Add Kubeconfig \u540e\u9009\u62e9\u5408\u9002\u7684\u8fde\u63a5\u65b9\u5f0f JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 \u70b9\u51fb \u8fde\u63a5\u7fa4\u96c6 \u9009\u62e9\u5408\u9002\u7684\u8fde\u63a5\u65b9\u5f0f \u79fb\u9664\u96c6\u7fa4 VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 \u53f3\u952e\u5355\u51fb\u6307\u5b9a\u96c6\u7fa4\uff0c\u7136\u540e\u70b9\u51fb Remove \u5c06\u8be5\u6307\u5b9a\u96c6\u7fa4\u4ece Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u96c6\u7fa4\u5217\u8868\u4e2d\u79fb\u9664\u8be5\u96c6\u7fa4\u3002 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 \u53f3\u952e\u5355\u51fb\u6307\u5b9a\u96c6\u7fa4\uff0c\u7136\u540e\u70b9\u51fb Remove \u5c06\u8be5\u6307\u5b9a\u96c6\u7fa4\u4ece Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u96c6\u7fa4\u5217\u8868\u4e2d\u79fb\u9664\u8be5\u96c6\u7fa4\u3002 \u67e5\u770b\u96c6\u7fa4 Kubeconfig \u53f3\u952e\u70b9\u51fb\u6307\u5b9a\u96c6\u7fa4\uff0c\u9009\u62e9 View Kubeconfig \uff0cNocalhost \u63d2\u4ef6\u4f1a\u6253\u5f00\u8be5\u96c6\u7fa4\u7684 kubeconfig\u3002 VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"\u96c6\u7fa4"},{"location":"zh/ide/cluster/#_1","text":"Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u652f\u6301\u4e24\u79cd\u901a\u8fc7 kubeconfig \u8fde\u63a5\u96c6\u7fa4\u7684\u65b9\u5f0f 1. \u9009\u62e9 kubeconfig \u6587\u4ef6 \u5728\u4f60\u7684\u672c\u5730\u6587\u4ef6\u5939\u4e2d\u9009\u62e9\u4e00\u4e2a kubeconfig \u6587\u4ef6. \u9ed8\u8ba4\u8def\u5f84 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNocalhost \u63d2\u4ef6\u542f\u52a8\u65f6\u4f1a\u4ece ~/.kube/config \u8def\u5f84\u4e0b\u81ea\u52a8\u8bfb\u53d6\u60a8\u672c\u5730\u7684 kubeconfig\u3002\u60a8\u4e5f\u53ef\u4ee5\u66f4\u6362\u9ed8\u8ba4\u7684\u6587\u4ef6\u6240\u5728\u8def\u5f84\u3002 2. \u7c98\u8d34 kubeconfig \u6587\u672c \u7c98\u8d34 kubeconfig \u7684\u6587\u672c\u5185\u5bb9\u3002\u5728 kubeconfig \u88ab\u6210\u529f\u8bfb\u53d6\u540e\uff0c\u9009\u62e9\u9700\u8981\u8bbf\u95ee\u7684\u73af\u5883\uff0c\u7136\u540e\u8fde\u63a5\u96c6\u7fa4\u3002 \u83b7\u53d6 Kubeconfig \u4f60\u53ef\u4ee5\u901a\u8fc7\u5728 Kubernetes \u96c6\u7fa4\u6240\u5728\u7cfb\u7edf\u5185\u8fd0\u884c\u4e0b\u8ff0\u547d\u4ee4\u67e5\u770b kubeconfig\uff0c\u7136\u540e\u590d\u5236\u9ecf\u8d34\u5230\u63d2\u4ef6\u91cc\u3002 kubectl config view --minify --raw --flatten VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 \u70b9\u51fb \u8fde\u63a5\u7fa4\u96c6 \u70b9\u51fb Add Kubeconfig \u540e\u9009\u62e9\u5408\u9002\u7684\u8fde\u63a5\u65b9\u5f0f JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 \u70b9\u51fb \u8fde\u63a5\u7fa4\u96c6 \u9009\u62e9\u5408\u9002\u7684\u8fde\u63a5\u65b9\u5f0f","title":"\u8fde\u63a5\u96c6\u7fa4"},{"location":"zh/ide/cluster/#_2","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 \u53f3\u952e\u5355\u51fb\u6307\u5b9a\u96c6\u7fa4\uff0c\u7136\u540e\u70b9\u51fb Remove \u5c06\u8be5\u6307\u5b9a\u96c6\u7fa4\u4ece Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u96c6\u7fa4\u5217\u8868\u4e2d\u79fb\u9664\u8be5\u96c6\u7fa4\u3002 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 \u53f3\u952e\u5355\u51fb\u6307\u5b9a\u96c6\u7fa4\uff0c\u7136\u540e\u70b9\u51fb Remove \u5c06\u8be5\u6307\u5b9a\u96c6\u7fa4\u4ece Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u96c6\u7fa4\u5217\u8868\u4e2d\u79fb\u9664\u8be5\u96c6\u7fa4\u3002","title":"\u79fb\u9664\u96c6\u7fa4"},{"location":"zh/ide/cluster/#kubeconfig","text":"\u53f3\u952e\u70b9\u51fb\u6307\u5b9a\u96c6\u7fa4\uff0c\u9009\u62e9 View Kubeconfig \uff0cNocalhost \u63d2\u4ef6\u4f1a\u6253\u5f00\u8be5\u96c6\u7fa4\u7684 kubeconfig\u3002 VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"\u67e5\u770b\u96c6\u7fa4 Kubeconfig"},{"location":"zh/ide/devspace/","text":"Note \u5982\u679c\u9700\u8981\u901a\u8fc7 Nocalhost \u7f16\u8f91\u5668\u63d2\u4ef6\u8fdb\u884c\u5e94\u7528\u5b89\u88c5\uff0c\u9700\u8981\u5148\u90e8\u7f72\u597d Nocalhost Server \u4e14\u5f53\u524d\u7528\u6237\u5177\u6709\u8be5\u5f00\u53d1\u7a7a\u95f4\u7684\u64cd\u4f5c\u6743\u9650\u3002\u53ef\u4ee5\u67e5\u9605 Nocalhost Server \u7684 \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u548c \u4f7f\u7528 Nocalhost Server \u3002 \u5220\u9664\u5e94\u7528 VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 Clear Persistent Data \u6e05\u9664\u4e00\u4e2a\u5f00\u53d1\u7a7a\u95f4\u7684\u6301\u4e45\u5316\u6570\u636e VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 \u53f3\u952e\u70b9\u51fb\u6307\u5b9a\u7684\u5f00\u53d1\u7a7a\u95f4\uff0c\u9009\u62e9 Clear persistent data \u5728\u5f39\u51fa\u6846\u4e2d\u9009\u62e9\u9700\u8981\u6e05\u9664\u7684\u6570\u636e JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u63d2\u4ef6\u6682\u65f6\u4e0d\u63d0\u4f9b\u6b64\u529f\u80fd Reset Note \u53ea\u6709\u5728\u8fde\u63a5\u5230 Nocalhost Server \u65f6\u624d\u80fd\u6267\u884c\u6b64\u64cd\u4f5c\u3002 \u91cd\u7f6e\u5f00\u53d1\u7a7a\u95f4\u64cd\u4f5c\u5c06\u4f1a\u5220\u9664\u6240\u6709\u5728 DevSpace \u91cc\u7684\u8d44\u6e90\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\u3002 VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 \u53f3\u952e\u70b9\u51fb\u6307\u5b9a\u5f00\u53d1\u7a7a\u95f4\uff0c\u9009\u62e9 Reset JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"\u5f00\u53d1\u7a7a\u95f4"},{"location":"zh/ide/devspace/#_1","text":"VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"\u5220\u9664\u5e94\u7528"},{"location":"zh/ide/devspace/#clear-persistent-data","text":"\u6e05\u9664\u4e00\u4e2a\u5f00\u53d1\u7a7a\u95f4\u7684\u6301\u4e45\u5316\u6570\u636e VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 \u53f3\u952e\u70b9\u51fb\u6307\u5b9a\u7684\u5f00\u53d1\u7a7a\u95f4\uff0c\u9009\u62e9 Clear persistent data \u5728\u5f39\u51fa\u6846\u4e2d\u9009\u62e9\u9700\u8981\u6e05\u9664\u7684\u6570\u636e JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6 JetBrains \u63d2\u4ef6\u6682\u65f6\u4e0d\u63d0\u4f9b\u6b64\u529f\u80fd","title":"Clear Persistent Data"},{"location":"zh/ide/devspace/#reset","text":"Note \u53ea\u6709\u5728\u8fde\u63a5\u5230 Nocalhost Server \u65f6\u624d\u80fd\u6267\u884c\u6b64\u64cd\u4f5c\u3002 \u91cd\u7f6e\u5f00\u53d1\u7a7a\u95f4\u64cd\u4f5c\u5c06\u4f1a\u5220\u9664\u6240\u6709\u5728 DevSpace \u91cc\u7684\u8d44\u6e90\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\u3002 VSCode \u7f16\u8f91\u5668\u63d2\u4ef6 \u53f3\u952e\u70b9\u51fb\u6307\u5b9a\u5f00\u53d1\u7a7a\u95f4\uff0c\u9009\u62e9 Reset JetBrains \u7f16\u8f91\u5668\u63d2\u4ef6","title":"Reset"},{"location":"zh/references/deploy-app-manual/","text":"\u524d\u7f6e\u6761\u4ef6 \u914d\u7f6e\u597d\u7684 Kubernetes Cluster (2\u6838CPU \u548c 4G \u5185\u5b58) \u53ef\u4ee5\u662f\u672c\u5730\u96c6\u7fa4, \u5982 minikube \u6216 Docker Kubernetes \u96c6\u7fa4, \u6216\u8fdc\u7aef\u96c6\u7fa4, \u6bd4\u5982 \u817e\u8baf\u7684 TKE . RBAC \u5728\u4e0a\u8ff0\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u542f\u7528 Configured kubeconfig file \u5177\u5907\u547d\u540d\u7a7a\u95f4\u7684\u7ba1\u7406\u5458\u6743\u9650 Helm \u5df2\u5b89\u88c5 Kubernetes API \u670d\u52a1\u53ef\u4ee5\u5728\u5185\u90e8\u548c\u5916\u90e8\u8bbf\u95ee \u8fd9\u91cc\u7528 minikube \u8fdb\u884c\u793a\u4f8b\u7684\u90e8\u7f72\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5c06\u793a\u4f8b\u5e94\u7528\u90e8\u7f72\u5728\u4efb\u610f Kubernetes \u96c6\u7fa4\u4e2d \u901a\u8fc7 Manifest \u90e8\u7f72 bookinfo \u5e94\u7528 \u6b65\u9aa41: \u521b\u5efa\u4e00\u4e2a test \u547d\u540d\u7a7a\u95f4 kubectl create namespace test \u6b65\u9aa42: \u901a\u8fc7 manifest \u5b89\u88c5\u5e94\u7528 ~/.nh/bin/nhctl install bookinfo -u https://github.com/nocalhost/bookinfo.git -t rawManifest -r test-case --resource-path manifest/templates -n test \u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u4e0b\u8ff0\u4fe1\u606f: cmd: git clone --branch test-case --depth 1 https://github.com/nocalhost/bookinfo.git /var/folders/db/rgrf2h2j4711zy7136hlx7840000gn/T/228374083 Cloning into '/var/folders/db/rgrf2h2j4711zy7136hlx7840000gn/T/228374083'... Job print-num-01 created Job print-num-01 running Job print-num-01 completed Resource(Job) dep-job created Resource(Service) details created Resource(Deployment) details created Resource(StatefulSet) web created Resource(ConfigMap) bookinfo-pre-install-config created Resource(Service) productpage created Resource(Deployment) productpage created Resource(Service) ratings created Resource(Deployment) ratings created Resource(Service) reviews created Resource(Deployment) reviews created Application bookinfo installed Starting port-forward for deployment productpage Port forward 39080:9080 Port-forward 39080:9080 has been started \u6b65\u9aa43\uff1a \u67e5\u770b\u60a8\u90e8\u7f72\u7684\u5e94\u7528 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u67e5\u770b manifest \u5e94\u7528\u7684\u90e8\u7f72\u72b6\u6001: kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE details 0/1 1 0 9s productpage 0/2 2 0 8s ratings 0/1 1 0 7s reviews 0/1 1 0 7s \u901a\u8fc7 Helm \u90e8\u7f72 bookinfo \u5e94\u7528 \u6b65\u9aa41: \u4ece Gihub \u4ed3\u5e93\u514b\u9686 bookinfo \u514b\u9686 bookinfo \u5e94\u7528\uff0c\u5728\u6210\u529f\u540e\u8fdb\u5165\u76ee\u5f55 git clone https://github.com/nocalhost/bookinfo.git cd bookinfo \u6b65\u9aa42: \u5b89\u88c5 Helm Chart Helm chart \u4f4d\u4e8e ./chart/bookinfo \u8def\u5f84\u4e2d, \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 helm install \u547d\u4ee4\u6765\u8fdb\u884c\u5b89\u88c5, Helm \u4f1a\u9ed8\u8ba4\u6839\u636e\u60a8\u7684 kubeconfig \u5c06 bookinfo \u5e94\u7528\u90e8\u7f72\u5230\u60a8\u9ed8\u8ba4\u7684 Kubernetes \u96c6\u7fa4\u4e2d: helm install bookinfo ./charts/bookinfo NAME: bookinfo LAST DEPLOYED: Fri May 21 19:18:30 2021 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None Tip \u53ef\u4ee5\u901a\u8fc7\u901a\u8fc7\u4f7f\u7528 --kubeconfig flag \u6307\u5b9a kubeconfig \u7684\u8def\u5f84\u3002\u8bf7\u67e5\u9605 Helm install \u83b7\u53d6\u66f4\u591a helm install \u7684\u4f7f\u7528\u5e2e\u52a9\u3002 \u6b65\u9aa43\uff1a \u67e5\u770b\u60a8\u7684 Helm \u90e8\u7f72 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u67e5\u770b helm \u7684\u90e8\u7f72\u72b6\u6001: helm list NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION bookinfo default 1 2021-05-21 19:18:30.268709 +0800 CST deployed nocalhost-bookinfo-1.2.2 1.3 kubectl get deployment -n default NAME READY UP-TO-DATE AVAILABLE AGE details 2/2 2 2 4m18s productpage 2/2 2 2 4m18s ratings 2/2 2 2 4m18s reviews 0/2 2 0 4m18s \u514b\u9686 bookinfo \u6e90\u4ee3\u7801 \u6211\u4eec\u5728 \u5feb\u901f\u5f00\u59cb \u91cc\u4f1a\u4f7f\u7528\u5230 bookinfo \u7684\u6e90\u4ee3\u7801\uff0c\u5efa\u8bae\u60a8\u53ef\u4ee5\u5148\u628a\u6e90\u7801\u514b\u9686\u5230\u672c\u5730\u5907\u7528\uff0c\u907f\u514d\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u56e0\u4e3a\u7f51\u7edc\u6216 SSL \u95ee\u9898\u5bfc\u81f4\u5f02\u5e38 bookinfo \u51854\u4e2a\u670d\u52a1\u7684\u6e90\u7801\u7684\u5730\u5740\uff1a productpage(Request Entrance): https://github.com/nocalhost/bookinfo-productpage reviews: https://github.com/nocalhost/bookinfo-reviews details: https://github.com/nocalhost/bookinfo-details ratings: https://github.com/nocalhost/bookinfo-ratings","title":"Deploy app manual"},{"location":"zh/references/deploy-app-manual/#_1","text":"\u914d\u7f6e\u597d\u7684 Kubernetes Cluster (2\u6838CPU \u548c 4G \u5185\u5b58) \u53ef\u4ee5\u662f\u672c\u5730\u96c6\u7fa4, \u5982 minikube \u6216 Docker Kubernetes \u96c6\u7fa4, \u6216\u8fdc\u7aef\u96c6\u7fa4, \u6bd4\u5982 \u817e\u8baf\u7684 TKE . RBAC \u5728\u4e0a\u8ff0\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u542f\u7528 Configured kubeconfig file \u5177\u5907\u547d\u540d\u7a7a\u95f4\u7684\u7ba1\u7406\u5458\u6743\u9650 Helm \u5df2\u5b89\u88c5 Kubernetes API \u670d\u52a1\u53ef\u4ee5\u5728\u5185\u90e8\u548c\u5916\u90e8\u8bbf\u95ee \u8fd9\u91cc\u7528 minikube \u8fdb\u884c\u793a\u4f8b\u7684\u90e8\u7f72\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5c06\u793a\u4f8b\u5e94\u7528\u90e8\u7f72\u5728\u4efb\u610f Kubernetes \u96c6\u7fa4\u4e2d","title":"\u524d\u7f6e\u6761\u4ef6"},{"location":"zh/references/deploy-app-manual/#manifest-bookinfo","text":"","title":"\u901a\u8fc7 Manifest \u90e8\u7f72 bookinfo \u5e94\u7528"},{"location":"zh/references/deploy-app-manual/#1-test","text":"kubectl create namespace test","title":"\u6b65\u9aa41: \u521b\u5efa\u4e00\u4e2a test \u547d\u540d\u7a7a\u95f4"},{"location":"zh/references/deploy-app-manual/#2-manifest","text":"~/.nh/bin/nhctl install bookinfo -u https://github.com/nocalhost/bookinfo.git -t rawManifest -r test-case --resource-path manifest/templates -n test \u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u4e0b\u8ff0\u4fe1\u606f: cmd: git clone --branch test-case --depth 1 https://github.com/nocalhost/bookinfo.git /var/folders/db/rgrf2h2j4711zy7136hlx7840000gn/T/228374083 Cloning into '/var/folders/db/rgrf2h2j4711zy7136hlx7840000gn/T/228374083'... Job print-num-01 created Job print-num-01 running Job print-num-01 completed Resource(Job) dep-job created Resource(Service) details created Resource(Deployment) details created Resource(StatefulSet) web created Resource(ConfigMap) bookinfo-pre-install-config created Resource(Service) productpage created Resource(Deployment) productpage created Resource(Service) ratings created Resource(Deployment) ratings created Resource(Service) reviews created Resource(Deployment) reviews created Application bookinfo installed Starting port-forward for deployment productpage Port forward 39080:9080 Port-forward 39080:9080 has been started","title":"\u6b65\u9aa42: \u901a\u8fc7 manifest \u5b89\u88c5\u5e94\u7528"},{"location":"zh/references/deploy-app-manual/#3","text":"\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u67e5\u770b manifest \u5e94\u7528\u7684\u90e8\u7f72\u72b6\u6001: kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE details 0/1 1 0 9s productpage 0/2 2 0 8s ratings 0/1 1 0 7s reviews 0/1 1 0 7s","title":"\u6b65\u9aa43\uff1a \u67e5\u770b\u60a8\u90e8\u7f72\u7684\u5e94\u7528"},{"location":"zh/references/deploy-app-manual/#helm-bookinfo","text":"","title":"\u901a\u8fc7 Helm \u90e8\u7f72 bookinfo \u5e94\u7528"},{"location":"zh/references/deploy-app-manual/#1-gihub-bookinfo","text":"\u514b\u9686 bookinfo \u5e94\u7528\uff0c\u5728\u6210\u529f\u540e\u8fdb\u5165\u76ee\u5f55 git clone https://github.com/nocalhost/bookinfo.git cd bookinfo","title":"\u6b65\u9aa41: \u4ece Gihub \u4ed3\u5e93\u514b\u9686 bookinfo"},{"location":"zh/references/deploy-app-manual/#2-helm-chart","text":"Helm chart \u4f4d\u4e8e ./chart/bookinfo \u8def\u5f84\u4e2d, \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 helm install \u547d\u4ee4\u6765\u8fdb\u884c\u5b89\u88c5, Helm \u4f1a\u9ed8\u8ba4\u6839\u636e\u60a8\u7684 kubeconfig \u5c06 bookinfo \u5e94\u7528\u90e8\u7f72\u5230\u60a8\u9ed8\u8ba4\u7684 Kubernetes \u96c6\u7fa4\u4e2d: helm install bookinfo ./charts/bookinfo NAME: bookinfo LAST DEPLOYED: Fri May 21 19:18:30 2021 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None Tip \u53ef\u4ee5\u901a\u8fc7\u901a\u8fc7\u4f7f\u7528 --kubeconfig flag \u6307\u5b9a kubeconfig \u7684\u8def\u5f84\u3002\u8bf7\u67e5\u9605 Helm install \u83b7\u53d6\u66f4\u591a helm install \u7684\u4f7f\u7528\u5e2e\u52a9\u3002","title":"\u6b65\u9aa42: \u5b89\u88c5 Helm Chart"},{"location":"zh/references/deploy-app-manual/#3-helm","text":"\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u67e5\u770b helm \u7684\u90e8\u7f72\u72b6\u6001: helm list NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION bookinfo default 1 2021-05-21 19:18:30.268709 +0800 CST deployed nocalhost-bookinfo-1.2.2 1.3 kubectl get deployment -n default NAME READY UP-TO-DATE AVAILABLE AGE details 2/2 2 2 4m18s productpage 2/2 2 2 4m18s ratings 2/2 2 2 4m18s reviews 0/2 2 0 4m18s","title":"\u6b65\u9aa43\uff1a \u67e5\u770b\u60a8\u7684 Helm \u90e8\u7f72"},{"location":"zh/references/deploy-app-manual/#bookinfo","text":"\u6211\u4eec\u5728 \u5feb\u901f\u5f00\u59cb \u91cc\u4f1a\u4f7f\u7528\u5230 bookinfo \u7684\u6e90\u4ee3\u7801\uff0c\u5efa\u8bae\u60a8\u53ef\u4ee5\u5148\u628a\u6e90\u7801\u514b\u9686\u5230\u672c\u5730\u5907\u7528\uff0c\u907f\u514d\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u56e0\u4e3a\u7f51\u7edc\u6216 SSL \u95ee\u9898\u5bfc\u81f4\u5f02\u5e38 bookinfo \u51854\u4e2a\u670d\u52a1\u7684\u6e90\u7801\u7684\u5730\u5740\uff1a productpage(Request Entrance): https://github.com/nocalhost/bookinfo-productpage reviews: https://github.com/nocalhost/bookinfo-reviews details: https://github.com/nocalhost/bookinfo-details ratings: https://github.com/nocalhost/bookinfo-ratings","title":"\u514b\u9686 bookinfo \u6e90\u4ee3\u7801"},{"location":"zh/references/deploy-app/","text":"\u524d\u7f6e\u6761\u4ef6 \u914d\u7f6e\u597d\u7684 Kubernetes Cluster (2\u6838CPU \u548c 4G \u5185\u5b58) \u53ef\u4ee5\u662f\u672c\u5730\u96c6\u7fa4, \u5982 minikube \u6216 Docker Kubernetes \u96c6\u7fa4, \u6216\u8fdc\u7aef\u96c6\u7fa4, \u6bd4\u5982 \u817e\u8baf\u7684 TKE . RBAC \u5728\u4e0a\u8ff0\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u542f\u7528 Configured kubeconfig file \u5177\u5907\u547d\u540d\u7a7a\u95f4\u7684\u7ba1\u7406\u5458\u6743\u9650 Kubernetes API \u670d\u52a1\u53ef\u4ee5\u5728\u5185\u90e8\u548c\u5916\u90e8\u8bbf\u95ee \u8fd9\u91cc\u7528 minikube \u8fdb\u884c\u793a\u4f8b\u7684\u90e8\u7f72\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5c06\u793a\u4f8b\u5e94\u7528\u90e8\u7f72\u5728\u4efb\u610f Kubernetes \u96c6\u7fa4\u4e2d \u901a\u8fc7 Manifest \u90e8\u7f72 bookinfo \u5e94\u7528 \u9009\u62e9\u4efb\u610f\u547d\u540d\u7a7a\u95f4\uff0c\u70b9\u51fb \u5728\u5f39\u51fa\u6846\u4e2d\u9009\u62e9 Clone from Git \u8f93\u5165\u6211\u4eec\u793a\u4f8b\u5e94\u7528 Bookinfo \u7684 Git \u94fe\u63a5\uff1a https://github.com/nocalhost/bookinfo.git \u9009\u62e9\u9ed8\u8ba4\u5206\u652f\u540e\uff0c\u5728\u4e0b\u62c9\u6846\u4e2d\u9009\u62e9 config.manifest.git.yaml \u7c7b\u578b \u7b49\u5f85\u5b89\u88c5\u7ed3\u675f\u5373\u53ef\u5728\u547d\u540d\u7a7a\u95f4\u4e0a\u770b\u5230\u65b0\u90e8\u7f72\u7684\u5e94\u7528","title":"Deploy app"},{"location":"zh/references/deploy-app/#_1","text":"\u914d\u7f6e\u597d\u7684 Kubernetes Cluster (2\u6838CPU \u548c 4G \u5185\u5b58) \u53ef\u4ee5\u662f\u672c\u5730\u96c6\u7fa4, \u5982 minikube \u6216 Docker Kubernetes \u96c6\u7fa4, \u6216\u8fdc\u7aef\u96c6\u7fa4, \u6bd4\u5982 \u817e\u8baf\u7684 TKE . RBAC \u5728\u4e0a\u8ff0\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u542f\u7528 Configured kubeconfig file \u5177\u5907\u547d\u540d\u7a7a\u95f4\u7684\u7ba1\u7406\u5458\u6743\u9650 Kubernetes API \u670d\u52a1\u53ef\u4ee5\u5728\u5185\u90e8\u548c\u5916\u90e8\u8bbf\u95ee \u8fd9\u91cc\u7528 minikube \u8fdb\u884c\u793a\u4f8b\u7684\u90e8\u7f72\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5c06\u793a\u4f8b\u5e94\u7528\u90e8\u7f72\u5728\u4efb\u610f Kubernetes \u96c6\u7fa4\u4e2d","title":"\u524d\u7f6e\u6761\u4ef6"},{"location":"zh/references/deploy-app/#manifest-bookinfo","text":"\u9009\u62e9\u4efb\u610f\u547d\u540d\u7a7a\u95f4\uff0c\u70b9\u51fb \u5728\u5f39\u51fa\u6846\u4e2d\u9009\u62e9 Clone from Git \u8f93\u5165\u6211\u4eec\u793a\u4f8b\u5e94\u7528 Bookinfo \u7684 Git \u94fe\u63a5\uff1a https://github.com/nocalhost/bookinfo.git \u9009\u62e9\u9ed8\u8ba4\u5206\u652f\u540e\uff0c\u5728\u4e0b\u62c9\u6846\u4e2d\u9009\u62e9 config.manifest.git.yaml \u7c7b\u578b \u7b49\u5f85\u5b89\u88c5\u7ed3\u675f\u5373\u53ef\u5728\u547d\u540d\u7a7a\u95f4\u4e0a\u770b\u5230\u65b0\u90e8\u7f72\u7684\u5e94\u7528","title":"\u901a\u8fc7 Manifest \u90e8\u7f72 bookinfo \u5e94\u7528"},{"location":"zh/references/deploy-quick-demo/","text":"Nocalhost IDE \u63d2\u4ef6\u5185\u7f6e\u4e86\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5feb\u901f\u5b89\u88c5\uff1a \u5728\u96c6\u7fa4\u5217\u8868\u4e2d\u9009\u62e9\u4efb\u610f\u547d\u540d\u7a7a\u95f4 \u70b9\u51fb \u6309\u94ae\u8fdb\u884c\u5e94\u7528\u90e8\u7f72 \u9009\u62e9 Install Quick Demo \u5b89\u88c5\u793a\u4f8b\u5e94\u7528 Note \u793a\u4f8b\u5e94\u7528\u5df2\u7ecf\u914d\u7f6e\u597d\u7aef\u53e3\u8f6c\u53d1\u3002\u5f53\u793a\u4f8b\u5e94\u7528\u90e8\u7f72\u6210\u529f\u540e\uff08\u5728\u96c6\u7fa4\u5217\u8868\u4e2d\u67e5\u770b Deployment \u7684\u90e8\u7f72\u72b6\u6001\uff09\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u672c\u5730\u7684\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:39080","title":"\u90e8\u7f72\u793a\u4f8b\u5e94\u7528"},{"location":"zh/references/devmode-workloads/","text":"\u5404\u79cd\u5de5\u4f5c\u8d1f\u8f7d DevMode \u652f\u6301 Nocalhost \u652f\u6301\u5bf9\u51e0\u79cd\u5e38\u89c1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u5f00\u53d1\uff0c\u4e0b\u8ff0\u662f\u5bf9\u4e0d\u540c\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u5f00\u53d1\u7684\u5de5\u4f5c\u539f\u7406 Deployment Deployment \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\u4e3b\u8981\u6709\u4ee5\u4e0b\u6b65\u9aa4\uff1a 1. \u5c06 Pod \u7684\u526f\u672c\u6570\u7f29\u51cf\u4e3a 1 2. \u4fee\u6539 .spec \u4e2d manifest \u7684\u5b9a\u4e49\uff1a - \u5c06\u539f .spec \u4fdd\u5b58\u5728 annotation \u4e2d\uff0c\u7528\u4e8e\u9000\u51fa\u5f00\u53d1\u65f6\u6062\u590d\u539f\u6709\u5de5\u4f5c\u8d1f\u8f7d - \u4fee\u6539\u6307\u5b9a\u5bb9\u5668\u7684\u955c\u50cf\u4e3a\u5f00\u53d1\u955c\u50cf\uff0c\u5bb9\u5668\u7684\u540d\u5b57\u6539\u4e3a nocalhost-dev - \u589e\u52a0\u4e00\u4e2a nocalhost-sidecar \u5bb9\u5668(\u7528\u4e8e\u6587\u4ef6\u540c\u6b65) - \u521b\u5efa\u4e00\u4e2a emptyDir \u7c7b\u578b\u7684\u5377\uff0c\u6302\u8f7d\u5230 nocalhost-dev \u548c nocalhost-sidecar \u5bb9\u5668\u7684 workDir \u76ee\u5f55\u4e0b - \u521b\u5efa\u4e00\u4e2a secret \u7c7b\u578b\u7684\u5377\uff0c\u5c06\u4fdd\u5b58\u5728 Secret \u4e2d\u7684 syncthing \u8bc1\u4e66\u548c\u914d\u7f6e\u6302\u8f7d\u8fdb nocalhost-sidecar \u5bb9\u5668 - \u7981\u7528\u5bb9\u5668\u7684\u6240\u6709\u63a2\u9488\uff0cSecurityContext \u603b\u7684\u6765\u8bf4\uff0c\u7b2c 2 \u6b65\u5c31\u662f\u4fee\u6539 Deployment \u7684 manifest\uff0c\u4ee5\u4e0b\u4ee5 bookinfo \u7684 reviews \u670d\u52a1\u4f5c\u4e3a\u793a\u4f8b\uff0c\u5bf9\u6bd4\u5176\u8fdb\u5165\u5f00\u53d1\u524d\u540e\u7684 manifest \u53d8\u5316\uff1a # \u8fdb\u5165\u5f00\u53d1\u524d apiVersion : apps/v1 kind : Deployment metadata : annotations : deployment.kubernetes.io/revision : \"1\" dev.nocalhost/application-name : bookinfo dev.nocalhost/application-namespace : nh6bxsw generation : 1 labels : app : reviews app.kubernetes.io/managed-by : nocalhost name : reviews spec : progressDeadlineSeconds : 600 replicas : 1 revisionHistoryLimit : 10 selector : matchLabels : app : reviews strategy : rollingUpdate : maxSurge : 25% maxUnavailable : 25% type : RollingUpdate template : metadata : labels : app : reviews spec : containers : - env : - name : LOG_DIR value : /tmp/logs image : codingcorp-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest imagePullPolicy : Always name : reviews ports : - containerPort : 9080 protocol : TCP readinessProbe : failureThreshold : 3 initialDelaySeconds : 5 periodSeconds : 10 successThreshold : 1 tcpSocket : port : 9080 timeoutSeconds : 1 resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /tmp name : tmp - mountPath : /opt/ibm/wlp/output name : wlp-output dnsPolicy : ClusterFirst restartPolicy : Always schedulerName : default-scheduler securityContext : {} terminationGracePeriodSeconds : 30 volumes : - emptyDir : {} name : wlp-output - emptyDir : {} name : tmp # \u8fdb\u5165\u5f00\u53d1\u540e apiVersion : apps/v1 kind : Deployment metadata : annotations : deployment.kubernetes.io/revision : \"2\" dev.nocalhost/application-name : bookinfo dev.nocalhost/application-namespace : nh6bxsw # \u4e0b\u9762\u8fd9\u4e00\u4e32\u4e1c\u897f\u7528\u4e8e\u8bb0\u5f55\u8fdb\u5165\u5f00\u53d1\u524d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5b9a\u4e49\uff0c\u7528\u4e8e\u9000\u51fa\u5f00\u53d1\u65f6\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u8fd8\u539f\u5230\u539f\u6765\u7684\u72b6\u6001 nocalhost.origin.spec.json : '{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"reviews\"}},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"reviews\"}},\"spec\":{\"volumes\":[{\"name\":\"wlp-output\",\"emptyDir\":{}},{\"name\":\"tmp\",\"emptyDir\":{}}],\"containers\":[{\"name\":\"reviews\",\"image\":\"codingcorp-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest\",\"ports\":[{\"containerPort\":9080,\"protocol\":\"TCP\"}],\"env\":[{\"name\":\"LOG_DIR\",\"value\":\"/tmp/logs\"}],\"resources\":{},\"volumeMounts\":[{\"name\":\"tmp\",\"mountPath\":\"/tmp\"},{\"name\":\"wlp-output\",\"mountPath\":\"/opt/ibm/wlp/output\"}],\"readinessProbe\":{\"tcpSocket\":{\"port\":9080},\"initialDelaySeconds\":5,\"timeoutSeconds\":1,\"periodSeconds\":10,\"successThreshold\":1,\"failureThreshold\":3},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"imagePullPolicy\":\"Always\"}],\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":30,\"dnsPolicy\":\"ClusterFirst\",\"securityContext\":{},\"schedulerName\":\"default-scheduler\"}},\"strategy\":{\"type\":\"RollingUpdate\",\"rollingUpdate\":{\"maxUnavailable\":\"25%\",\"maxSurge\":\"25%\"}},\"revisionHistoryLimit\":10,\"progressDeadlineSeconds\":600}' generation : 2 labels : app : reviews app.kubernetes.io/managed-by : nocalhost name : reviews namespace : nh6bxsw spec : progressDeadlineSeconds : 600 replicas : 1 revisionHistoryLimit : 10 selector : matchLabels : app : reviews strategy : rollingUpdate : maxSurge : 25% maxUnavailable : 25% type : RollingUpdate template : metadata : labels : app : reviews spec : containers : - command : - /bin/sh - -c - tail -f /dev/null env : - name : LOG_DIR value : /tmp/logs image : codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest # \u955c\u50cf\u88ab\u66ff\u6362\u6210\u4e86\u5f00\u53d1\u955c\u50cf imagePullPolicy : Always name : nocalhost-dev # \u539f reviews \u5bb9\u5668\uff0c\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u540d\u5b57\u4f1a\u88ab\u7edf\u4e00\u6539\u6210 nocalhost-dev ports : - containerPort : 9080 protocol : TCP resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /tmp name : tmp - mountPath : /opt/ibm/wlp/output name : wlp-output - mountPath : /var/syncthing name : nocalhost-syncthing subPath : syncthing - mountPath : /var/syncthing/secret name : nocalhost-syncthing-secret - mountPath : /home/nocalhost-dev name : nocalhost-shared-volume workingDir : /home/nocalhost-dev - args : - unset STGUIADDRESS && cp /var/syncthing/secret/* /var/syncthing/ && /bin/entrypoint.sh && /bin/syncthing -home /var/syncthing command : - /bin/sh - -c image : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-sidecar:syncthing imagePullPolicy : Always name : nocalhost-sidecar # nocalhost-sidecar \u5bb9\u5668\uff0c\u548c nocalhost-dev \u5171\u540c\u6302\u8f7d\u4e86 nocalhost-shared-volume \u5377\uff0c\u7528\u4e8e\u6587\u4ef6\u540c\u6b65 resources : limits : cpu : \"1\" memory : 1Gi requests : cpu : 100m memory : 50Mi terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /var/syncthing name : nocalhost-syncthing subPath : syncthing - mountPath : /var/syncthing/secret name : nocalhost-syncthing-secret - mountPath : /home/nocalhost-dev name : nocalhost-shared-volume workingDir : /home/nocalhost-dev dnsPolicy : ClusterFirst restartPolicy : Always schedulerName : default-scheduler securityContext : {} terminationGracePeriodSeconds : 30 volumes : - emptyDir : {} name : wlp-output - emptyDir : {} name : tmp - emptyDir : {} name : nocalhost-syncthing # syncthing \u4f7f\u7528\u7684\u5377 - name : nocalhost-syncthing-secret # \u5c06\u4fdd\u5b58\u5728 Secret \u4e2d\u7684 syncthing \u8bc1\u4e66\u548c\u914d\u7f6e\u6302\u8f7d\u8fdb nocalhost-sidecar \u5bb9\u5668 secret : defaultMode : 448 items : - key : config.xml mode : 448 path : config.xml - key : cert.pem mode : 448 path : cert.pem - key : key.pem mode : 448 path : key.pem secretName : reviews-deployment-nocalhost-syncthing-secret - emptyDir : {} name : nocalhost-shared-volume \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb StatefulSet StatefulSet \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u903b\u8f91\u57fa\u672c\u548c Deployment \u4e00\u81f4\uff1a \u5c06 Pod \u7684\u526f\u672c\u6570\u7f29\u51cf\u4e3a 1 \u4fee\u6539 .spec \u4e2d manifest \u7684\u5b9a\u4e49 \uff08\u5177\u4f53\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb DaemonSet DamonSet \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u6d41\u7a0b\uff1a \u5c06 Pod \u6570\u91cf\u7f29\u51cf\u4e3a 0\uff0c\u7531\u4e8e DaemonSet \u7684 Pod \u662f\u6bcf\u4e2a node \u4e0a\u4f1a\u8dd1\u4e00\u4e2a\uff0c\u6ca1\u6709\u529e\u6cd5\u663e\u5f0f\u5730\u8bbe\u7f6e Pod \u7684\u6570\u91cf\uff0c\u53ea\u80fd\u5c06 nodeSelector \u8bbe\u7f6e\u6210\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684 node\uff0c\u95f4\u63a5\u5730\u8ba9 Pod \u6570\u91cf\u53d8 0 \u4f7f\u7528 DaemonSet \u7684 .spec \u751f\u6210\u4e00\u4e2a Deployment\uff0c \u4fee\u6539 Deployment \u4e2d .spec manifest \u7684\u5b9a\u4e49\uff08\u5177\u4f53\u4fee\u6539\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb Job Job \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u6d41\u7a0b\uff1a \u4f7f\u7528 Job \u7684 .spec \u751f\u6210\u4e00\u4e2a\u65b0\u7684 Job\uff0c \u4fee\u6539 Job \u4e2d .spec manifest \u7684\u5b9a\u4e49\uff08\u5177\u4f53\u4fee\u6539\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb CronJob CronJob \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u6d41\u7a0b\uff1a \u5c06 CronJob \u7684 .spec.schedule \u8bbe\u7f6e\u4e3a \"\"1 1 1 1 1\"\uff0c\u7981\u7528\u6389\u5b9a\u65f6\u4efb\u52a1\u7684\u8c03\u5ea6 \u4f7f\u7528 CronJob \u7684 .spec.jobTemplate \u751f\u6210\u4e00\u4e2a\u65b0\u7684 Job\uff0c \u4fee\u6539 Job \u4e2d .spec manifest \u7684\u5b9a\u4e49\uff08\u5177\u4f53\u4fee\u6539\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb Pod Pod \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u6d41\u7a0b\uff1a \u4fee\u6539 Pod \u4e2d .spec manifest \u7684\u5b9a\u4e49\uff08\u5177\u4f53\u4fee\u6539\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u5220\u9664\u539f\u6765\u7684 Pod\uff0c\u4f7f\u7528\u4fee\u6539\u540e\u7684 .spec \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Pod \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb","title":"\u5de5\u4f5c\u8d1f\u8f7d DevMode \u652f\u6301"},{"location":"zh/references/devmode-workloads/#devmode","text":"Nocalhost \u652f\u6301\u5bf9\u51e0\u79cd\u5e38\u89c1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u5f00\u53d1\uff0c\u4e0b\u8ff0\u662f\u5bf9\u4e0d\u540c\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u5f00\u53d1\u7684\u5de5\u4f5c\u539f\u7406","title":"\u5404\u79cd\u5de5\u4f5c\u8d1f\u8f7d DevMode \u652f\u6301"},{"location":"zh/references/devmode-workloads/#deployment","text":"Deployment \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\u4e3b\u8981\u6709\u4ee5\u4e0b\u6b65\u9aa4\uff1a 1. \u5c06 Pod \u7684\u526f\u672c\u6570\u7f29\u51cf\u4e3a 1 2. \u4fee\u6539 .spec \u4e2d manifest \u7684\u5b9a\u4e49\uff1a - \u5c06\u539f .spec \u4fdd\u5b58\u5728 annotation \u4e2d\uff0c\u7528\u4e8e\u9000\u51fa\u5f00\u53d1\u65f6\u6062\u590d\u539f\u6709\u5de5\u4f5c\u8d1f\u8f7d - \u4fee\u6539\u6307\u5b9a\u5bb9\u5668\u7684\u955c\u50cf\u4e3a\u5f00\u53d1\u955c\u50cf\uff0c\u5bb9\u5668\u7684\u540d\u5b57\u6539\u4e3a nocalhost-dev - \u589e\u52a0\u4e00\u4e2a nocalhost-sidecar \u5bb9\u5668(\u7528\u4e8e\u6587\u4ef6\u540c\u6b65) - \u521b\u5efa\u4e00\u4e2a emptyDir \u7c7b\u578b\u7684\u5377\uff0c\u6302\u8f7d\u5230 nocalhost-dev \u548c nocalhost-sidecar \u5bb9\u5668\u7684 workDir \u76ee\u5f55\u4e0b - \u521b\u5efa\u4e00\u4e2a secret \u7c7b\u578b\u7684\u5377\uff0c\u5c06\u4fdd\u5b58\u5728 Secret \u4e2d\u7684 syncthing \u8bc1\u4e66\u548c\u914d\u7f6e\u6302\u8f7d\u8fdb nocalhost-sidecar \u5bb9\u5668 - \u7981\u7528\u5bb9\u5668\u7684\u6240\u6709\u63a2\u9488\uff0cSecurityContext \u603b\u7684\u6765\u8bf4\uff0c\u7b2c 2 \u6b65\u5c31\u662f\u4fee\u6539 Deployment \u7684 manifest\uff0c\u4ee5\u4e0b\u4ee5 bookinfo \u7684 reviews \u670d\u52a1\u4f5c\u4e3a\u793a\u4f8b\uff0c\u5bf9\u6bd4\u5176\u8fdb\u5165\u5f00\u53d1\u524d\u540e\u7684 manifest \u53d8\u5316\uff1a # \u8fdb\u5165\u5f00\u53d1\u524d apiVersion : apps/v1 kind : Deployment metadata : annotations : deployment.kubernetes.io/revision : \"1\" dev.nocalhost/application-name : bookinfo dev.nocalhost/application-namespace : nh6bxsw generation : 1 labels : app : reviews app.kubernetes.io/managed-by : nocalhost name : reviews spec : progressDeadlineSeconds : 600 replicas : 1 revisionHistoryLimit : 10 selector : matchLabels : app : reviews strategy : rollingUpdate : maxSurge : 25% maxUnavailable : 25% type : RollingUpdate template : metadata : labels : app : reviews spec : containers : - env : - name : LOG_DIR value : /tmp/logs image : codingcorp-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest imagePullPolicy : Always name : reviews ports : - containerPort : 9080 protocol : TCP readinessProbe : failureThreshold : 3 initialDelaySeconds : 5 periodSeconds : 10 successThreshold : 1 tcpSocket : port : 9080 timeoutSeconds : 1 resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /tmp name : tmp - mountPath : /opt/ibm/wlp/output name : wlp-output dnsPolicy : ClusterFirst restartPolicy : Always schedulerName : default-scheduler securityContext : {} terminationGracePeriodSeconds : 30 volumes : - emptyDir : {} name : wlp-output - emptyDir : {} name : tmp # \u8fdb\u5165\u5f00\u53d1\u540e apiVersion : apps/v1 kind : Deployment metadata : annotations : deployment.kubernetes.io/revision : \"2\" dev.nocalhost/application-name : bookinfo dev.nocalhost/application-namespace : nh6bxsw # \u4e0b\u9762\u8fd9\u4e00\u4e32\u4e1c\u897f\u7528\u4e8e\u8bb0\u5f55\u8fdb\u5165\u5f00\u53d1\u524d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5b9a\u4e49\uff0c\u7528\u4e8e\u9000\u51fa\u5f00\u53d1\u65f6\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u8fd8\u539f\u5230\u539f\u6765\u7684\u72b6\u6001 nocalhost.origin.spec.json : '{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"reviews\"}},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"reviews\"}},\"spec\":{\"volumes\":[{\"name\":\"wlp-output\",\"emptyDir\":{}},{\"name\":\"tmp\",\"emptyDir\":{}}],\"containers\":[{\"name\":\"reviews\",\"image\":\"codingcorp-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest\",\"ports\":[{\"containerPort\":9080,\"protocol\":\"TCP\"}],\"env\":[{\"name\":\"LOG_DIR\",\"value\":\"/tmp/logs\"}],\"resources\":{},\"volumeMounts\":[{\"name\":\"tmp\",\"mountPath\":\"/tmp\"},{\"name\":\"wlp-output\",\"mountPath\":\"/opt/ibm/wlp/output\"}],\"readinessProbe\":{\"tcpSocket\":{\"port\":9080},\"initialDelaySeconds\":5,\"timeoutSeconds\":1,\"periodSeconds\":10,\"successThreshold\":1,\"failureThreshold\":3},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"imagePullPolicy\":\"Always\"}],\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":30,\"dnsPolicy\":\"ClusterFirst\",\"securityContext\":{},\"schedulerName\":\"default-scheduler\"}},\"strategy\":{\"type\":\"RollingUpdate\",\"rollingUpdate\":{\"maxUnavailable\":\"25%\",\"maxSurge\":\"25%\"}},\"revisionHistoryLimit\":10,\"progressDeadlineSeconds\":600}' generation : 2 labels : app : reviews app.kubernetes.io/managed-by : nocalhost name : reviews namespace : nh6bxsw spec : progressDeadlineSeconds : 600 replicas : 1 revisionHistoryLimit : 10 selector : matchLabels : app : reviews strategy : rollingUpdate : maxSurge : 25% maxUnavailable : 25% type : RollingUpdate template : metadata : labels : app : reviews spec : containers : - command : - /bin/sh - -c - tail -f /dev/null env : - name : LOG_DIR value : /tmp/logs image : codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest # \u955c\u50cf\u88ab\u66ff\u6362\u6210\u4e86\u5f00\u53d1\u955c\u50cf imagePullPolicy : Always name : nocalhost-dev # \u539f reviews \u5bb9\u5668\uff0c\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u540d\u5b57\u4f1a\u88ab\u7edf\u4e00\u6539\u6210 nocalhost-dev ports : - containerPort : 9080 protocol : TCP resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /tmp name : tmp - mountPath : /opt/ibm/wlp/output name : wlp-output - mountPath : /var/syncthing name : nocalhost-syncthing subPath : syncthing - mountPath : /var/syncthing/secret name : nocalhost-syncthing-secret - mountPath : /home/nocalhost-dev name : nocalhost-shared-volume workingDir : /home/nocalhost-dev - args : - unset STGUIADDRESS && cp /var/syncthing/secret/* /var/syncthing/ && /bin/entrypoint.sh && /bin/syncthing -home /var/syncthing command : - /bin/sh - -c image : codingcorp-docker.pkg.coding.net/nocalhost/public/nocalhost-sidecar:syncthing imagePullPolicy : Always name : nocalhost-sidecar # nocalhost-sidecar \u5bb9\u5668\uff0c\u548c nocalhost-dev \u5171\u540c\u6302\u8f7d\u4e86 nocalhost-shared-volume \u5377\uff0c\u7528\u4e8e\u6587\u4ef6\u540c\u6b65 resources : limits : cpu : \"1\" memory : 1Gi requests : cpu : 100m memory : 50Mi terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /var/syncthing name : nocalhost-syncthing subPath : syncthing - mountPath : /var/syncthing/secret name : nocalhost-syncthing-secret - mountPath : /home/nocalhost-dev name : nocalhost-shared-volume workingDir : /home/nocalhost-dev dnsPolicy : ClusterFirst restartPolicy : Always schedulerName : default-scheduler securityContext : {} terminationGracePeriodSeconds : 30 volumes : - emptyDir : {} name : wlp-output - emptyDir : {} name : tmp - emptyDir : {} name : nocalhost-syncthing # syncthing \u4f7f\u7528\u7684\u5377 - name : nocalhost-syncthing-secret # \u5c06\u4fdd\u5b58\u5728 Secret \u4e2d\u7684 syncthing \u8bc1\u4e66\u548c\u914d\u7f6e\u6302\u8f7d\u8fdb nocalhost-sidecar \u5bb9\u5668 secret : defaultMode : 448 items : - key : config.xml mode : 448 path : config.xml - key : cert.pem mode : 448 path : cert.pem - key : key.pem mode : 448 path : key.pem secretName : reviews-deployment-nocalhost-syncthing-secret - emptyDir : {} name : nocalhost-shared-volume \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb","title":"Deployment"},{"location":"zh/references/devmode-workloads/#statefulset","text":"StatefulSet \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u903b\u8f91\u57fa\u672c\u548c Deployment \u4e00\u81f4\uff1a \u5c06 Pod \u7684\u526f\u672c\u6570\u7f29\u51cf\u4e3a 1 \u4fee\u6539 .spec \u4e2d manifest \u7684\u5b9a\u4e49 \uff08\u5177\u4f53\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb","title":"StatefulSet"},{"location":"zh/references/devmode-workloads/#daemonset","text":"DamonSet \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u6d41\u7a0b\uff1a \u5c06 Pod \u6570\u91cf\u7f29\u51cf\u4e3a 0\uff0c\u7531\u4e8e DaemonSet \u7684 Pod \u662f\u6bcf\u4e2a node \u4e0a\u4f1a\u8dd1\u4e00\u4e2a\uff0c\u6ca1\u6709\u529e\u6cd5\u663e\u5f0f\u5730\u8bbe\u7f6e Pod \u7684\u6570\u91cf\uff0c\u53ea\u80fd\u5c06 nodeSelector \u8bbe\u7f6e\u6210\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684 node\uff0c\u95f4\u63a5\u5730\u8ba9 Pod \u6570\u91cf\u53d8 0 \u4f7f\u7528 DaemonSet \u7684 .spec \u751f\u6210\u4e00\u4e2a Deployment\uff0c \u4fee\u6539 Deployment \u4e2d .spec manifest \u7684\u5b9a\u4e49\uff08\u5177\u4f53\u4fee\u6539\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb","title":"DaemonSet"},{"location":"zh/references/devmode-workloads/#job","text":"Job \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u6d41\u7a0b\uff1a \u4f7f\u7528 Job \u7684 .spec \u751f\u6210\u4e00\u4e2a\u65b0\u7684 Job\uff0c \u4fee\u6539 Job \u4e2d .spec manifest \u7684\u5b9a\u4e49\uff08\u5177\u4f53\u4fee\u6539\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb","title":"Job"},{"location":"zh/references/devmode-workloads/#cronjob","text":"CronJob \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u6d41\u7a0b\uff1a \u5c06 CronJob \u7684 .spec.schedule \u8bbe\u7f6e\u4e3a \"\"1 1 1 1 1\"\uff0c\u7981\u7528\u6389\u5b9a\u65f6\u4efb\u52a1\u7684\u8c03\u5ea6 \u4f7f\u7528 CronJob \u7684 .spec.jobTemplate \u751f\u6210\u4e00\u4e2a\u65b0\u7684 Job\uff0c \u4fee\u6539 Job \u4e2d .spec manifest \u7684\u5b9a\u4e49\uff08\u5177\u4f53\u4fee\u6539\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb","title":"CronJob"},{"location":"zh/references/devmode-workloads/#pod","text":"Pod \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u7684\u6d41\u7a0b\uff1a \u4fee\u6539 Pod \u4e2d .spec manifest \u7684\u5b9a\u4e49\uff08\u5177\u4f53\u4fee\u6539\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Deployment\uff09 \u5220\u9664\u539f\u6765\u7684 Pod\uff0c\u4f7f\u7528\u4fee\u6539\u540e\u7684 .spec \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Pod \u542f\u7528\u4e00\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u5c06\u672c\u5730\u7684\u67d0\u4e2a\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230 nocalhost-sidecar \u4e2d syncthing \u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u53bb \u8fd0\u884c syncthing \u7684\u5ba2\u6237\u7aef\uff0c\u76d1\u6d4b\u672c\u5730\u6e90\u7801\u76ee\u5f55\uff0c\u5c06\u672c\u5730\u76ee\u5f55\u4e2d\u7684\u6539\u52a8\u540c\u6b65\u5230\u8fdc\u7aef\u5bb9\u5668\u4e2d\u53bb","title":"Pod"},{"location":"zh/references/nh-config-spec/","text":"Nocalhost \u914d\u7f6eu6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u5c5e\u6027 # \u7c7b\u578b: \u5bf9\u8c61 # \u9ed8\u8ba4\u503c: {} # \u5fc5\u987b configProperties : # \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u7248\u672c # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b version : v2 # env \u540d\u79f0\uff0c\u5728\u5f53\u524d\u914d\u7f6e\u6587\u4ef6\u76f8\u540c\u76ee\u5f55\u4e0b # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 envFile : env.dev application : # \u5e94\u7528\u540d\u79f0 # \u7c7b\u578b: string(\u7b26\u5408 dns1123 \u6807\u51c6) # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: [NAME] # \u552f\u4e00 name : coding-agile # \u5e94\u7528 manifest \u7c7b\u578b # \u7c7b\u578b: \u5355\u9009\uff0c\u53ef\u9009\u9879\uff1ahelmGit/helmRepo/rawManifest/rawManifestLocal/helmLocal # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: --type,-t manifestType : rawManifest # \u6307\u5b9a helmRepo \u7c7b\u578b\u5e94\u7528\u9ed8\u8ba4\u7684\u7248\u672c\u53f7 # type: string # deafult value: latest # optional helmVersion : 0.0.1 # helmGit: Chart \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e # helmRepo: \u65e0\u542b\u4e49 # helmLocal: chart path: Chart \u76f8\u5bf9\u4e8e\u672c\u5730\u5e94\u7528\u76ee\u5f55\u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e # rawManifestGit: k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e # rawManifestLocal: k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e\u672c\u5730\u5e94\u7528\u76ee\u5f55\u7684\u4f4d\u7f6e # kustomizeGit: k8s kustomize \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e # kustomizeLocal: k8s kustomize \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e\u672c\u5730\u5e94\u7528\u76ee\u5f55\u7684\u4f4d\u7f6e # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [\".\"] # \u5fc5\u987b# resourcePath : [] # helmGit: \u65e0\u542b\u4e49 # helmRepo: \u65e0\u542b\u4e49 # rawManifest: \u5ffd\u7565\u7684 k8s manifest \u76ee\u5f55\uff0c\u76f8\u5bf9\u4e8eGit \u4ed3\u5e93\u7684\u4f4d\u7f6e # rawManifestLocal: \u5ffd\u7565\u7684 k8s manifest \u76ee\u5f55\uff0c\u76f8\u5bf9\u4e8e\u672c\u5730\u5e94\u7528\u76ee\u5f55\u7684\u4f4d\u7f6e # helmLocal: \u65e0\u542b\u4e49 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 ignoredPath : [] # \u5e94\u7528\u5b89\u88c5\u524d\u7684\u6267\u884c\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: string # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: string # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: int # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u4ec5\u9488\u5bf9 Helm \u5e94\u7528\u7c7b\u578b\u6709\u6548\uff0c\u8986\u5199 values.yaml \u6307\u5b9a\u503c # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 helmValues : - key : DOMAIN value : ${DOMAIN:-www.coding.com} - key : DEBUG value : ${DEBUG:-true} # \u5e94\u7528\u5b89\u88c5\u65f6\u4e3a\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\u6ce8\u5165\u73af\u5883\u53d8\u91cf # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 env : - name : DEBUG value : ${DEBUG:-true} - name : DOMAIN value : \"www.coding.com\" # \u5e94\u7528\u5b89\u88c5\u65f6\u4e3a\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\u6ce8\u5165\u73af\u5883\u53d8\u91cf\uff08\u4f7f\u7528 env \u6587\u4ef6\uff09 # \u5982\u679c\u540c\u65f6\u6307\u5b9a\u4e86 env \u548c envFrom\uff0c\u90a3\u4e48\u53d6\u5e76\u96c6\uff0c\u4ea4\u96c6\u90e8\u5206\u4ee5 env \u4e3a\u51c6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 envFrom : envFile : - path : dev.env - path : dev.env # \u5e94\u7528\u5185\u7684\u5fae\u670d\u52a1\u5217\u8868 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 services : # \u5fae\u670d\u52a1\u7684\u540d\u5b57,\u5bf9\u5e94 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b - name : e-coding # \u5fae\u670d\u52a1\u5bf9\u5e94\u7684 k8s \u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b # \u7c7b\u578b: \u5355\u9009, \u53ef\u9009\u9879: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # \u9ed8\u8ba4\u503c: deployment # \u5fc5\u987b serviceType : deployment # \u670d\u52a1\u6240\u4f9d\u8d56\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6807\u7b7e\u9009\u62e9\u5668 # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 dependLabelSelector : # \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 pods : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 jobs : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" containers : # \u5f53 Pod \u6709\u591a\u4e2a\u5bb9\u5668\u65f6\uff0c\u5219\u4e3a\u9700\u8981\u5f00\u53d1\u7684\u5bb9\u5668\u63d0\u4f9b\u914d\u7f6e # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 - name : coding # \u6267\u884c\u5bb9\u5668\u7684\u5b89\u88c5\u53c2\u6570 # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 install : # \u5f53\u5e94\u7528\u88ab\u5b89\u88c5\u65f6\uff0c\u4e3a\u6307\u5b9a\u5bb9\u5668\u6ce8\u5165\u73af\u5883\u53d8\u91cf # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 env : - name : DEBUG value : \"true\" - name : DOMAIN value : \"www.coding.com\" # \u5f53\u5e94\u7528\u88ab\u5b89\u88c5\u65f6\uff0c\u4e3a\u6307\u5b9a\u5bb9\u5668\u6ce8\u5165\u73af\u5883\u53d8\u91cf\uff08\u4f7f\u7528 env \u6587\u4ef6\uff09 # \u5982\u679c\u540c\u65f6\u6307\u5b9a\u4e86 env \u548c envFrom\uff0c\u90a3\u4e48\u53d6\u5e76\u96c6\uff0c\u4ea4\u96c6\u90e8\u5206\u4ee5 env \u4e3a\u51c6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 envFrom : envFile : - path : dev.env - path : dev.env # \u5e94\u7528\u88ab\u5b89\u88c5\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 portForward : - 3306:3306 # \u6307\u5b9a\u5f00\u53d1\u53c2\u6570\u914d\u7f6e # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u5fc5\u987b dev : # \u5fae\u670d\u52a1\u7684\u6e90\u7801 Git \u4ed3\u5e93\u5730\u5740 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b gitUrl : xxx-job # \u5fae\u670d\u52a1\u7684 DevContainer \u955c\u50cf # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b image : java:8-jdk # \u8fdb\u5165 DevMode \u65f6\uff0c\u9ed8\u8ba4\u7684 shell \u73af\u5883 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"/bin/sh\" # \u53ef\u9009 shell : \"bash\" # \u6307\u5b9a DevContainer \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6e90\u7801\u4f1a\u88ab\u4f20\u8f93\u5230\u6b64\u76ee\u5f55 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"/home/nocalhost-dev\" # \u53ef\u9009 workDir : \"/root/nocalhost-dev\" # \u6307\u5b9a DevContainer \u7684\u8d44\u6e90\u7533\u8bf7\u548c\u9650\u5236\uff0c\u914d\u7f6e\u4fe1\u606f\u7b26\u5408 Kubernetes \u5bf9\u8d44\u6e90\u9650\u5b9a\u7684\u7ea6\u5b9a # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 resources : limits : cpu : \"1\" memory : 1Gi requests : cpu : \"0.5\" memory : 512Mi # \u6307\u5b9a K8s Persistent Volume \u7684 stoargeClass # storage of pv # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 storageClass : \"cbs\" # DevContainer \u4e2d\u9700\u8981\u6301\u4e45\u5316\u5b58\u50a8\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [\"/home/nocalhost-dev\"] # \u53ef\u9009 persistentVolumeDirs : # \u5f00\u53d1\u5bb9\u5668\u4e2d\u8981\u6301\u4e45\u5316\u7684\u76ee\u5f55\u8def\u5f84 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u586b - path : \"/root\" # \u76ee\u5f55\u7684\u5bb9\u91cf\uff0c\u7b26\u5408 k8s \u6807\u51c6\u5199\u6cd5 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: 10Gi # \u53ef\u9009 capacity : 100Gi # \u6307\u5b9a\u7f16\u8f91\u5668\u63d2\u4ef6\u7684\u8fd0\u884c\u547d\u4ee4(\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 command : # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u6784\u5efa\u7f16\u8bd1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 build : [ \"./gradlew\" , \"package\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 run : [ \"./gradlew\" , \"bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 debug : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadRun : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadDebug : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # \u6307\u5b9a\u7f16\u8f91\u5668\u63d2\u4ef6 debug \u53c2\u6570(\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 debug : # \u6307\u5b9a\u8fdc\u7a0b\u8c03\u8bd5\u7aef\u53e3 # \u7c7b\u578b: int # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 remoteDebugPort : 5005 # \u4f7f\u7528 Git \u4ed3\u5e93\u4e2d\u7684 .dev-container \u58f0\u660e\u6765\u6307\u5b9a DevContainer \u955c\u50cf (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 useDevContainer : false # \u6307\u5b9a\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u7684\u6587\u4ef6\u540c\u6b65\u53c2\u6570 # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 sync : # \u6587\u4ef6\u540c\u6b65\u6a21\u5f0f # \"send\" \u5355\u5411\u540c\u6b65\u672c\u5730\u6587\u4ef6\u5230\u5bb9\u5668, \"sendreceive\" \u53cc\u5411\u540c\u6b65 # \u7c7b\u578b: \u5355\u9009\uff0csend/sendreceive # \u9ed8\u8ba4\u503c: \"send\" # \u53ef\u9009 type : send # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 filePattern : - \"./src\" - \"./pkg/fff\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u5ffd\u7565\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 ignoreFilePattern : - \".git\" - \"./build\" # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u989d\u5916\u540e\u6ce8\u5165\u7684\u73af\u5883\u53d8\u91cf # type: object[] # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 env : - name : DEBUG value : \"true\" - name : DOMAIN value : \"www.coding.com\" # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u989d\u5916\u540e\u6ce8\u5165\u7684\u73af\u5883\u53d8\u91cf\uff08\u4f7f\u7528 env \u6587\u4ef6\uff09 # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 envFrom : envFile : - path : dev.env - path : dev.env # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 portForward : - 3306:3306 V1 \u914d\u7f6e\uff08\u5df2\u5f03\u7528\uffu5e94\u7528\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32(\u7b26\u5408 dns1123 \u6807\u51c6) # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: [NAME] # \u552f\u4e00 name : nocalhost # \u5e94\u7528 manifest \u7c7b\u578b # \u7c7b\u578b: \u5355\u9009\uff0c\u53ef\u9009\u9879\uff1ahelmGit/helmRepo/rawManifest # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: --type,-t manifestType : helmGit # helmGit\u7c7b\u578b\u6b64\u5b57\u6bb5\u4ee3\u8868 Chart \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002helmRepo \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u65e0\u610f\u4e49\u3002rawManifest \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e\u3002 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u5fc5\u987b\u63d0\u4f9b resourcePath : [ \"deployments/chart\" ] # \u6307\u660e\u5e94\u7528\u662f\u5426\u4ee5\u6700\u5c0f\u526f\u672c\u6570\u91cf\u5b89\u88c5 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: boolean # \u9ed8\u8ba4\u503c: false # \u53ef\u9009 # \u5bf9\u5e94 nhctl \u53c2\u6570: TODO minimalInstall : false # \u5e94\u7528\u5b89\u88c5\u524d\u7684\u6267\u884c\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5b89\u88c5\u5b8c\u6bd5\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u524d\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5185\u7684\u5fae\u670d\u52a1\u5217\u8868 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 services : # \u5fae\u670d\u52a1\u7684\u540d\u5b57,\u5bf9\u5e94 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b - name : service1 # \u5fae\u670d\u52a1\u5bf9\u5e94\u7684 k8s \u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b # \u7c7b\u578b: \u5355\u9009, \u53ef\u9009\u9879: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # \u9ed8\u8ba4\u503c: deployment # \u5fc5\u987b\u63d0\u4f9b serviceType : deployment # \u5fae\u670d\u52a1\u7684\u6e90\u7801 Git \u4ed3\u5e93\u5730\u5740 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # \u5fae\u670d\u52a1\u7684 DevContainer \u955c\u50cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # \u8fdb\u5165 DevMode \u65f6\uff0c\u9ed8\u8ba4\u7684 shell \u73af\u5883 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/bin/sh\" # \u53ef\u9009 devContainerShell : \"bash\" # \u6587\u4ef6\u540c\u6b65\u6a21\u5f0f (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \"send\" \u5355\u5411\u540c\u6b65\u672c\u5730\u6587\u4ef6\u5230\u5bb9\u5668, \"sendreceive\" \u53cc\u5411\u540c\u6b65 # \u7c7b\u578b: \u5355\u9009\uff0csend/sendreceive # \u9ed8\u8ba4\u503c: \"send\" # \u53ef\u9009 syncType : send # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 syncFilePattern : - \"./src\" - \"./pkg/fff\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u5ffd\u7565\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 ignoreFilePattern : - \".git\" - \"./build\" # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 devPorts : - 8080:8080 - :8000 # \u968f\u673a\u672c\u5730\u7aef\u53e3, \u8fdc\u7aef 8000 # \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependJobsLabelSelector : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" # \u6307\u5b9a DevContainer \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6e90\u7801\u4f1a\u88ab\u4f20\u8f93\u5230\u6b64\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/home/nocalhost-dev\" # \u53ef\u9009 workDir : \"/root/nocalhost-dev\" # DevContainer \u4e2d\u9700\u8981\u6301\u4e45\u5316\u5b58\u50a8\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\"/home/nocalhost-dev\"] # \u53ef\u9009 persistentVolumeDir : # \u5f00\u53d1\u5bb9\u5668\u4e2d\u8981\u6301\u4e45\u5316\u7684\u76ee\u5f55\u8def\u5f84 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u586b - path : \"/root\" # \u76ee\u5f55\u7684\u5bb9\u91cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: 10Gi # \u53ef\u9009 capacity : 100Gi # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u6784\u5efa\u7f16\u8bd1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 buildCommand : [ \"./gradlew\" , \"package\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 runCommand : [ \"./gradlew\" , \"bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 debugCommand : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadRunCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadDebugCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # \u8be5\u670d\u52a1\u7684\u8fdc\u7a0b\u8c03\u8bd5\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 remoteDebugPort : 5005 # \u4f7f\u7528 Git \u4ed3\u5e93\u4e2d\u7684 .dev-container \u58f0\u660e\u6765\u6307\u5b9a DevContainer \u955c\u50cf (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 useDevContainer : false # \u6307\u5b9a DevContainer \u7684\u8d44\u6e90\u7533\u8bf7\u548c\u9650\u5236,\u914d\u7f6e\u4fe1\u606f\u7b26\u5408 Kubernetes \u5bf9\u8d44\u6e90\u9650\u5b9a\u7684\u7ea6\u5b9a (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5bf9\u8c61 # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 devContainerResources : limits : cpu : \"1\" memory : 1g requests : cpu : \"0.5\" memory : 200m - name : service2 ...","title":"Nocalhost \u914d\u7f6e\u8bf4\u660e"},{"location":"zh/references/nh-config-spec/#nocalhost","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 # \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u5c5e\u6027 # \u7c7b\u578b: \u5bf9\u8c61 # \u9ed8\u8ba4\u503c: {} # \u5fc5\u987b configProperties : # \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u7248\u672c # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b version : v2 # env \u540d\u79f0\uff0c\u5728\u5f53\u524d\u914d\u7f6e\u6587\u4ef6\u76f8\u540c\u76ee\u5f55\u4e0b # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 envFile : env.dev application : # \u5e94\u7528\u540d\u79f0 # \u7c7b\u578b: string(\u7b26\u5408 dns1123 \u6807\u51c6) # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: [NAME] # \u552f\u4e00 name : coding-agile # \u5e94\u7528 manifest \u7c7b\u578b # \u7c7b\u578b: \u5355\u9009\uff0c\u53ef\u9009\u9879\uff1ahelmGit/helmRepo/rawManifest/rawManifestLocal/helmLocal # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: --type,-t manifestType : rawManifest # \u6307\u5b9a helmRepo \u7c7b\u578b\u5e94\u7528\u9ed8\u8ba4\u7684\u7248\u672c\u53f7 # type: string # deafult value: latest # optional helmVersion : 0.0.1 # helmGit: Chart \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e # helmRepo: \u65e0\u542b\u4e49 # helmLocal: chart path: Chart \u76f8\u5bf9\u4e8e\u672c\u5730\u5e94\u7528\u76ee\u5f55\u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e # rawManifestGit: k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e # rawManifestLocal: k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e\u672c\u5730\u5e94\u7528\u76ee\u5f55\u7684\u4f4d\u7f6e # kustomizeGit: k8s kustomize \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e # kustomizeLocal: k8s kustomize \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e\u672c\u5730\u5e94\u7528\u76ee\u5f55\u7684\u4f4d\u7f6e # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [\".\"] # \u5fc5\u987b# resourcePath : [] # helmGit: \u65e0\u542b\u4e49 # helmRepo: \u65e0\u542b\u4e49 # rawManifest: \u5ffd\u7565\u7684 k8s manifest \u76ee\u5f55\uff0c\u76f8\u5bf9\u4e8eGit \u4ed3\u5e93\u7684\u4f4d\u7f6e # rawManifestLocal: \u5ffd\u7565\u7684 k8s manifest \u76ee\u5f55\uff0c\u76f8\u5bf9\u4e8e\u672c\u5730\u5e94\u7528\u76ee\u5f55\u7684\u4f4d\u7f6e # helmLocal: \u65e0\u542b\u4e49 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 ignoredPath : [] # \u5e94\u7528\u5b89\u88c5\u524d\u7684\u6267\u884c\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: string # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: string # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: int # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u4ec5\u9488\u5bf9 Helm \u5e94\u7528\u7c7b\u578b\u6709\u6548\uff0c\u8986\u5199 values.yaml \u6307\u5b9a\u503c # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 helmValues : - key : DOMAIN value : ${DOMAIN:-www.coding.com} - key : DEBUG value : ${DEBUG:-true} # \u5e94\u7528\u5b89\u88c5\u65f6\u4e3a\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\u6ce8\u5165\u73af\u5883\u53d8\u91cf # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 env : - name : DEBUG value : ${DEBUG:-true} - name : DOMAIN value : \"www.coding.com\" # \u5e94\u7528\u5b89\u88c5\u65f6\u4e3a\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\u6ce8\u5165\u73af\u5883\u53d8\u91cf\uff08\u4f7f\u7528 env \u6587\u4ef6\uff09 # \u5982\u679c\u540c\u65f6\u6307\u5b9a\u4e86 env \u548c envFrom\uff0c\u90a3\u4e48\u53d6\u5e76\u96c6\uff0c\u4ea4\u96c6\u90e8\u5206\u4ee5 env \u4e3a\u51c6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 envFrom : envFile : - path : dev.env - path : dev.env # \u5e94\u7528\u5185\u7684\u5fae\u670d\u52a1\u5217\u8868 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 services : # \u5fae\u670d\u52a1\u7684\u540d\u5b57,\u5bf9\u5e94 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b - name : e-coding # \u5fae\u670d\u52a1\u5bf9\u5e94\u7684 k8s \u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b # \u7c7b\u578b: \u5355\u9009, \u53ef\u9009\u9879: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # \u9ed8\u8ba4\u503c: deployment # \u5fc5\u987b serviceType : deployment # \u670d\u52a1\u6240\u4f9d\u8d56\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6807\u7b7e\u9009\u62e9\u5668 # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 dependLabelSelector : # \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 pods : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 jobs : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" containers : # \u5f53 Pod \u6709\u591a\u4e2a\u5bb9\u5668\u65f6\uff0c\u5219\u4e3a\u9700\u8981\u5f00\u53d1\u7684\u5bb9\u5668\u63d0\u4f9b\u914d\u7f6e # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 - name : coding # \u6267\u884c\u5bb9\u5668\u7684\u5b89\u88c5\u53c2\u6570 # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 install : # \u5f53\u5e94\u7528\u88ab\u5b89\u88c5\u65f6\uff0c\u4e3a\u6307\u5b9a\u5bb9\u5668\u6ce8\u5165\u73af\u5883\u53d8\u91cf # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 env : - name : DEBUG value : \"true\" - name : DOMAIN value : \"www.coding.com\" # \u5f53\u5e94\u7528\u88ab\u5b89\u88c5\u65f6\uff0c\u4e3a\u6307\u5b9a\u5bb9\u5668\u6ce8\u5165\u73af\u5883\u53d8\u91cf\uff08\u4f7f\u7528 env \u6587\u4ef6\uff09 # \u5982\u679c\u540c\u65f6\u6307\u5b9a\u4e86 env \u548c envFrom\uff0c\u90a3\u4e48\u53d6\u5e76\u96c6\uff0c\u4ea4\u96c6\u90e8\u5206\u4ee5 env \u4e3a\u51c6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 envFrom : envFile : - path : dev.env - path : dev.env # \u5e94\u7528\u88ab\u5b89\u88c5\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 portForward : - 3306:3306 # \u6307\u5b9a\u5f00\u53d1\u53c2\u6570\u914d\u7f6e # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u5fc5\u987b dev : # \u5fae\u670d\u52a1\u7684\u6e90\u7801 Git \u4ed3\u5e93\u5730\u5740 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b gitUrl : xxx-job # \u5fae\u670d\u52a1\u7684 DevContainer \u955c\u50cf # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b image : java:8-jdk # \u8fdb\u5165 DevMode \u65f6\uff0c\u9ed8\u8ba4\u7684 shell \u73af\u5883 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"/bin/sh\" # \u53ef\u9009 shell : \"bash\" # \u6307\u5b9a DevContainer \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6e90\u7801\u4f1a\u88ab\u4f20\u8f93\u5230\u6b64\u76ee\u5f55 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"/home/nocalhost-dev\" # \u53ef\u9009 workDir : \"/root/nocalhost-dev\" # \u6307\u5b9a DevContainer \u7684\u8d44\u6e90\u7533\u8bf7\u548c\u9650\u5236\uff0c\u914d\u7f6e\u4fe1\u606f\u7b26\u5408 Kubernetes \u5bf9\u8d44\u6e90\u9650\u5b9a\u7684\u7ea6\u5b9a # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 resources : limits : cpu : \"1\" memory : 1Gi requests : cpu : \"0.5\" memory : 512Mi # \u6307\u5b9a K8s Persistent Volume \u7684 stoargeClass # storage of pv # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 storageClass : \"cbs\" # DevContainer \u4e2d\u9700\u8981\u6301\u4e45\u5316\u5b58\u50a8\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [\"/home/nocalhost-dev\"] # \u53ef\u9009 persistentVolumeDirs : # \u5f00\u53d1\u5bb9\u5668\u4e2d\u8981\u6301\u4e45\u5316\u7684\u76ee\u5f55\u8def\u5f84 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: null # \u5fc5\u586b - path : \"/root\" # \u76ee\u5f55\u7684\u5bb9\u91cf\uff0c\u7b26\u5408 k8s \u6807\u51c6\u5199\u6cd5 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: 10Gi # \u53ef\u9009 capacity : 100Gi # \u6307\u5b9a\u7f16\u8f91\u5668\u63d2\u4ef6\u7684\u8fd0\u884c\u547d\u4ee4(\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 command : # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u6784\u5efa\u7f16\u8bd1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 build : [ \"./gradlew\" , \"package\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 run : [ \"./gradlew\" , \"bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 debug : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadRun : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadDebug : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # \u6307\u5b9a\u7f16\u8f91\u5668\u63d2\u4ef6 debug \u53c2\u6570(\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 debug : # \u6307\u5b9a\u8fdc\u7a0b\u8c03\u8bd5\u7aef\u53e3 # \u7c7b\u578b: int # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 remoteDebugPort : 5005 # \u4f7f\u7528 Git \u4ed3\u5e93\u4e2d\u7684 .dev-container \u58f0\u660e\u6765\u6307\u5b9a DevContainer \u955c\u50cf (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: string # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 useDevContainer : false # \u6307\u5b9a\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u7684\u6587\u4ef6\u540c\u6b65\u53c2\u6570 # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 sync : # \u6587\u4ef6\u540c\u6b65\u6a21\u5f0f # \"send\" \u5355\u5411\u540c\u6b65\u672c\u5730\u6587\u4ef6\u5230\u5bb9\u5668, \"sendreceive\" \u53cc\u5411\u540c\u6b65 # \u7c7b\u578b: \u5355\u9009\uff0csend/sendreceive # \u9ed8\u8ba4\u503c: \"send\" # \u53ef\u9009 type : send # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 filePattern : - \"./src\" - \"./pkg/fff\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u5ffd\u7565\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 ignoreFilePattern : - \".git\" - \"./build\" # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u989d\u5916\u540e\u6ce8\u5165\u7684\u73af\u5883\u53d8\u91cf # type: object[] # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 env : - name : DEBUG value : \"true\" - name : DOMAIN value : \"www.coding.com\" # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u989d\u5916\u540e\u6ce8\u5165\u7684\u73af\u5883\u53d8\u91cf\uff08\u4f7f\u7528 env \u6587\u4ef6\uff09 # \u7c7b\u578b: object # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 envFrom : envFile : - path : dev.env - path : dev.env # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: string[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 portForward : - 3306:3306","title":"Nocalhost \u914d\u7f6e"},{"location":"zh/references/nh-config-spec/#v1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 # \u5e94\u7528\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32(\u7b26\u5408 dns1123 \u6807\u51c6) # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: [NAME] # \u552f\u4e00 name : nocalhost # \u5e94\u7528 manifest \u7c7b\u578b # \u7c7b\u578b: \u5355\u9009\uff0c\u53ef\u9009\u9879\uff1ahelmGit/helmRepo/rawManifest # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: --type,-t manifestType : helmGit # helmGit\u7c7b\u578b\u6b64\u5b57\u6bb5\u4ee3\u8868 Chart \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002helmRepo \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u65e0\u610f\u4e49\u3002rawManifest \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e\u3002 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u5fc5\u987b\u63d0\u4f9b resourcePath : [ \"deployments/chart\" ] # \u6307\u660e\u5e94\u7528\u662f\u5426\u4ee5\u6700\u5c0f\u526f\u672c\u6570\u91cf\u5b89\u88c5 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: boolean # \u9ed8\u8ba4\u503c: false # \u53ef\u9009 # \u5bf9\u5e94 nhctl \u53c2\u6570: TODO minimalInstall : false # \u5e94\u7528\u5b89\u88c5\u524d\u7684\u6267\u884c\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5b89\u88c5\u5b8c\u6bd5\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u524d\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5185\u7684\u5fae\u670d\u52a1\u5217\u8868 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 services : # \u5fae\u670d\u52a1\u7684\u540d\u5b57,\u5bf9\u5e94 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b - name : service1 # \u5fae\u670d\u52a1\u5bf9\u5e94\u7684 k8s \u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b # \u7c7b\u578b: \u5355\u9009, \u53ef\u9009\u9879: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # \u9ed8\u8ba4\u503c: deployment # \u5fc5\u987b\u63d0\u4f9b serviceType : deployment # \u5fae\u670d\u52a1\u7684\u6e90\u7801 Git \u4ed3\u5e93\u5730\u5740 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # \u5fae\u670d\u52a1\u7684 DevContainer \u955c\u50cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # \u8fdb\u5165 DevMode \u65f6\uff0c\u9ed8\u8ba4\u7684 shell \u73af\u5883 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/bin/sh\" # \u53ef\u9009 devContainerShell : \"bash\" # \u6587\u4ef6\u540c\u6b65\u6a21\u5f0f (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \"send\" \u5355\u5411\u540c\u6b65\u672c\u5730\u6587\u4ef6\u5230\u5bb9\u5668, \"sendreceive\" \u53cc\u5411\u540c\u6b65 # \u7c7b\u578b: \u5355\u9009\uff0csend/sendreceive # \u9ed8\u8ba4\u503c: \"send\" # \u53ef\u9009 syncType : send # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 syncFilePattern : - \"./src\" - \"./pkg/fff\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u5ffd\u7565\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 ignoreFilePattern : - \".git\" - \"./build\" # \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u540e\u81ea\u52a8\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 devPorts : - 8080:8080 - :8000 # \u968f\u673a\u672c\u5730\u7aef\u53e3, \u8fdc\u7aef 8000 # \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependJobsLabelSelector : - \"job-name=init-job\" - \"app.kubernetes.io/name=init-job\" # \u6307\u5b9a DevContainer \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6e90\u7801\u4f1a\u88ab\u4f20\u8f93\u5230\u6b64\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/home/nocalhost-dev\" # \u53ef\u9009 workDir : \"/root/nocalhost-dev\" # DevContainer \u4e2d\u9700\u8981\u6301\u4e45\u5316\u5b58\u50a8\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\"/home/nocalhost-dev\"] # \u53ef\u9009 persistentVolumeDir : # \u5f00\u53d1\u5bb9\u5668\u4e2d\u8981\u6301\u4e45\u5316\u7684\u76ee\u5f55\u8def\u5f84 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u586b - path : \"/root\" # \u76ee\u5f55\u7684\u5bb9\u91cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: 10Gi # \u53ef\u9009 capacity : 100Gi # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u6784\u5efa\u7f16\u8bd1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 buildCommand : [ \"./gradlew\" , \"package\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 runCommand : [ \"./gradlew\" , \"bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 debugCommand : [ \"./gradlew\" , \"bootRun\" , \"--debug-jvm\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadRunCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" ] # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadDebugCommand : [ \"bash\" , \"-c\" , \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" ] # \u8be5\u670d\u52a1\u7684\u8fdc\u7a0b\u8c03\u8bd5\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 remoteDebugPort : 5005 # \u4f7f\u7528 Git \u4ed3\u5e93\u4e2d\u7684 .dev-container \u58f0\u660e\u6765\u6307\u5b9a DevContainer \u955c\u50cf (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 useDevContainer : false # \u6307\u5b9a DevContainer \u7684\u8d44\u6e90\u7533\u8bf7\u548c\u9650\u5236,\u914d\u7f6e\u4fe1\u606f\u7b26\u5408 Kubernetes \u5bf9\u8d44\u6e90\u9650\u5b9a\u7684\u7ea6\u5b9a (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5bf9\u8c61 # \u9ed8\u8ba4\u503c: {} # \u53ef\u9009 devContainerResources : limits : cpu : \"1\" memory : 1g requests : cpu : \"0.5\" memory : 200m - name : service2 ...","title":"V1 \u914d\u7f6e\uff08\u5df2\u5f03\u7528\uff09"},{"location":"zh/references/php-debug/","text":"\u8fdc\u7a0b\u8c03\u8bd5 PHP \u5e94\u7528 Note \u76ee\u6807 : \u4f7f\u7528 Nocalhost \u8fdc\u7a0b\u8c03\u8bd5 PHP \u5e94\u7528 Estimate time : 3 \u5206\u949f Requirements : - \u5df2\u5b89\u88c5 PhpStorm - \u5df2\u5b89\u88c5 Nocalhost IDE \u63d2\u4ef6 1. \u914d\u7f6e\u8fdc\u7a0b\u8c03\u8bd5\u547d\u4ee4\u548c\u7aef\u53e3 \u6253\u5f00 PhpStorm \u548c Nocalhost JetBrains \u63d2\u4ef6 \u9009\u62e9\u4e00\u4e2a\u9700\u8981\u8c03\u8bd5\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u53f3\u952e\u70b9\u51fb\u9009\u62e9 Config \u914d\u7f6e\u8fdc\u7a0b\u8c03\u8bd5\u547d\u4ee4\u548c\u7aef\u53e3 service : containers : dev : command : debug : - ./debug.sh debug : remoteDebugPort : 9003 ... \u8fd9\u91cc\u5c06\u4f7f\u7528 Xdebug \u7684\u9ed8\u8ba4\u8c03\u8bd5\u7aef\u53e3 9003 2. \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f 3. \u6dfb\u52a0\u8c03\u8bd5\u914d\u7f6e \u6dfb\u52a0 Nocalhost \u8c03\u8bd5\u914d\u7f6e 4. \u8bbe\u7f6e\u65ad\u70b9\uff0c\u5f00\u59cb\u8c03\u8bd5 \u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5f00\u59cb\u8c03\u8bd5 Nocalhost \u7684 PHP \u8fdc\u7a0b\u8c03\u8bd5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f Nocalhost \u4f7f\u7528 Xdebug \u8c03\u8bd5\u8fdc\u7a0b PHP \u5e94\u7528","title":"\u8fdc\u7a0b\u8c03\u8bd5 PHP \u5e94\u7528"},{"location":"zh/references/php-debug/#php","text":"Note \u76ee\u6807 : \u4f7f\u7528 Nocalhost \u8fdc\u7a0b\u8c03\u8bd5 PHP \u5e94\u7528 Estimate time : 3 \u5206\u949f Requirements : - \u5df2\u5b89\u88c5 PhpStorm - \u5df2\u5b89\u88c5 Nocalhost IDE \u63d2\u4ef6","title":"\u8fdc\u7a0b\u8c03\u8bd5 PHP \u5e94\u7528"},{"location":"zh/references/php-debug/#1","text":"\u6253\u5f00 PhpStorm \u548c Nocalhost JetBrains \u63d2\u4ef6 \u9009\u62e9\u4e00\u4e2a\u9700\u8981\u8c03\u8bd5\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u53f3\u952e\u70b9\u51fb\u9009\u62e9 Config \u914d\u7f6e\u8fdc\u7a0b\u8c03\u8bd5\u547d\u4ee4\u548c\u7aef\u53e3 service : containers : dev : command : debug : - ./debug.sh debug : remoteDebugPort : 9003 ... \u8fd9\u91cc\u5c06\u4f7f\u7528 Xdebug \u7684\u9ed8\u8ba4\u8c03\u8bd5\u7aef\u53e3 9003","title":"1. \u914d\u7f6e\u8fdc\u7a0b\u8c03\u8bd5\u547d\u4ee4\u548c\u7aef\u53e3"},{"location":"zh/references/php-debug/#2","text":"","title":"2. \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f"},{"location":"zh/references/php-debug/#3","text":"\u6dfb\u52a0 Nocalhost \u8c03\u8bd5\u914d\u7f6e","title":"3. \u6dfb\u52a0\u8c03\u8bd5\u914d\u7f6e"},{"location":"zh/references/php-debug/#4","text":"\u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5f00\u59cb\u8c03\u8bd5","title":"4. \u8bbe\u7f6e\u65ad\u70b9\uff0c\u5f00\u59cb\u8c03\u8bd5"},{"location":"zh/references/php-debug/#nocalhost-php","text":"Nocalhost \u4f7f\u7528 Xdebug \u8c03\u8bd5\u8fdc\u7a0b PHP \u5e94\u7528","title":"Nocalhost \u7684 PHP \u8fdc\u7a0b\u8c03\u8bd5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f"},{"location":"zh/server/deployment/","text":"","title":"\u90e8\u7f72\u6559\u7a0b"},{"location":"zh/server/overview/","text":"","title":"\u6982\u89c8"},{"location":"zh/server/quick-start/","text":"","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"zh/server/using-server/","text":"","title":"\u4f7f\u7528 Nocalhost Server"}]}